<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<link rel="self" href="http://ian.bebbs.co.uk/" />
	<id>http://ian.bebbs.co.uk/</id>
	<title>Ian Bebbington</title>
	<rights>2017</rights>
	<updated>2017-01-27T09:02:30Z</updated>
	<logo>http://ian.bebbs.co.uk/y3mVYjKPwLNM4SpxZ-xLtIcMigGcxEzKTdUxFym5tI2hMna1NOz6e5axIvMYoGFlV1ftnmELd2YUX4QowbgtJ_iJkEHUEXpngrQ47dG5_hm88hO2ZJM1mRZLWwhDoB0KfKuu6WFFqmWoKb_2f18gkAqJQ20PkRodrAj4PzkSSgO9A4%253Fwidth=660&amp;height=371&amp;cropmode=none</logo>
	<subtitle>IObservable&lt;Opinion&gt;</subtitle>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/CombiningUwpSpeechSynthesizerWithAudioGraph" />
		<id>http://ian.bebbs.co.uk/posts/CombiningUwpSpeechSynthesizerWithAudioGraph</id>
		<title>Combining the UWP SpeechSynthesizer and AudioGraph APIs</title>
		<updated>2017-01-25T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;Synchronicity is a wonderful thing.&lt;/p&gt;
&lt;p&gt;Just this morning I was considering using the new &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.speechsynthesis.speechsynthesizer.aspx"&gt;SpeechSynthesizer&lt;/a&gt; capabilities of the UWP platform to add spoken language to my &lt;a href="https://www.microsoft.com/en-gb/store/p/toddlerbox/9nblggh3zr4l"&gt;ToddlerBox app for Xbox&lt;/a&gt;. I had already started using the &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.audiograph.aspx"&gt;AudioGraph&lt;/a&gt; classes to play sounds in the app so ideally wanted to continue using this API to emit speech.&lt;/p&gt;
&lt;p&gt;Then, during my morning... ahem... ablutions, I came across &lt;a href="https://mtaulty.com/2017/01/15/windows-10-uwp-iot-core-speechsynthesizer-raspberry-pi-and-audio-popping/"&gt;this post&lt;/a&gt; by Mike Taulty who was looking to do the same thing but for different reasons. It seems that the RaspberryPi has a firmware issue that causes a &lt;a href="https://social.msdn.microsoft.com/Forums/en-US/7c312972-6a09-4acd-8a3f-c59485a81d74/clicking-sound-during-start-and-stop-of-audio-playback?forum=WindowsIoT"&gt;popping noise&lt;/a&gt;  every time speech is emitted using the MediaPlayer and AudioGraph seems to be a way of resolving it.&lt;/p&gt;
&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;Mike had implemented a means of emitting speech via AudioGraph by saving the &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.speechsynthesis.speechsynthesisstream.aspx?f=255&amp;amp;MSPPError=-2147217396"&gt;SpeechSynthesisStream&lt;/a&gt; to a  temporary file and then using multiple &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.audiofileinputnode.aspx"&gt;AudioFileInputNode&lt;/a&gt; instances to render the speech to the AudioGraph.&lt;/p&gt;
&lt;p&gt;"Well", I thought, "there's got to be a better way. How hard can this be..."&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Turns out the answer is: "Not all that hard, but...".&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;My approach&lt;/h2&gt;
&lt;p&gt;I wanted to find a way to eliminate the need for the temporary files and render the speech stream directly to the graph.&lt;/p&gt;
&lt;p&gt;To do this, I first saved the SpeechSynthesisStream to a file so that I could examine the content. As expected, the file turned out to be a simple 32-bit, mono, ADPCM waveform in &lt;a href="http://soundfile.sapp.org/doc/WaveFormat/"&gt;WAV/RIFF format&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Having previously messed about with AudioGraph I knew there was a way of creating an in-memory waveform and that the &lt;a href="https://github.com/Microsoft/Windows-universal-samples"&gt;Windows-Universal-Samples github repository&lt;/a&gt; had an &lt;a href="https://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/AudioCreation"&gt;AudioCreation sample&lt;/a&gt; that &lt;a href="https://github.com/Microsoft/Windows-universal-samples/blob/master/Samples/AudioCreation/cs/AudioCreation/Scenario3_FrameInputNode.xaml.cs"&gt;showed how to do this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fundamentally, this sample shows how to use the &lt;a href="https://msdn.microsoft.com/en-gb/library/windows/apps/windows.media.audio.audioframeinputnode.quantumstarted"&gt;QuantumStarted event&lt;/a&gt; of the &lt;a href="https://msdn.microsoft.com/library/windows/apps/dn914147"&gt;AudioFrameInputNode&lt;/a&gt; to dynamically add &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audioframe.aspx"&gt;AudioFrame&lt;/a&gt; to the AudioFrameInputNode which are then rendered to the &lt;a href="https://msdn.microsoft.com/en-gb/library/windows/apps/dn914151"&gt;output node&lt;/a&gt;. An extract from the sample is shown here:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;  unsafe private AudioFrame GenerateAudioData(uint samples)
  {
      // Buffer size is (number of samples) * (size of each sample)
      // We choose to generate single channel (mono) audio. For multi-channel, multiply by number of channels
      uint bufferSize = samples * sizeof(float);
      AudioFrame frame = new Windows.Media.AudioFrame(bufferSize);

      using (AudioBuffer buffer = frame.LockBuffer(AudioBufferAccessMode.Write))
      using (IMemoryBufferReference reference = buffer.CreateReference())
      {
          byte* dataInBytes;
          uint capacityInBytes;
          float* dataInFloat;

          // Get the buffer from the AudioFrame
          ((IMemoryBufferByteAccess)reference).GetBuffer(out dataInBytes, out capacityInBytes);

          // Cast to float since the data we are generating is float
          dataInFloat = (float*)dataInBytes;

          float freq = 1000; // choosing to generate frequency of 1kHz
          float amplitude = 0.3f;
          int sampleRate = (int)graph.EncodingProperties.SampleRate;
          double sampleIncrement = (freq * (Math.PI * 2)) / sampleRate;

          // Generate a 1kHz sine wave and populate the values in the memory buffer
          for (int i = 0; i &amp;lt; samples; i++)
          {
              double sinValue = amplitude * Math.Sin(theta);
              dataInFloat[i] = (float)sinValue;
              theta += sampleIncrement;
          }
      }

      return frame;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Imitation being the sincerest form of flattery, I then refactored this code to read the binary data from the SpeechSynthesisStream rather than generate a sine wave as shown above. This was greatly facilited by the &lt;a href="https://msdn.microsoft.com/en-us/library/hh582142.aspx"&gt;WindowsRuntimeStreamExtensions.AsStreamForRead&lt;/a&gt; method which allowed me to use basic &lt;a href="https://msdn.microsoft.com/en-us/library/system.io.stream.aspx"&gt;Stream&lt;/a&gt; methods  (specifically &lt;a href="https://msdn.microsoft.com/en-us/library/system.io.stream.readbyte.aspx"&gt;Stream.ReadByte()&lt;/a&gt;) instead of having to mess about with &lt;a href="https://msdn.microsoft.com/en-us/library/windows.media.speechsynthesis.speechsynthesisstream.readasync.aspx"&gt;IBuffer&lt;/a&gt; instances.&lt;/p&gt;
&lt;p&gt;In short order, I ended up with the code below (where &lt;code&gt;_stream&lt;/code&gt; is a member of the containing class pointing to the underlying SpeechSynthesisStream):&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;    private unsafe void QuantumStarted(AudioFrameInputNode sender, FrameInputNodeQuantumStartedEventArgs args)
    {
        uint numSamplesNeeded = (uint)args.RequiredSamples;

        if (numSamplesNeeded != 0 &amp;amp;&amp;amp; _stream.Position &amp;lt; _stream.Length)
        {
            uint bufferSize = numSamplesNeeded * sizeof(float);
            AudioFrame frame = new AudioFrame(bufferSize);

            using (AudioBuffer buffer = frame.LockBuffer(AudioBufferAccessMode.Write))
            {
                using (IMemoryBufferReference reference = buffer.CreateReference())
                {
                    byte* dataInBytes;
                    uint capacityInBytes;

                    // Get the buffer from the AudioFrame
                    ((IMemoryBufferByteAccess)reference).GetBuffer(out dataInBytes, out capacityInBytes);

                    for (int i = 0; i &amp;lt; bufferSize; i++)
                    {
                        if (_stream.Position &amp;lt; _stream.Length)
                        {
                            dataInBytes[i] = (byte)_stream.ReadByte();
                        }
                        else
                        {
                            dataInBytes[i] = 0;
                        }
                    }
                }
            }

            _frameInputNode.AddFrame(frame);
        }
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And to my surprised, it worked!&lt;/p&gt;
&lt;p&gt;I encapsulated this code into a class named &lt;a href="https://github.com/ibebbs/BlogProjects/blob/master/UwpSpeechAudio/GraphExtensions.cs"&gt;AudioSpeechInputNode&lt;/a&gt; and made this class implement &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.iaudioinputnode.aspx"&gt;IAudioInputNode&lt;/a&gt; so it could be treated like any other node in the AudioGraph. Finally I added an extension method to AudioGraph that created instance of this node in the same way that other nodes are created. This is shown below:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;    AudioSpeechInputNode speechInputNode = await _graph.CreateSpeechInputNodeAsync(new SpeechSynthesizer(), "As input node");
    speechInputNode.AddOutgoingConnection(_outputNode); // device output node
    speechInputNode.Stop();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this node in hand you're then at liberty to call the &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.iaudionode.start.aspx"&gt;Start&lt;/a&gt;, &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.iaudionode.stop.aspx"&gt;Stop&lt;/a&gt; and &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.iaudionode.reset.aspx"&gt;Reset&lt;/a&gt; methods as you see fit.&lt;/p&gt;
&lt;p&gt;Et voila, a SpeechSynthesisStream rendered in an AudioGraph without the need for an intermediary file.&lt;/p&gt;
&lt;h2&gt;You said there was a 'but' ...&lt;/h2&gt;
&lt;p&gt;Well, yes. Three of them actually.&lt;/p&gt;
&lt;h3&gt;The big 'but'&lt;/h3&gt;
&lt;p&gt;While this approach certainly solves the issue with needing temporary files and a 'popping' sound each time speech is emitted, I'm afraid to say it does not resolve the 'popping' noise encountered when the application starts on a RaspberryPi.&lt;/p&gt;
&lt;p&gt;Being a good nerd, I had a spare RaspberryPi 3 hanging around with a recent version of Windows 10 IoT Core installed. It took just a few minutes to recompile my &lt;a href="https://github.com/ibebbs/BlogProjects/tree/master/UwpSpeechAudio"&gt;sample app&lt;/a&gt; to ARM and deploy it to the Pi whereupon I could confirm that there is no popping when emitting speech but there is when the application starts. In fact, I receive three distinct 'pops' during application start-up which, by studiously placing breakpoints, I isolated to &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.audiograph.createasync.aspx"&gt;AudioGraph.CreateAsync&lt;/a&gt; (two pops) and &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.audio.audiograph.start.aspx"&gt;AudioGraph.Start&lt;/a&gt; (one pop).&lt;/p&gt;
&lt;p&gt;Microsoft would have us believe that this is an issue with the RaspberryPi firmware but, as it also occurs on &lt;a href="https://developer.qualcomm.com/hardware/dragonboard-410c"&gt;DragonBoard 410c&lt;/a&gt; I'm more inclined to believe it's an issue with the Windows drivers. On a hunch, I've just ordered a &lt;a href="https://www.amazon.co.uk/dp/B016CU2PEU"&gt;USB Sound Adapter from Amazon&lt;/a&gt;. This device is &lt;em&gt;meant&lt;/em&gt; to be Windows and RaspberryPi compatible (which doesn't necessarily mean it'll work with IoT Core on RPi) and, if it works, I'll be very interested to see if I still get the popping noises when the application starts. I'll update this post once I have an answer...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Update: I'm pleased to say that, not only does &lt;a href="https://www.amazon.co.uk/dp/B016CU2PEU"&gt;this device&lt;/a&gt; work with Windows 10 IoT Core running on the RaspberryPi 3, but it also resolves the issue with popping noises when the application starts. Of course, this would probably also solve the issue with popping noises when rendering speech through MediaPlayer too making my solution above less necessary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;The intermediate 'but'&lt;/h3&gt;
&lt;p&gt;My code makes a number of assumptions about the format of the SpeechSynthesisStream and encapsulates these as constants. It would be much better to read the format from the WAVE 'fmt ' chunk of the underlying RIFF structures in the stream but, being a pragmatic, &lt;a href="https://martinfowler.com/bliki/Yagni.html"&gt;YAGNI principled&lt;/a&gt; developer... I skipped this for now.&lt;/p&gt;
&lt;h3&gt;The small 'but'&lt;/h3&gt;
&lt;p&gt;As is probably very obvious, the code above is in no way optimised. I'm sure there are &lt;em&gt;much&lt;/em&gt; better and faster ways of storing and copying the binary data from the SpeechSynthesisStream into the AudioBuffer (perhaps just using an intermediate byte array would help) but, for now, this code works fine.&lt;/p&gt;
&lt;h2&gt;Show me the code&lt;/h2&gt;
&lt;p&gt;All the code for the above can be found in a &lt;a href="https://github.com/ibebbs/BlogProjects/tree/master/UwpSpeechAudio"&gt;UWP sample app&lt;/a&gt; within the &lt;a href="https://github.com/ibebbs/BlogProjects"&gt;BlogProjects&lt;/a&gt; repository of my &lt;a href="https://github.com/ibebbs"&gt;Github&lt;/a&gt; account.&lt;/p&gt;
&lt;p&gt;Do &lt;a href="https://twitter.com/ibebbs"&gt;get in touch&lt;/a&gt; if you find this code helpful or have suggestions for improving it.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Synchronicity is a wonderful thing.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartIV" />
		<id>http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartIV</id>
		<title>Home Network Monitoring - Part IV</title>
		<updated>2016-04-16T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;In the last post, I used the Logstash &lt;code&gt;dns&lt;/code&gt; filter to translate remote server IP addresses into recognisable domain names. In this post, I will look to perform a similar operation for local IP addresses in order to translate them into recognisable device names.&lt;/p&gt;
&lt;h1&gt;translating local ip addresses to device names&lt;/h1&gt;
&lt;p&gt;While in the last post we could use the &lt;code&gt;dns&lt;/code&gt; filter to perform a reverse dns lookup to resolve a remote domain name for an IP address, this is not possible with local IP addresses. Fortunately, I have two key tools that I can use to perform a similar operation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;While my router behaves as a DHCP server, it has a feature that allows it to always allocate the same IP address to a given MAC address. Therefore I know a given device will always have a specific IP address.&lt;/li&gt;
&lt;li&gt;Logstash provides the &lt;code&gt;translate&lt;/code&gt; filter which allows you to map from one value to another via a dictionary lookup.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With my routers "Bind IP to MAC" function set up, I will author a new &lt;code&gt;yaml&lt;/code&gt; file that meets the specifications outlined in the &lt;code&gt;translate&lt;/code&gt; filter &lt;a href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-translate.html#plugins-filters-translate-destination"&gt;documentation&lt;/a&gt;. It looks like this:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;192.168.1.3: TPLink Range Extender
192.168.1.9: Ricoh Printer
192.168.1.10: Server A
192.168.1.21: PC A
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'll name this file &lt;code&gt;IPLookup.yaml&lt;/code&gt; and save it besides the &lt;code&gt;syslog.config&lt;/code&gt; file. Next I need to add additional filters to &lt;code&gt;syslog.config&lt;/code&gt; which now looks as follows:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;input {
  tcp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
  udp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
}

filter {
    grok {
        match =&amp;gt; [ "message", "&amp;lt;%{POSINT:syslog_pri}&amp;gt;%{SYSLOGTIMESTAMP:syslog_timestamp} Vigor\: Local User \(MAC=%{MAC:source_mac}\): %{IP:source_address}(?::%{POSINT:source_port})? -&amp;gt; %{IP:destination_address}(?::%{POSINT:destination_port})? \((?&amp;lt;protocol&amp;gt;TCP|UDP)\)" ]
        add_tag =&amp;gt; "access"
    }
    if "access" in [tags] {
        mutate {
            add_field =&amp;gt; {
              "source_host" =&amp;gt; "%{[source_address]}"
              "destination_host" =&amp;gt; "%{[destination_address]}"
            }
        }
        dns {
            reverse =&amp;gt; [ "destination_host" ]
            action =&amp;gt; "replace"
            nameserver =&amp;gt; "192.168.1.1"
        }
        translate {
            destination =&amp;gt; "source_host"
            dictionary_path =&amp;gt; "config\IPLookup.yaml"
            fallback =&amp;gt; "%{source_address}"
            field =&amp;gt; "source_address"      
            override =&amp;gt; true   
        }
    }
}

output {
  elasticsearch {
    hosts =&amp;gt; ["192.168.1.30:9200"]
    index =&amp;gt; "syslog-%{+YYYY.MM.dd}"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the &lt;code&gt;translate&lt;/code&gt; filter where I lookup the &lt;code&gt;source_address&lt;/code&gt; field in the &lt;code&gt;IPLookup.yaml&lt;/code&gt; file and put the result in the &lt;code&gt;source_host&lt;/code&gt; field. If not found, the &lt;code&gt;fallback&lt;/code&gt; value instructs the filter to output the &lt;code&gt;source_address&lt;/code&gt; into the &lt;code&gt;source_host&lt;/code&gt; field. The &lt;code&gt;override&lt;/code&gt; value is set to true as the &lt;code&gt;source_host&lt;/code&gt; field is added in the &lt;code&gt;mutate&lt;/code&gt; filter above as a fail-safe.&lt;/p&gt;
&lt;p&gt;With the changes to configuration in place, I once again restart Logstash. Once a syslog message has been received, I get the mapping from ElasticSearch and update it to mark the &lt;code&gt;local_host&lt;/code&gt; field as &lt;code&gt;not_analyzed&lt;/code&gt;. Then, in Kibana, I refresh the field list for the 'syslog-*' index, add 'local_host' to the 'Syslog Messages' saved search, load 'Access By Local Address' visualization and modify it to use 'local_host' rather than the 'local_address' field and save it as 'Access By Local Host'. Finally, I replace this visualization on my dashboard and get the following:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithAccessByLocalHost.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Access By Local Host"&gt;
&lt;h1&gt;further mappings&lt;/h1&gt;
&lt;p&gt;Now I've got the translation of local IP addresses to names working, I'm going to add a few more translations for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP Address to Operating System&lt;/li&gt;
&lt;li&gt;IP Address to Wired/WiFi connection&lt;/li&gt;
&lt;li&gt;TCP and UDP Port to Protocol (using a &lt;a href="http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml"&gt;CSV from IANA&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these in place, the dashboard is starting to come together:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithLocalPortAndOsLookups.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Local Port And Os Lookups"&gt;
&lt;h1&gt;summary&lt;/h1&gt;
&lt;p&gt;In this post, I showed how to display local device names rather than IP addresses by using LogStash's &lt;code&gt;translate&lt;/code&gt; filter. I then used this filter to provide further information about local device and protocols.&lt;/p&gt;
&lt;p&gt;In the next post, I'll show how to add some variation to the dashboard by mapping destination locations.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;In the last post, I used the Logstash &lt;code&gt;dns&lt;/code&gt; filter to translate remote server IP addresses into recognisable domain names. In this post, I will look to perform a similar operation for local IP addresses in order to translate them into recognisable device names.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/MonsterPi" />
		<link rel="enclosure" type="image" href="http://ian.bebbs.co.uk/y3mJgriVgVEFWAdldfy7Bj9MEJznwpJtJ4NFHotqnwZ0rWbC2h8ewxTr9MSxr6LCGyQBB-TvmYCV9j4YVZbu2EtVHagPnyc6O_LIZV2NqAiPfrfNkZ8P-XBV6SI0GiL7zx0iuOTniKjZ-Gq9_lN6SLkkIMHMx14EE3l2XuZQ1cTPfI%253Fwidth=967&amp;height=273&amp;cropmode=none" />
		<id>http://ian.bebbs.co.uk/posts/MonsterPi</id>
		<title>MonsterPi</title>
		<updated>2016-10-08T00:00:00Z</updated>
		<content>
                                        


&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;I've long loved the idea of home automation. From X10 and LightwaveRF through to modern Bluetooth and Wifi connected devices, I have played with dozens of technologies in search of home automation nirvana. But recently I have watched with growing bewilderment at the incredible number of "cloud-connected" home automation devices being released and the eagerness with which they're snapped up by naive consumers hungry to control everything from the carefree comfort of their iPhone.&lt;/p&gt;
&lt;p&gt;You see, while you can buy a myriad of IoT devices off the shelf nowadays, they nearly all come with some form of "cloud-service" that is necessary in order for the device to work as sold. As the more wily of reader will no doubt be aware, this exposes your home network to innumerable &lt;a href="https://it.slashdot.org/story/16/10/03/1359200/source-code-for-iot-botnet-mirai-which-took-down-krebs-on-security-website-with-ddos-attack-released"&gt;security concerns&lt;/a&gt;, &lt;a href="https://it.slashdot.org/story/16/08/08/1449221/hackers-make-the-first-ever-ransomware-for-smart-thermostats"&gt;potential abuses&lt;/a&gt; and an &lt;a href="https://tech.slashdot.org/story/16/01/14/1347243/nest-thermostat-bug-leaves-owners-without-heating"&gt;external point of failure&lt;/a&gt; that cannot be closed/fixed without sacrificing some or all of the functionality of the new fangled device.&lt;/p&gt;
&lt;p&gt;While I understand the ostensible benefits of this approach (ease of setup, remote use without manually opening firewall ports, centralised patching and upgrading, etc), sacrificing control of (potentially hazardous or invasive) devices within my home is not a value proposition I am comfortable with. I would very much like to see a new (or is that old?) breed of device that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;does not require an internet connection to operate with all features intact,&lt;/li&gt;
&lt;li&gt;with which the owner can proactively decide what control and data is available to servers outside of the home network and,&lt;/li&gt;
&lt;li&gt;which surface simple, open interfaces to the owner allowing them to completely control all aspects of the device.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, I'd like to drop the 'Inter' from IoT and expand the 'net' to become a 'Network of Things', or NoT.&lt;/p&gt;
&lt;p&gt;In terms of the consumer market, I am undoubtedly swimming against the tide here. Fortunately with the rise of hobbyist devices such as Arduino and RaspberryPi, IoT technologies have been democratised to the extent that anyone with just the smallest ability with a soldering iron and faculty with an IDE can create such devices for themselves.&lt;/p&gt;
&lt;p&gt;Ladies and gentlemen, I present my first (finished) NoT device, the...&lt;/p&gt;
&lt;h1&gt;MonsterPi&lt;/h1&gt;
&lt;p&gt;Years ago, while setting up my (living room) home cinema, I came across the &lt;a href="http://www.adverts.ie/home-audio/monster-hts-1600-home-theatre-powercenter-5-outlet-with-stage-2-clean-power-purge-protector-uk-version/7055360"&gt;Monster Power HTS 1600&lt;/a&gt; on &lt;a href="https://www.scan.co.uk/"&gt;Scan's website&lt;/a&gt;. It seems Monster Products were end-of-lining their power products in the UK (the above link was literally the only one I could find that still works!) and Scan were selling them off at £30 a piece. It was exactly what I was looking for at the time and, not being one to pass up a bargain, I bought two.&lt;/p&gt;
&lt;img src="https://0oiczq.dm2302.livefilestore.com/y3mwcGE45bQwRPaCXRNuB9tGejIT6aSpahgDN02u9ag661uCa_ZmYbNnaKz2aW81rjG8BTgsUhtZ0aDQ8ioIsagbcFP6LtM-IgV_rcPoCs8UI4dZNegv8JembGIuIr7ETkwTZwOTEUjsAAbQHy0jCyAGNkGu3NJZLkXjnGwgzUMlTI?width=700&amp;amp;height=466&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="One of the few remaining pictures online of the Monster Power HTS 1600 UK version"&gt;
&lt;p&gt;Both devices found homes powering and protected my front room and study AV equipment and, to this day, I am still very happy with them. However, I always felt that Monster had missed a trick with this product: the ability to individually and - ideally - remotely turn each of the sockets on the unit on and off as desired.&lt;/p&gt;
&lt;p&gt;When Microsoft announced that Windows IoT Core would run on a RaspberryPi the learning curve ahead of making this happen evaporated and I knew it was something I wanted to do. Unfortunately both Monster Power devices were in full time use and I didn't want to potentially sacrifice one on a project that might not work and could consign the device to the scrap yard. Given that you couldn't purchase the UK version of these devices any more and that, when they occasionally appeared on eBay, they'd invariably be priced at £100+ the project was indefinitely parked.&lt;/p&gt;
&lt;p&gt;Finally, a couple of months ago, a 'used' one appeared on eBay without a reserve and with bidding at thirty odd quid having just a few hours to go. I placed a bid without really hoping it would be successful and, to my surprise, ended up winning the auction for £40'ish including delivery. When it arrived I was delighted to find that it seemed to be brand new and unused (twisty wire on all the cables, supplementary cables still in sealed bags, etc). Plugging it in proved that everything worked as it should so everything was in place to build the MonsterPi.&lt;/p&gt;
&lt;h2&gt;Software&lt;/h2&gt;
&lt;p&gt;While waiting for the time and space required to start hacking up the hardware, I took a look into what was required to write a headless UWP app, self-hosting a HTTP REST endpoint that could be deployed to the RaspberryPi and set values on the GPIO pins necessary to control the &lt;a href="http://www.waveshare.com/rpi-relay-board.htm"&gt;Waveshare RaspberryPi Relay Board&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It didn't take long to find &lt;a href="https://github.com/tomkuijsten/restup"&gt;Restup&lt;/a&gt;, a beautifully simple if somewhat minimal 'Webserver for Universal Windows Apps'. The github repository provided ample samples for writing various types of 'controller' and in less than an hour, I had a working solution.&lt;/p&gt;
&lt;p&gt;Given the Waveshare relay board just required GPIO pins to be set in order to control the relay (low to close, high to open) this was achieved very simply using the classes available in the &lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.devices.gpio.aspx"&gt;Windows.Devices.Gpio namespace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Deployment was taken care of by Visual Studio and configuration performed using the Windows IoT Core Device Portal. The Device Portal allows you to configure deployed apps to run at start up thereby creating a "service-like" experience for headless apps.&lt;/p&gt;
&lt;img src="https://0oidzq.dm2302.livefilestore.com/y3myuJMpQJ0iee-DzmucnuUu2r69IZ2c_KNukHEjoPB0--qRcndLbk0EwUszv8MLYj207fNIWEelQn4TYtW40FVp_y77RW-aTL3AcxQWcowLMB_zsw9jYdH0SwepJ0l6_XC0z9erqkYt4k4TaUBdnqxPYUlSf786xKVx1zwTC4jEsg?width=1363&amp;amp;height=905&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Using the device portal to set Start-up apps"&gt;
&lt;p&gt;Full source code is available on my &lt;a href="https://github.com/ibebbs/MonsterPi"&gt;Github account&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Hardware&lt;/h2&gt;
&lt;p&gt;The hardware side of things proved to be both easier and more tricky than I expected.&lt;/p&gt;
&lt;p&gt;Initially I thought fitting the Pi was going to be child's-play when, upon opening the Monster Power chasis I found that the configuration of sockets providing isolation for RJ11 and RJ45 devices (phone and ethernet respectively) matched the layout of the ethernet and USB connectors of the Pi almost perfectly. Furthermore, these sockets were mounted on an easily removable daughter-board providing an obvious way to fix the pi in place.&lt;/p&gt;
&lt;img src="https://nhtcwg.dm2302.livefilestore.com/y3mKq_74GixCoND7XvyavcDTjnNPdW2xd58RqEk1KZtO4f8nqKhcwyGbMRJqYhtuIHOmJCrJo6O-pltKB1pW0DFAHNy2oi6CNuyOle6TUxrjb4UzQo5_uDIPhNAP1uF8llVVLds4J6Bcp5b2s0GRI_T1uLx__qES0eUimFSxaTWddk?width=1024&amp;amp;height=576&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="The sockets on the RaspberryPi aligned almost perfectly with the RJ11 isolator sockets"&gt;
&lt;p&gt;While alignment wasn't perfect, filing the holes in the chasis to provide access to all ports would be easy.&lt;/p&gt;
&lt;p&gt;Complexity came when I realised that, although the Monster Power included a micro-controller driven digital display, it was unlikely that the DC subsystem in place to power this would be adequate for the RaspberryPi. So here I had to get creative.&lt;/p&gt;
&lt;p&gt;I bought a small &lt;a href="https://www.amazon.co.uk/gp/product/B01H0OH3PI/ref=oh_aui_detailpage_o02_s01?ie=UTF8&amp;amp;psc=1"&gt;12v 80W switching power supply&lt;/a&gt; which would fit down one side of the Moster Power chasis and wired it to the 240v input of using the conveniently provided ring terminals. I used a &lt;a href="http://ian.bebbs.co.uk/posts/3DPrintingWithTheCelRobox"&gt;custom printed bracket&lt;/a&gt; to secure the PSU in place while providing a platform to mount the &lt;a href="http://www.waveshare.com/rpi-relay-board.htm"&gt;Waveshare RaspberryPi Relay Board&lt;/a&gt; above, in close proximity to the sockets I wanted to control with the relays.&lt;/p&gt;
&lt;p&gt;The live wire to the three sockets to be controlled by relays were daisy-chained together so one side of this wire was cut from each socket and connected to the normally-closed output of the relay (extending where necessary using crimp connectors).&lt;/p&gt;
&lt;p&gt;This is shown below:&lt;/p&gt;
&lt;img src="https://zphbnq.dm2302.livefilestore.com/y3mBGmj_-221eHr5ChhkWQfyEOjewU-6JEKOKlqHR-UqR0eMZdf2xPtI5qfP_K1rjguEplhOWObkMJ2fiGI4T4WSQOGh8GfodMLL2lPWD5QZFnBFPYwPUID3FZgVTYndwwL5jDybtRBC6JE_hhcTokWGrmppuLoHccNLsmFZyUsAvM?width=576&amp;amp;height=1024&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="12v switching PSU with relay board mounted in custom bracket"&gt;
&lt;p&gt;While the perspective in the picture makes it look like it hangs over the edge of the chasis, it does actually fit. It's tight, but it fits.&lt;/p&gt;
&lt;p&gt;I used a &lt;a href="https://www.amazon.co.uk/gp/product/B01CUA5Q74/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;amp;psc=1"&gt;12V To 5V 3A 15W Power Converter Regulator with Micro USB Cable&lt;/a&gt; to power the RaspberryPi and - given I now had plenty of power to spare, decided to also fit the &lt;a href="https://www.amazon.co.uk/Step-Down-Step-down-Power-Module/dp/B00ENE55SQ/ref=pd_nav_hcs_bia_t_1?ie=UTF8&amp;amp;psc=1&amp;amp;refRID=J91844QA901NNMPP9XHJ"&gt;4-port USB power module&lt;/a&gt; I had bought, but not used, for our &lt;a href="http://ian.bebbs.co.uk/posts/WotNoBlogPosts"&gt;travels earlier in the year&lt;/a&gt;. Again, this aligned almost perfectly in the remaining holes in the Monster Power chasis.&lt;/p&gt;
&lt;img src="https://nhtcwg.dm2302.livefilestore.com/y3mKq_74GixCoND7XvyavcDTjnNPdW2xd58RqEk1KZtO4f8nqKhcwyGbMRJqYhtuIHOmJCrJo6O-pltKB1pW0DFAHNy2oi6CNuyOle6TUxrjb4UzQo5_uDIPhNAP1uF8llVVLds4J6Bcp5b2s0GRI_T1uLx__qES0eUimFSxaTWddk?width=1024&amp;amp;height=576&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="The sockets on the USB power module aligned almost perfectly with the RJ11 isolator sockets"&gt;
&lt;p&gt;Both these were mounted - upside down - on a custom printed bracket using the screw holes for the original daughter board to secure it in place. Terminal connectors were used to provide connection to the power supply just in case I needed to remove the components at a later date for some reason.&lt;/p&gt;
&lt;img src="https://zphcnq.dm2302.livefilestore.com/y3mMyQU1JCq5r9g0pnmuLGrrVm1-_D8Bq9UVm5uZgUD2lx9t3LVnjEIgWzqzwKeKbju29iHfBntmTX0FPZFKzWK6RAnFwWw-rxMfWyslJf52FN4XkFlglfGHc97-z24asPfR-NLEAd8nEE9e8X9V-tEP_wen7kF0zsAchvQJYwOjJk?width=576&amp;amp;height=1024&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Mounting the RaspberryPi and USB power module on a custom bracket"&gt;
&lt;p&gt;Finally, boards were fixed in place and a ribbon cable connected between the GPIO socket on the RaspberryPi and the relay board to allow control of the relays.&lt;/p&gt;
&lt;img src="https://nhtewg.dm2302.livefilestore.com/y3mYTQzOsTukjrHcb69XX-50V18rcvHJUP4R8u6hmsgR1yAm2DCpFzoK9UdUNyfxseH59qtuRbVeIVVX9AM1h8lde7IbZDOPRYz0le7cac0bFkoC4pzsyjVKNO3QapjDdlCK-awMaL_NOhYEw6rW4_7lMTobDNRqGrK17yE1SmeRHA?width=1024&amp;amp;height=576&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Brackets in place and RaspberryPi fitted"&gt;
&lt;p&gt;After a thorough check to make sure there were no shorts on any of the connections and that I had connected polarity correctly, I plugged it in and turned it on....&lt;/p&gt;
&lt;h2&gt;Testing&lt;/h2&gt;
&lt;p&gt;... and everything worked.&lt;/p&gt;
&lt;p&gt;The RaspberryPi booted but didn't switch the sockets on as - I think - not having a network connection meant it couldn't get an IP address which meant the software hadn't enabled to relays due to being configured to fail safe (leave the sockets off). The power indicator on the USB power module suggested it was working fine too.&lt;/p&gt;
&lt;p&gt;Next I relocated to another room where a network connection was available. I plugged it in, turned it on and saw the network connection LED's start blinking. After 15-20 seconds or so while the RaspberryPi booted, the relays tickets on and I was able to hit the REST endpoint from &lt;a href="https://www.getpostman.com/"&gt;Postman&lt;/a&gt;. I'd even managed to get the names of the sockets on the rest service to match the sockets the relays were controlling, although I admit this was more luck than judgement (I had completely expected to have to re-configure the software to match after the hardware was complete).&lt;/p&gt;
&lt;p&gt;I plugged in a small table lamp and recorded this:&lt;/p&gt;
&lt;iframe src="https://onedrive.live.com/embed?cid=03DF8A28BD9D0BC9&amp;amp;resid=3DF8A28BD9D0BC9%21266322&amp;amp;authkey=AI5IzCXupiYl-CU" width="600px" height="340px" frameborder="0" scrolling="no" allowfullscreen=""&gt;&lt;/iframe&gt;
&lt;p&gt;Boom! (Figuratively speaking of course... the MonsterPi didn't literally go boom... yet :0)&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;I've long loved the idea of home automation. From X10 and LightwaveRF through to modern Bluetooth and Wifi connected devices, I have played with dozens of technologies in search of home automation nirvana. But recently I have watched with growing bewilderment at the incredible number of "cloud-connected" home automation devices being released and the eagerness with which they're snapped up by naive consumers hungry to control everything from the carefree comfort of their iPhone.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/NewBlogUsingWyam" />
		<id>http://ian.bebbs.co.uk/posts/NewBlogUsingWyam</id>
		<title>Using Wyam</title>
		<updated>2015-11-09T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;I've been meaning to create a blog for a &lt;strong&gt;long&lt;/strong&gt; time but never found a system with the right combination of features (power vs flexibility vs learning curve, cost, technology stack, etc). CMSs (Wordpress, Drupal, etc) were always way too much faff and most static site generators required the installation of numerous languages / run-times / sdks, etc.&lt;/p&gt;
&lt;p&gt;Then I found &lt;a href="http://wyam.io/" title="Wyam Homepage"&gt;Wyam&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Being .NET based it could be used from my day-to-day development machine and, by cleverly leveraging the  Roslyn compiler platform, can be set up to be as simple or flexible as desired. A quick flick through the module and API pages and I knew I'd found a potential candidate for my statically generated blog.&lt;/p&gt;
&lt;p&gt;Being a... ahem... pragmatic developer with somewhat dated web skills I decided to take the path of least resistance and copy someone else's blog layout. Afterall, imitation is the sincerest form of flattery, right? As such, I contacted Dave Glick - the most-excellent author of Wyam - to see if he would mind me 'borrowing' the layout he used for &lt;a href="http://daveaglick.com/" title="Dave Glick's blog"&gt;his blog&lt;/a&gt;. He quickly replied to my cheeky request and said he didn't mind at all if used his layout, even refusing my offer of attribution (which I hope this blog post somewhat makes up for).&lt;/p&gt;
&lt;p&gt;With the all clear, I &lt;a href="https://github.com/Wyamio/Wyam/releases/tag/v0.10.0-beta" title="download page for Wyam version 0.10.0-beta"&gt;downloaded the latest version of Wyam&lt;/a&gt;, cloned the &lt;a href="https://github.com/Wyamio/Wyam" title="Github repository for Wyam "&gt;Wyam repository&lt;/a&gt;, invoked Wyam to generate an &lt;a href="https://github.com/Wyamio/Wyam/tree/develop/Examples" title="Wyam Example sites in Github repository"&gt;example site&lt;/a&gt;... and got an exception.&lt;/p&gt;
&lt;p&gt;Another quick chat with Mr. Glick revealed that the project is iterating quickly and currently in a "move fast and break things" mode. Fortunately the issue was already resolved in the development branch so, after local build of Wyam, I managed to successfully generate the example sites.&lt;/p&gt;
&lt;p&gt;"Now for some blatant plagiarism with his blog" I thought to myself but again, after cloning his (generously shared and CC licensed) &lt;a href="https://github.com/daveaglick/daveaglick" title="Github repository for Dave Glick's blog"&gt;blog&lt;/a&gt;, asking Wyam to generate the site threw an exception. This time, a &lt;a href="https://github.com/Wyamio/Wyam/issues/112#issuecomment-155165316" title="Wyam PostFile issue comment on Github"&gt;short bit of call-stack sleuthing&lt;/a&gt; revealed another breaking change which was easily resolved by examining the &lt;a href="http://wyam.io/modules/" title="Module documentation for Wyam"&gt;Wyam module documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once more with feeling and ét voila, a MVB (Minimal Viable Blog).&lt;/p&gt;
&lt;p&gt;All in all, not a bad experience with an early beta of a very clever project. Moving forward, I actually hope to do very little with Wyam other than post blog entries but will certainly endeavour to keep up to date with Wyam and share my experiences here.&lt;/p&gt;
&lt;p&gt;If you're looking for a flexible yet powerful .NET based static-site generator, go check out &lt;a href="http://wyam.io/" title="Wyam Homepage"&gt;Wyam&lt;/a&gt;. If you experience any problems with it I'd definitely recommend posting an issue on Github, Dave seems to be very on the ball responding to issues (and extremely friendly to boot).&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;I've been meaning to create a blog for a &lt;strong&gt;long&lt;/strong&gt; time but never found a system with the right combination of features (power vs flexibility vs learning curve, cost, technology stack, etc). CMSs (Wordpress, Drupal, etc) were always way too much faff and most static site generators required the installation of numerous languages / run-times / sdks, etc.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/ToddlerBoxHitsOneThousandUsers" />
		<link rel="enclosure" type="image" href="http://ian.bebbs.co.uk/ibebbs/ToddlerBox/raw/master/store/Screenshots/Xbox/Donkeys" />
		<id>http://ian.bebbs.co.uk/posts/ToddlerBoxHitsOneThousandUsers</id>
		<title>ToddlerBox Hits 1000 Users</title>
		<updated>2016-11-29T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;Wow!&lt;/p&gt;
&lt;p&gt;ToddlerBox has been in the store less than two weeks and, despite very little in the way of promotion (my other half sent out a call on Facebook for beta users), it has somehow accumulated over a thousand installs!&lt;/p&gt;
&lt;p&gt;Acquisitions have seen steady growth across a (more or less) expected demographic as can be seen below:&lt;/p&gt;
&lt;img src="https://zphbkg.dm2302.livefilestore.com/y3mxlql02_eOqhCIiHNom5uhtzjCe_ZMvbgIGPcUuLMbuHi_cmFRtGpAIb2CVV_k_HAO6v_3BB7AfILc428eEqv96IXFv3b-Vwws3CvDkXxj9uTiBtz9C2JTxwcKIPHpbhXb1LSnjCUDMosCL5GbtEQN9PsjnFM4iq6n2cCuMcSAVo?width=660&amp;amp;height=145&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:660px; margin-top: 6px; margin-bottom: 6px;" alt="Acquisitions over App Lifetime"&gt;
&lt;img src="https://0ohtkg.dm2302.livefilestore.com/y3mJ-gCk99nTK8OuY5w0Ws1xjrRZiFLkxZMpJ-0LWENyYp0q9h-tnT73xZC4_a-hrF4rbBao7kp7vY7jrdgON0ukq9qib82QSM6vNHTvQwvTUYPfyFnfOviJ0HWYe_JRsunQODVyvcmOh0zjjzDk1LXL13blrvuAloFWFlFIFygSSQ?width=660&amp;amp;height=235&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:660px; margin-top: 6px; margin-bottom: 6px;" alt="Acquisitions by Demographic"&gt;
&lt;p&gt;In addition to the number of users, the number of countries it is being used in has been really surprising. Sure, there's no localization concerns so there's no reason it &lt;em&gt;wouldn't&lt;/em&gt; be used in non-English speaking countries but I'm genuinely pleased to see it being used all over the world; from USA to Saudi Arabia and from Canada to China! Here's the current breakdown of usage:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;Sessions&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td&gt;United States&lt;/td&gt;&lt;td&gt;910&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;United Kingdom&lt;/td&gt;&lt;td&gt;311&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Canada&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Australia&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Saudi Arabia&lt;/td&gt;&lt;td&gt;33&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;China &lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Brazil&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Mexico&lt;/td&gt;&lt;td&gt;19&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Germany&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Netherlands&lt;/td&gt;&lt;td&gt;14&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;France&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;New Zealand&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Ireland&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Latvia&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Hungary&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Sweden&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Russia&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Poland&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Slovakia &lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;South Africa&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Austria&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Belgium&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Switzerland&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Spain &lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Czech Republic&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Guam&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Puerto Rico&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Chile &lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Denmark&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Romania&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Colombia &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Italy &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Libya &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Norway&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Trinidad and Tobago&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;United Arab Emirates &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Unknown&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Given the somewhat unexpected success of ToddlerBox I am planning to release a number of future versions with various enhancements and new interactions/visualizations for toddler's to mash away at.&lt;/p&gt;
&lt;p&gt;All good fun :0D&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Wow!&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/ToddlerBoxTopsTenThousandUsers" />
		<link rel="enclosure" type="image" href="http://ian.bebbs.co.uk/y3mVAxtKFjUEGk7Hdhzjl4UZ2INnFdBbw9K-tnYZ8DYoJ-VoKxpAN6w8Ng0DFTYdSxpHY6IvL5-VwJpLkQl6qWRmMQXSExLXopz5CFuSxIbyaMLrnL2Vy3yPZlISAAknXZdT4HwiZJ55zg2UtKwucBL88-xHh6rn5Mh97yzfRsCPjI%253Fwidth=1024&amp;height=574&amp;cropmode=none" />
		<id>http://ian.bebbs.co.uk/posts/ToddlerBoxTopsTenThousandUsers</id>
		<title>ToddlerBox Tops 10,000 Users!!</title>
		<updated>2016-12-20T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;Really that got out of hand fast! I had no idea so many people would be interested in letting their toddler loose on their XBox controller. In fact, there have been many things that have surprised me about this app:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Acquisition rate has increased&lt;/p&gt;
&lt;p&gt;I kind of expected an initial burst of acquisitions then a slow tail off but this hasn't happened. As it's only been a little over a month since ToddlerBox was released to the store, I guess there's every possibility that it's still in the "burst" stage and theres just more interest in apps of this type. Well, here's hoping.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reviews have been extremely polarized&lt;/p&gt;
&lt;p&gt;Almost without exception, reviews have been 4-5 stars or 1 star. Also, while a couple of the 1 star ratings are to do with app functionality (it seems a couple of people have issues running even this basic UWP app) the overwhelming majority of 1 star ratings are due to peoples dislike of ads; because...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ads are a very risky business&lt;/p&gt;
&lt;p&gt;As with most parents, I am extremely cautious about what my toddler is exposed to. Therefore I was extremely cautious about adding advertising as a means of revenue to ToddlerBox, regardless of how small or out of the way they were.
After completing the Ad-Mediation questions in the Windows Store and being assured that ads would be both age rated and not "tracking", I felt a lot better about the idea and decided a small banner ad on the instructions screen would be pretty harmless. Furthermore, throughout the process of adding the banner, I didn't see a single advert I would be concerned about putting in front of my child; most were simple flashing inbox icons or the like.
However, after discussing ToddlerBox with a friend, he decided to install it on his Xbox and I was very upset to see that the ads being displayed were both more intrusive and more "click-baity" than any I had seen previously. I am now investigating ways to generate some revenue from the app but without upsetting parents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The reviews shown in the store are not "all reviews"&lt;/p&gt;
&lt;p&gt;As the publisher of ToddlerBox, I get to see all reviews left about the app on the store. Due to all the previous points, the app is currently averaging about a 2.6 star rating across 50 odd reviews. However, when viewing the app in the Store on my friend's XBox, it was shown as having a 4.5 star rating from just 2 reviews. Now, while some of the reviews I can see are translated from foreign languages, most are in English and I'm therefore at a loss to explain why they're not being displayed when an XBox in the English local browses the store.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's not just toddlers using ToddlerBox&lt;/p&gt;
&lt;p&gt;I've had more than one review stating how good this game is to play after consuming various illicit substances ;0P&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Anyway, as described above, while acquisition rate has fluctuated on a daily basis, the overall trend in acquisition shows unexpected growth:&lt;/p&gt;
&lt;img src="https://bnljqq-dm2306.files.1drv.com/y3msqT1msmkJ_32Jewx8Ysuoys0lC35GCLY-aQPyJ9YhR75KMswOLcznSPGOOBGhhsMRb6qK3_xh_qr3h1Xh-vFwmSog1_HoOS-Isj1lMoFPpuV42oAwJi3A5JiY-ToAirVoZDnz2gQ7N6jUed82zW83IZ_qQcbqWGw1ekaNh4wjBU?width=660&amp;amp;height=252&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:660px; margin-top: 6px; margin-bottom: 6px;" alt="Acquisitions over App Lifetime"&gt;
&lt;p&gt;Daily usage also shows that a healthy number of acquisitions are being used regularly, with nearly 800 people using ToddlerBox nearly 1700 times just yesterday (19th December):&lt;/p&gt;
&lt;img src="https://bnlkqq-dm2306.files.1drv.com/y3mBC-i0nboWq0ibRyIcBhs1O2MnfOUx-OxTQZDUNHbh-eVRbfH0xP9-p9hLJqC82i1SBB5ZfpcfmTlvuZwMBD-Gt0BZZC-IvVCJOd1jzexDoiC-BV4LG7X2aOyOapkCKK6wM6WWffluiuD5MKKet6MfEIjTWNZMCpFx1FP13suiCY?width=660&amp;amp;height=249&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:660px; margin-top: 6px; margin-bottom: 6px;" alt="Daily usage"&gt;
&lt;p&gt;So, the Xmas break is almost upon us and I will be returning my attention to ToddlerBox (yes, despite the career break, I try to spend most of my time working on 'serious' projects or study). I have a number of new features in mind for it (including the #1 requested feature of "sound!!") and will be looking to try out a couple of more features of the awesome Win2D library. It's going to be a lot of fun (for me and my little girl) and will hopefully allow ToddlerBox to reach the next major (although admittedly arbitrary) milestone of 25,000 acquisitions!&lt;/p&gt;
&lt;p&gt;Watch this space...&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Really that got out of hand fast! I had no idea so many people would be interested in letting their toddler loose on their XBox controller. In fact, there have been many things that have surprised me about this app:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/RxWebWithTypescript" />
		<id>http://ian.bebbs.co.uk/posts/RxWebWithTypescript</id>
		<title>WebRx and Typescript</title>
		<updated>2016-03-08T00:00:00Z</updated>
		<content>
                                        


&lt;h1&gt;Continuing with WebRx&lt;/h1&gt;
&lt;p&gt;In &lt;a href="./posts/RxWeb"&gt;part 1&lt;/a&gt; of this series I showed how to set up a project structure that allows you to start using WebRx from within Visual Studio. While fairly simple, the example provides a great illustration of you how WebRx allows you to separate your view and view model.&lt;/p&gt;
&lt;p&gt;In this article I further develop the structure to allow you to develop your application using Typescript.&lt;/p&gt;
&lt;h1&gt;From 'app.js' to 'app.ts'&lt;/h1&gt;
&lt;p&gt;Previously we copied a chunk of JavaScript from the WebRx &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;getting started guide&lt;/a&gt; into an &lt;code&gt;app.js&lt;/code&gt; script that was directly used from within the &lt;code&gt;index.html&lt;/code&gt; file. We now want to &lt;a href="https://en.wikipedia.org/wiki/Source-to-source_compiler"&gt;&lt;em&gt;transpile&lt;/em&gt;&lt;/a&gt; the &lt;code&gt;app.js&lt;/code&gt; script from a Typescript file so that we can further develop the application in a structured and type-safe manner.&lt;/p&gt;
&lt;p&gt;To do this simply follow the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Delete the existing &lt;code&gt;app.js&lt;/code&gt; file leaving the &lt;code&gt;js&lt;/code&gt; folder empty.&lt;/li&gt;
&lt;li&gt;Add and configure a &lt;code&gt;TypeScript JSON Configuration File&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Add a &lt;code&gt;TypeScript JSON Configuration File&lt;/code&gt; to the solution as shown below&lt;br&gt;
&lt;img src="/Content/RxWebWithTypescript/AddTypeScriptJsonConfigurationFile.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Add TypeScript Json Configuration File"&gt;&lt;/li&gt;
&lt;li&gt;Replace the &lt;code&gt;node_modules&lt;/code&gt; exclusion with &lt;code&gt;Scripts&lt;/code&gt;&lt;br&gt;
By default Visual Studio (or, more acurately, the TypeScript transpiler) with pick up all &lt;code&gt;ts&lt;/code&gt; files in the solution. As we don't want to attempt to re-transpile all the referenced typescript files we add &lt;code&gt;Scripts&lt;/code&gt; to the exclusion list. Further, as we added a reference to &lt;code&gt;WebRx&lt;/code&gt; via Nuget, our references are in the &lt;code&gt;Scripts&lt;/code&gt; folder, not &lt;code&gt;node_modules&lt;/code&gt;, so this exclusion can be removed.&lt;/li&gt;
&lt;li&gt;Add an &lt;code&gt;outDir&lt;/code&gt; setting to transpile to the &lt;code&gt;js&lt;/code&gt; folder&lt;br&gt;
This setting will force the TypeScript transpiler to output the transpiled JavaScript files to the &lt;code&gt;js&lt;/code&gt; folder where they can be used by the client browser.&lt;/li&gt;
&lt;li&gt;You should now have a &lt;code&gt;tsconfig.json&lt;/code&gt; file that looks like this:
&lt;pre class="prettyprint"&gt;&lt;code&gt;{
  "compilerOptions": {
    "noImplicitAny": false,
    "noEmitOnError": true,
    "removeComments": false,
    "sourceMap": true,
    "target": "es5",
    "outDir": "js"
  },
  "exclude": [
    "Scripts",
    "wwwroot"
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Add a &lt;code&gt;ts&lt;/code&gt; folder to the solution.&lt;/li&gt;
&lt;li&gt;Add an &lt;code&gt;app.ts&lt;/code&gt; typescript file to the &lt;code&gt;ts&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Add references to Rx and WebRx to the &lt;code&gt;app.ts&lt;/code&gt; file.&lt;br&gt;
WebRx requires that you add an explicit reference to &lt;code&gt;rx.all.d.ts&lt;/code&gt; prior to the reference to &lt;code&gt;web.rx.d.ts&lt;/code&gt; in order for the Rx module to be brought into scope. The references should therefore be added like this:
&lt;pre class="prettyprint"&gt;&lt;code&gt;/// &amp;lt;reference path="../Scripts/rx.all.d.ts"/&amp;gt;
/// &amp;lt;reference path="../Scripts/typings/web.rx.d.ts" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Implement view / view model code&lt;br&gt;
You can now re-implement the code from &lt;code&gt;app.js&lt;/code&gt; as TypeScript virtually verbatim but do note how you get Intellisense for all the methods and properties of &lt;code&gt;wx&lt;/code&gt; module.&lt;/li&gt;
&lt;li&gt;Fix compilation error with call to &lt;code&gt;wx.applyBindings&lt;/code&gt;&lt;br&gt;
The &lt;code&gt;wx.applyBindings&lt;/code&gt; method &lt;em&gt;requires&lt;/em&gt; a &lt;code&gt;model&lt;/code&gt; parameter which, in JavaScript, is defaulted but in TypeScript causes a compilation error. To resolve this, simply pass an empty object to the method.&lt;/li&gt;
&lt;li&gt;Your &lt;code&gt;app.ts&lt;/code&gt; file should now look like this:
&lt;pre class="prettyprint"&gt;&lt;code&gt;/// &amp;lt;reference path="../Scripts/rx.all.d.ts"/&amp;gt;
/// &amp;lt;reference path="../Scripts/typings/web.rx.d.ts" /&amp;gt;

wx.app.component('hello', {
    viewModel: function () {
        this.firstName = 'Bart';
        this.lastName = 'Simpson';
    },
    template: 'The name is &amp;lt;span data-bind="text: firstName + \' \' + lastName"&amp;gt;&amp;lt;/span&amp;gt;'
});

wx.router.state({
    name: "$",
    views: { 'main': "hello" }
});

wx.router.reload();

wx.applyBindings({});
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Compile the project and include the generated &lt;code&gt;js/app.js&lt;/code&gt; and &lt;code&gt;js/app.js.map&lt;/code&gt; files into the project.&lt;/li&gt;
&lt;li&gt;Hit F5 and you should again see the message 'The name is Bart Simpson' displayed in your default browser.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Congratulations, you're now ready to develop your application using full Intellisense and in the comfort of the knowledge that the compiler (well, transpiler) will pick up any syntactic bugs you may inadvertently create.&lt;/p&gt;
&lt;p&gt;As always, the completed &lt;a href="https://github.com/ibebbs/BlogProjects/tree/master/WebRxWithTypeScript"&gt;source code for this post&lt;/a&gt; can be found in the &lt;a href="https://github.com/ibebbs/BlogProjects"&gt;BlogProjects repository&lt;/a&gt; on &lt;a href="https://github.com/ibebbs"&gt;Github&lt;/a&gt;&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;In &lt;a href="./posts/RxWeb"&gt;part 1&lt;/a&gt; of this series I showed how to set up a project structure that allows you to start using WebRx from within Visual Studio. While fairly simple, the example provides a great illustration of you how WebRx allows you to separate your view and view model.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/UsingHyperlinkInMVVM" />
		<id>http://ian.bebbs.co.uk/posts/UsingHyperlinkInMVVM</id>
		<title>Using a Hyperlink in MVVM</title>
		<updated>2016-08-17T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;The XAML (i.e. WPF, WinRT, UWP family) &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.documents.hyperlink.aspx"&gt;Hyperlink&lt;/a&gt; is a terrific little control (ok, it's not actually a &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.controls.control.aspx"&gt;Control&lt;/a&gt; - it's a &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.contentelement.aspx"&gt;ContentElement&lt;/a&gt; - but it does allow interaction hence using the term control here). It follows the current environment's theme such that the user naturally knows it's a link that can be clicked and it can be embedded inside &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.controls.textblock.aspx"&gt;TextBlock&lt;/a&gt; elements so that it naturally flows with the other content.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;script src="https://gist.github.com/ibebbs/f3b4efb09f9b0ea36397a9ab462823df.js"&gt;&lt;/script&gt;
&lt;p&gt;However, out of the box, this control's functionality is somewhat limited. As standard, it is simply able to perform navigation on any &lt;a href="https://msdn.microsoft.com/library/windows/apps/br242682"&gt;Frame&lt;/a&gt; element the control is hosted within. Any other type of behavior requires the developer to subscribe to the control's &lt;code&gt;OnHyperlinkClicked&lt;/code&gt; event and perform the required operations from code-behind.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Unfortunately, neither of these approaches work for 'ViewModel First' &lt;a href="https://msdn.microsoft.com/en-gb/library/hh848246.aspx"&gt;MVVM&lt;/a&gt;, which, after many years employing MVVM is by far my favoured approach.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In a project I've been working on which employs this pattern, a state-machine is used to track application state and each transition between states causing a navigation to be performed in the UI. In one view within the application, there was a desire to instigate a state-machine transition by clicking on a &lt;code&gt;Hyperlink&lt;/code&gt; embedded within some text. Ideally, when clicked, the &lt;code&gt;Hyperlink&lt;/code&gt; would execute an &lt;code&gt;ICommand&lt;/code&gt; instance data-bound to the view from the view-model. Obviously this wasn't possible as standard so I started thinking through alternatives.&lt;/p&gt;
&lt;p&gt;My first inclination was to restyle a &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.controls.button.aspx"&gt;Button&lt;/a&gt; to look like a Hyperlink. This would, ostensibly, be fairly straight forward and naturally provided a Command &lt;code&gt;DependencyProperty&lt;/code&gt; to bind to. However, keeping the hyperlink styled as per the current system theme would be arduous to say the least.&lt;/p&gt;
&lt;p&gt;Putting this aside, I came across &lt;a href="http://stackoverflow.com/a/11433814"&gt;this post&lt;/a&gt; which employed an attached property to start a process (normally a browser to display external content) on the host PC. Realising this approach could be extended to accomplish my goals I refactored it to the following:&lt;/p&gt;
&lt;script src="https://gist.github.com/ibebbs/654f519eec134135f7f9469150b07438.js"&gt;&lt;/script&gt;
&lt;p&gt;Which can be used as follows:&lt;/p&gt;
&lt;script src="https://gist.github.com/ibebbs/0ae7c2e0ed3c531858f5ee01c16157b8.js"&gt;&lt;/script&gt;
&lt;p&gt;Et voilá, a &lt;code&gt;Hyperlink&lt;/code&gt; control which is able to execute a data-bound &lt;code&gt;ICommand&lt;/code&gt; instance. Obviously it could be extended further to disable the hyperlink when the command reports execution is disabled (via &lt;code&gt;CanExecuteChanged&lt;/code&gt;) and provide a CommandParamter binding for passing additional information through to the command execution, but in a lot of instances - and certainly for me in this scenario - &lt;a href="https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it"&gt;YAGNI&lt;/a&gt;.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;The XAML (i.e. WPF, WinRT, UWP family) &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.documents.hyperlink.aspx"&gt;Hyperlink&lt;/a&gt; is a terrific little control (ok, it's not actually a &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.controls.control.aspx"&gt;Control&lt;/a&gt; - it's a &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.contentelement.aspx"&gt;ContentElement&lt;/a&gt; - but it does allow interaction hence using the term control here). It follows the current environment's theme such that the user naturally knows it's a link that can be clicked and it can be embedded inside &lt;a href="https://msdn.microsoft.com/en-us/library/system.windows.controls.textblock.aspx"&gt;TextBlock&lt;/a&gt; elements so that it naturally flows with the other content.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/UWPCommunityToolkitv1_1" />
		<id>http://ian.bebbs.co.uk/posts/UWPCommunityToolkitv1_1</id>
		<title>UWP Community Toolkit v1.1 Released</title>
		<updated>2016-10-10T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;Shortly after my blog post about &lt;a href="http://ian.bebbs.co.uk/posts/UsingHyperlinkInMVVM"&gt;Using a Hyperlink in MVVM&lt;/a&gt; a group of developers at Microsoft collated and released the &lt;a href="https://blogs.windows.com/buildingapps/2016/08/17/introducing-the-uwp-community-toolkit/#pRVgJbZbTBMHPyGG.97"&gt;UWP Community Toolkit&lt;/a&gt;. They were actively asking for contributions and, given the self contained nature of the Hyperlink extension, it seemed like a natural fit for the toolkit so I decided to try contributing it via pull request.&lt;/p&gt;
&lt;p&gt;The toolkit's contribution guidelines and conventions closely matched my own coding style so I had to change very little of the code in my article but did have to add XML summary blocks to each public class and members. With that done I could add the class to the &lt;a href="https://github.com/ibebbs/UWPCommunityToolkit/tree/dev/Microsoft.Toolkit.Uwp/Helpers"&gt;Helpers folder on the dev branch of my fork of the toolkit&lt;/a&gt; and &lt;a href="https://github.com/Microsoft/UWPCommunityToolkit/pull/226"&gt;issue a pull request&lt;/a&gt;. I was also asked to produce some documentation and a sample for the class which was then pulled into the document repo.&lt;/p&gt;
&lt;p&gt;The rest, as they say, is history. &lt;a href="https://blogs.windows.com/buildingapps/2016/10/05/announcing-uwp-community-toolkit-1-1/#1QBL3lQjtLbY537i.97"&gt;Version 1.1 of the toolkit released&lt;/a&gt; with yours truly in the &lt;a href="https://github.com/Microsoft/UWPCommunityToolkit/releases/"&gt;list of contributors&lt;/a&gt;. It's a small contribution but I really think the toolkit is a promising project and absolutely intend to contribute further in the near future.&lt;/p&gt;
&lt;p&gt;In the mean time, well done to all the maintainers of, and contributors to, the toolkit on this important milestone.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Shortly after my blog post about &lt;a href="http://ian.bebbs.co.uk/posts/UsingHyperlinkInMVVM"&gt;Using a Hyperlink in MVVM&lt;/a&gt; a group of developers at Microsoft collated and released the &lt;a href="https://blogs.windows.com/buildingapps/2016/08/17/introducing-the-uwp-community-toolkit/#pRVgJbZbTBMHPyGG.97"&gt;UWP Community Toolkit&lt;/a&gt;. They were actively asking for contributions and, given the self contained nature of the Hyperlink extension, it seemed like a natural fit for the toolkit so I decided to try contributing it via pull request.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/ReactiveReadModels" />
		<id>http://ian.bebbs.co.uk/posts/ReactiveReadModels</id>
		<title>Reactive ReadModels</title>
		<updated>2015-11-23T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;If you're starting out with &lt;a href="http://docs.geteventstore.com/introduction/event-sourcing-basics/" title="Event Sourcing Basics at GetEventStore"&gt;Event Sourcing&lt;/a&gt; you're probably looking for the ability to project events into &lt;a href="http://cqrs.nu/tutorial/cs/03-read-models" title="CQRS tutorial - Read Models"&gt;read models&lt;/a&gt; that can be used by the views in your application. Today I'd like to share a neat little mechanism I've established for building read model in C# by employing a strongly typed yet functional approach.&lt;/p&gt;
&lt;p&gt;Starting with infrastructure, you probably have some form event distribution mechanism, normally a pub/sub style bus. From this bus you need to be able to selectively subscribe to all the events you need to collate the information required by your read model. Furthermore, you will often need to initialize the read model with information from a persistent store - often this is a persistent store of the read model itself but this isn't necessarily the case. Lastly, your application must be able to request a specific read model and receive notifications when the read model changes.&lt;/p&gt;
&lt;p&gt;To illustrate how this might be achieved, I have written a &lt;a href="https://github.com/ibebbs/Blog.ReactiveReadModels" title="ReactiveReadModels repository on Github"&gt;small sample project&lt;/a&gt; following the traditional Account/Order model that features the following components:&lt;/p&gt;
&lt;img src="/Content/posts/ReactiveReadModels-SampleComponents.png" alt="Sample Components" class="img-responsive" style="margin-left: auto; margin-right: auto; margin-top: 4px; margin-bottom: 4px"&gt;
&lt;p&gt;In this system, the application is able to request a stream of read models from a repository. The repository will retrieve initial read model state from a persistence service and then subscribe to events from an event bus to continually update and publish the read model. Only read models the application needs should be published and only events the read model requires should be processed.&lt;/p&gt;
&lt;p&gt;By leveraging Rx we're able to implement a stub of the repository very easily as follows:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;public class Repository
{
    private readonly Service.IAccountService _accountService;
    private readonly IEventAggregator _bus;

    public Repository(Service.IAccountService accountService, IEventAggregator bus)
    {
        _accountService = accountService;
        _bus = bus;
    }

    public IObservable&amp;lt;ReadModel&amp;gt; For(Guid id)
    {
        if (id == null) throw new ArgumentNullException("id");

        return Observable.Create&amp;lt;ReadModel&amp;gt;(
            async observer =&amp;gt;
            {
                Service.AccountInfo accountInfo = await _accountService.GetAccountInfoAsync(id);

                ReadModel readModel = accountInfo.ToReadModel();

                // Subscribe to events and apply to read model

                return Observable.StartWith(readModel).Subscribe(observer);
            }
        );
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This code is written such that, when an observer &lt;em&gt;subscribes&lt;/em&gt; to the &lt;code&gt;IObservable&amp;lt;ReadModel&amp;gt;&lt;/code&gt; returned from the &lt;code&gt;For&lt;/code&gt; method, an asynchronous request will be made to the &lt;code&gt;IAccountService&lt;/code&gt; for the initial state of the read model, a &lt;code&gt;ReadModel&lt;/code&gt; instance will be constructed from the information returned by the  service and finally the &lt;code&gt;ReadModel&lt;/code&gt; will be emitted to the subscriber. Note that the observable is deliberately left incomplete to indicate the further &lt;code&gt;ReadModel&lt;/code&gt; instances might be emitted.&lt;/p&gt;
&lt;p&gt;Now we have the current read model, we need to subscribe to events from the event bus that represent changes pertinent to the read model and, when received, modify and emit the read model so that the subscriber is always up to date.&lt;/p&gt;
&lt;p&gt;To do this, we might think to write something like this:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;public IObservable&amp;lt;ReadModel&amp;gt; For(Guid id)
{
    if (id == null) throw new ArgumentNullException("id");

    return Observable.Create&amp;lt;ReadModel&amp;gt;(
        async observer =&amp;gt;
        {
            Service.AccountInfo accountInfo = await _accountService.GetAccountInfoAsync(id);

            ReadModel readModel = accountInfo.ToReadModel();

            return new CompositeDisposable(
                _bus.GetEvent&amp;lt;Event.AccountNameChanged&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(@@event =&amp;gt; readModel.WithAccountName(@@event.AccountName)).Subscribe(observer),
                _bus.GetEvent&amp;lt;Event.AddBillingAddress&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(@@event =&amp;gt; readModel.WithBillingAddress(new Address(@@event.AddressName))).Subscribe(observer),
                _bus.GetEvent&amp;lt;Event.RemoveBillingAddress&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(@@event =&amp;gt; readModel.WithoutBillingAddress(@@event.AddressName)).Subscribe(observer),
                _bus.GetEvent&amp;lt;Event.OrderInvoiced&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(@@event =&amp;gt; readModel.WithCurrentOrder(new Order(@@event.OrderId))).Subscribe(observer),
                _bus.GetEvent&amp;lt;Event.OrderDispatched&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(@@event =&amp;gt; readModel.WithCompletedOrder(@@event.OrderId)).Subscribe(observer)
            );
        }
    );
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While this code looks sensible, we'll very quickly run into problems with it. Firstly and primarily each subscription is only ever modifying the initial &lt;code&gt;readModel&lt;/code&gt; instance meaning changes are not cumulative. Secondly, if we somehow overcame the initial issue, because we're maintaining a series of subscriptions here, changes are not thread safe nor deterministic.&lt;/p&gt;
&lt;p&gt;No, what we need is a way of writing the effect of these changes into a common read model instance, aggregating those changes across multiple events and emitting the new read model each time it is updated. Fortunately, Rx has &lt;strong&gt;exactly&lt;/strong&gt; the operator we need for this: &lt;code&gt;IObservable&amp;lt;TAccumulate&amp;gt; Scan&amp;lt;TSource, TAccumulate&amp;gt;(this IObservable&amp;lt;TSource&amp;gt; source, TAccumulate seed, Func&amp;lt;TAccumulate, TSource, TAccumulate&amp;gt; accumulator)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This operator takes an initial &lt;code&gt;TAccumulate&lt;/code&gt; seed and applies each item emitted from the &lt;code&gt;IObservable&amp;lt;TSource&amp;gt;&lt;/code&gt; source to the accumulator by invoking a function that takes the current accumulator value and the emitted item and returning a new accumulator value. Each of these new accumulator values are then emitted as an &lt;code&gt;IObservable&amp;lt;TAccumulate&amp;gt;&lt;/code&gt; instances to the subscriber.&lt;/p&gt;
&lt;p&gt;Great, so it's pretty obvious here that our accumulator should be our read model, but how do we subscribe to all the different message types and apply a different modifications to the read model for each type of  message received when the &lt;code&gt;Scan&lt;/code&gt; function only allows for a single &lt;code&gt;TSource&lt;/code&gt; type. We need to somehow homogenise the source stream to a single type. Often this is done with inheritance but, as there's no common base type for each of these messages, we'd have to write something like this:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;public IObservable&amp;lt;ReadModel&amp;gt; For(Guid id)
{
    if (id == null) throw new ArgumentNullException("id");

    return Observable.Create&amp;lt;ReadModel&amp;gt;(
        async observer =&amp;gt;
        {
            Service.AccountInfo accountInfo = await _accountService.GetAccountInfoAsync(id);

            ReadModel readModel = accountInfo.ToReadModel();

            IObservable&amp;lt;object&amp;gt; events = Observable.Merge(
                _bus.GetEvent&amp;lt;Event.AccountNameChanged&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Cast&amp;lt;object&amp;gt;(),
                _bus.GetEvent&amp;lt;Event.AddBillingAddress&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Cast&amp;lt;object&amp;gt;(),
                _bus.GetEvent&amp;lt;Event.RemoveBillingAddress&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Cast&amp;lt;object&amp;gt;(),
                _bus.GetEvent&amp;lt;Event.OrderInvoiced&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Cast&amp;lt;object&amp;gt;(),
                _bus.GetEvent&amp;lt;Event.OrderDispatched&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Cast&amp;lt;object&amp;gt;()
            );

            return events.Scan(readModel,
                (readModel, @@event) =&amp;gt;
                {
                    if (@@event is Event.AccountNameChanged)
                    {
                        return readModel.WithAccountName(((Event.AccountNameChanged)@@event).AccountName);
                    }
                    else if (@@event is Event.AddBillingAddress)
                    {
                        ...
                    }
                    ...
                    else
                    {
                        throw new ArgumentException("Unknown message type");
                    }
                }
            );
        }
    );
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... which is not type safe, has very little compile time checking, requires a fall-through exception and, quite frankly, is horrible. I'm sure with Rx we can do something better.&lt;/p&gt;
&lt;p&gt;Well, lets look at this from a functional perspective. The action we want to perform when receiving each type of event can be considered to be a function in the form of &lt;code&gt;Func&amp;lt;TReadModel, TEvent, TReadModel&amp;gt;&lt;/code&gt;. This is very similar to the third parameter of the &lt;code&gt;Observable.Scan&lt;/code&gt; function with the problem being that we have multiple types of &lt;code&gt;TEvent&lt;/code&gt;. If only there was a way to produce a generic function that would operate correctly across all the event types.&lt;/p&gt;
&lt;p&gt;Well, by leaning on a concept from functional languages, this might be possible. &lt;a href="https://en.wikipedia.org/wiki/Partial_application" title="Partial Application definition from wikipedia"&gt;Partial application&lt;/a&gt; has been available in C# - via &lt;a href="http://csharpindepth.com/Articles/Chapter5/Closures.aspx" title="C# in Depth - The Beauty Of Closures"&gt;closures&lt;/a&gt; - since lambdas were introduced and allows you to:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;fix a number of arguments to a function, producing another function of smaller arity. Given a function f:(X * Y * Z) -&amp;gt; N , we might fix (or 'bind') the first argument, producing a function of type (f){partial}:(Y * Z) -&amp;gt; N . Evaluation of this function might be represented as f{partial}(2, 3). Note that the result of partial function application in this case is a function that takes two arguments&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So is there some way we can leverage this to remove the &lt;code&gt;TEvent&lt;/code&gt; argument from the function? Absolutely, by making the observable emit a &lt;em&gt;stream of partial functions&lt;/em&gt; in the form &lt;code&gt;Func&amp;lt;ReadModel,ReadModel&amp;gt;&lt;/code&gt; which can then be applied to the read model as follows:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;public IObservable&amp;lt;ReadModel&amp;gt; For(Guid id)
{
    if (id == null) throw new ArgumentNullException("id");

    return Observable.Create&amp;lt;ReadModel&amp;gt;(
        async observer =&amp;gt;
        {
            Service.AccountInfo accountInfo = await _accountService.GetAccountInfoAsync(id);

            IObservable&amp;lt;Func&amp;lt;ReadModel, ReadModel&amp;gt;&amp;gt; mutators = Observable.Merge(
                _bus.GetEvent&amp;lt;Event.AccountNameChanged&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(Functions.Apply),
                _bus.GetEvent&amp;lt;Event.AddBillingAddress&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(Functions.Apply),
                _bus.GetEvent&amp;lt;Event.RemoveBillingAddress&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(Functions.Apply),
                _bus.GetEvent&amp;lt;Event.OrderInvoiced&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(Functions.Apply),
                _bus.GetEvent&amp;lt;Event.OrderDispatched&amp;gt;().Where(@@event =&amp;gt; id.Equals(@@event.AccountId)).Select(Functions.Apply)
            );

            return mutators.Scan(accountInfo.ToReadModel(), (readModel, mutator) =&amp;gt; mutator(readModel)).Subscribe(observer);
        }
    );
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here the &lt;code&gt;Functions.Apply&lt;/code&gt; is an overloaded method for each of the event types. For example, the method for &lt;code&gt;Event.AccountNameChanged&lt;/code&gt; is implemented as follows:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;public static Func&amp;lt;ReadModel, ReadModel&amp;gt; Apply(Event.AccountNameChanged @@event)
{
    return readModel =&amp;gt; readModel.WithAccountName(@@event.AccountName);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method takes the event to be processed as a parameter and returns a function in the form &lt;code&gt;Func&amp;lt;ReadModel,ReadModel&amp;gt;&lt;/code&gt; that closes over the parameter and calls the &lt;code&gt;WithAccountName&lt;/code&gt; extension method when executed. A similar pattern is followed for all the other event types.&lt;/p&gt;
&lt;p&gt;Once we have projected and merged all the event streams into a single &lt;code&gt;IObservable&amp;lt;Func&amp;lt;ReadModel, ReadModel&amp;gt;&amp;gt;&lt;/code&gt; we can use the scan function to iteratively apply each function to the cumulative read model instance and emit the result after each event.&lt;/p&gt;
&lt;p&gt;Pretty neat huh!&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;If you're starting out with &lt;a href="http://docs.geteventstore.com/introduction/event-sourcing-basics/" title="Event Sourcing Basics at GetEventStore"&gt;Event Sourcing&lt;/a&gt; you're probably looking for the ability to project events into &lt;a href="http://cqrs.nu/tutorial/cs/03-read-models" title="CQRS tutorial - Read Models"&gt;read models&lt;/a&gt; that can be used by the views in your application. Today I'd like to share a neat little mechanism I've established for building read model in C# by employing a strongly typed yet functional approach.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/ToddlerBoxReleasedToStore" />
		<link rel="enclosure" type="image" href="http://ian.bebbs.co.uk/y3mVAxtKFjUEGk7Hdhzjl4UZ2INnFdBbw9K-tnYZ8DYoJ-VoKxpAN6w8Ng0DFTYdSxpHY6IvL5-VwJpLkQl6qWRmMQXSExLXopz5CFuSxIbyaMLrnL2Vy3yPZlISAAknXZdT4HwiZJ55zg2UtKwucBL88-xHh6rn5Mh97yzfRsCPjI%253Fwidth=1919&amp;height=1075&amp;cropmode=none" />
		<id>http://ian.bebbs.co.uk/posts/ToddlerBoxReleasedToStore</id>
		<title>ToddlerBox Released to the XBox Store</title>
		<updated>2016-11-16T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;My little girl loves playing with the XBox controller. In fact, she'll make a beeline for it as soon as she sees it and sit for ages twiddling the thumb-sticks and mashing the buttons. So I thought it'd be great to provide some visual accompaniment to the tactile experience of playing with the controller. Furthermore, I'd been looking for an excuse to play with Win2D as part of a UWP app and this felt like a perfect opportunity.&lt;/p&gt;
&lt;p&gt;To this end, I cracked open Visual Studio, started a blank UWP app, added a nuget reference to Win2D and started coding. Using a &lt;a href="https://microsoft.github.io/Win2D/html/T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl.htm"&gt;CanvasAnimatedControl&lt;/a&gt; it was simple to use the &lt;a href="https://microsoft.github.io/Win2D/html/E_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_Update.htm"&gt;Update&lt;/a&gt; callback to read the &lt;a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.gaming.input.gamepad"&gt;Gamepad&lt;/a&gt; input and then use the &lt;a href="https://microsoft.github.io/Win2D/html/E_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_Draw.htm"&gt;Draw&lt;/a&gt; callback to draw a series of sprites based on the values read.&lt;/p&gt;
&lt;p&gt;All in, from not having used Win2D before, it took just a few hours to get a minimal app working with a variety of sprites and manipulation mechanisms. Flipping my &lt;a href="https://msdn.microsoft.com/en-gb/windows/uwp/xbox-apps/devkit-activation"&gt;XBox into developer mode&lt;/a&gt; allowed me to deploy the app directly to the Xbox and have a play. And I must say, I was very pleased with the result:&lt;/p&gt;
&lt;img src="https://zphxkg.dm2302.livefilestore.com/y3mynwGeO7sZByGMtgH7TP5ykDeabNNlbyLCFHZfLu2Ml9QbQft2wq6-MeIxMukEXnVpiqZfLa_lh7h15xlStRf8Eo81_y5J-zSplYIIDh5dKAkS-j2q2wS4-GUHpOpwW5eltQ8_CLhSQNoRRJwdZWs_AhjvxhhOMdCS5PB-stLlTE?width=1024&amp;amp;height=575&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:320px; margin-top: 6px; margin-bottom: 6px;" alt="Lots of animals"&gt;
&lt;h6 style="text-align: center;" markdown="1"&gt;Lots of animals&lt;/h6&gt;
&lt;img src="https://zphykg.dm2302.livefilestore.com/y3mVAxtKFjUEGk7Hdhzjl4UZ2INnFdBbw9K-tnYZ8DYoJ-VoKxpAN6w8Ng0DFTYdSxpHY6IvL5-VwJpLkQl6qWRmMQXSExLXopz5CFuSxIbyaMLrnL2Vy3yPZlISAAknXZdT4HwiZJ55zg2UtKwucBL88-xHh6rn5Mh97yzfRsCPjI?width=1024&amp;amp;height=574&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:320px; margin-top: 6px; margin-bottom: 6px;" alt="Lots of colours"&gt;
&lt;h6 style="text-align: center;" markdown="1"&gt;Lots of colours&lt;/h6&gt;
&lt;img src="https://zphwkg.dm2302.livefilestore.com/y3m8XFQkqAgfzj1Yt9EqXW14XVybPwILZ0Hn_yGK2sbayqyeGZVqwSOGpT_xAJS3WwzYFeyQ4Gw66Fa-QyRpM71WpPUktEfgvgteIKAXfp9qCSW_my9s-7kb4Ys7Qz1JYRHv-k8fl1Y8xTTDpLhfY5xG2m56hT_ObFWrKxFhV-N-lw?width=1024&amp;amp;height=575&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:320px; margin-top: 6px; margin-bottom: 6px;" alt="Big..."&gt;
&lt;h6 style="text-align: center;" markdown="1"&gt;Big...&lt;/h6&gt;
&lt;img src="https://zphvkg.dm2302.livefilestore.com/y3mN4YESAkR1YSr8YbSDJtqi2DGD20bBa_w5RR2cYyAm9aXKXxib1A65RnVBxraAGCEXRELh0QMYDSASbm7F8ADzvh7EizJXlz-odd9Vhvq0ccfd0yNyL4v1f2qex5ol96GP6qvxE35Fo1L-hdlu9cfo08lDWZielw6ffr-vZ92aYE?width=1024&amp;amp;height=575&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:320px; margin-top: 6px; margin-bottom: 6px;" alt="...or small"&gt;
&lt;h6 style="text-align: center;" markdown="1"&gt;...or small&lt;/h6&gt;
&lt;img src="https://zphukg.dm2302.livefilestore.com/y3mcH_fRNs467C1gL7rApW6mWiFYB-eCoUexIuW3CwX4Cb0seAy8IxNhjyiGFQx3jDrcB8ToLQJgekRDInIwMkMHQvVZ05vWCPrptx2vxkcu-KG40ldNAqOZu2ulyL7OPSGt7uuFNnZLOdtycCFVs3Tl5IWJltKR6uhEgxNW_j-4tI?width=1024&amp;amp;height=575&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:320px; margin-top: 6px; margin-bottom: 6px;" alt="And monkeys!!!"&gt;
&lt;h6 style="text-align: center;" markdown="1"&gt;And monkeys!!!!&lt;/h6&gt;
&lt;p&gt;The real test came when I handed to the controller to my 14 month old baby girl. It took a few seconds for her to realise that what she did on the controller affected what was displayed on screen but then there was no stopping her. For three or four minutes (a record for her!!!) she sat still, mashing away on the controller and staring at the screen while I sat mesmerized by how quickly she picked it all up.&lt;/p&gt;
&lt;p&gt;I'd call that a win!&lt;/p&gt;
&lt;p&gt;Given this success, I made some final touches and submitted it to the store; specifically for XBox. To my amazement, it passed certification first time, within 24 hours of submission despite submitting it on a Sunday. And here it is:&lt;/p&gt;
&lt;img src="https://1y8kkg.dm2302.livefilestore.com/y3mRbMDxeVB6f5ArIwJ6FjYCPRmwpPTp6LL2IGiIFOrFVgHzox_2HUl9lPNSq09KxXP5M3LD1E3nwgFi1a8HUCT-0dTH_VmemTLCQwHggxqy8u04C85i51eLPBj1op_n2ppnjK2zkhGDHcWWAyYvkncmNy4bqw58vumGP8BY4f9nZU?width=1024&amp;amp;height=576&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:800px; margin-top: 6px; margin-bottom: 6px;" alt="ToddlerBox in the store"&gt;
&lt;p&gt;Installing from the store and ready to entertain my little one whenever I need a break.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;My little girl loves playing with the XBox controller. In fact, she'll make a beeline for it as soon as she sees it and sit for ages twiddling the thumb-sticks and mashing the buttons. So I thought it'd be great to provide some visual accompaniment to the tactile experience of playing with the controller. Furthermore, I'd been looking for an excuse to play with Win2D as part of a UWP app and this felt like a perfect opportunity.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/CqrsEsMvvmRxEfSqlUwpPcl" />
		<id>http://ian.bebbs.co.uk/posts/CqrsEsMvvmRxEfSqlUwpPcl</id>
		<title>CQRS/ES &amp; MVVM using RX, EF &amp; SQL in UWP &amp; PCL …</title>
		<updated>2016-12-22T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;So, while ToddlerBox is riding high, I'd like to share some thoughts about another app I have in the store; &lt;a href="https://www.microsoft.com/en-gb/store/p/littlelittle/9nblggh51b1b"&gt;LittleLittle&lt;/a&gt;. This app has been the subject of most of my efforts over the last few months and is significantly more complex (and, frustratingly, less successful!) than ToddlerBox.&lt;/p&gt;
&lt;p&gt;LittleLittle was started shortly after my baby girl started weaning and became constipated - apparently a very common occurrence. When we visited a paediatrician about it, they asked that we keep a record of her bowel movements so that we could track the condition to see if it was getting better or worse.&lt;/p&gt;
&lt;p&gt;"I wonder if there's an app for that", I thought. And, of course, there was.&lt;/p&gt;
&lt;h2&gt;Opportunity and Methodology&lt;/h2&gt;
&lt;p&gt;However, while there are plenty of other baby tracking apps out there, very few work across platform (I use Windows Mobile while my partner uses Android) and even fewer work as I feel they should.&lt;/p&gt;
&lt;p&gt;Given the requirement to work across a variety of platforms, maximising code re-use was extremely desirable. As such, I decided that all of the core-logic for the app needed to be written in a PCL. Furthermore, particular care would be taken to observe a pure MVVM methodology so that ViewModels (an embodiment of the app's UX) could also be shared across platform.&lt;/p&gt;
&lt;p&gt;Finally, following some work in the CQRS/ES space at my previous employer, I wanted to write an app that used this methodology end-to-end. LittleLittle seemed a perfect opportunity to do so.&lt;/p&gt;
&lt;h2&gt;Technology and Platform&lt;/h2&gt;
&lt;p&gt;To partner the &lt;a href="http://martinfowler.com/bliki/CQRS.html"&gt;CQRS&lt;/a&gt;/&lt;a href="http://martinfowler.com/eaaDev/EventSourcing.html"&gt;ES&lt;/a&gt; methodology, I was keen to use &lt;a href="https://msdn.microsoft.com/en-us/library/hh242985.aspx"&gt;Rx&lt;/a&gt; as the driving technology for implementation. As readers of my blog will know, I am very much of the opinion that "&lt;a href="http://slides.com/robwormald/everything-is-a-stream#/" title="Everything is a stream - Rob Wormald"&gt;everything&lt;/a&gt; &lt;a href="https://gist.github.com/staltz/868e7e9bc2a7b8c1f754" title="The introduction to Reactive Programming you've been missing - andrestaltz"&gt;is&lt;/a&gt; &lt;a href="http://weareadaptive.com/blog/2014/05/05/everything-is-a-stream/" title="Reactive Trader 2: Everything is a Stream - Matt Barrett"&gt;a&lt;/a&gt; &lt;a href="http://colintheshots.com/blog/?p=85" title="Be Reactive - Colintheshots"&gt;stream&lt;/a&gt;" and event sourcing from "a stream of events" seemed a perfect fit for Rx.&lt;/p&gt;
&lt;p&gt;Given that the Event Sourcing methodology - not to mention the nature of the app itself - required a persistence layer, I decided to use a recently new technology; &lt;a href="https://docs.microsoft.com/en-us/ef/core/"&gt;Entity Framework Core&lt;/a&gt;. I decided on EFCore simply because the tooling for the UWP platform was pretty good and I liked the 'code-first' approach to schema and migration generation. Coupled with this, I decided to use a &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/sqlite/"&gt;SQLite&lt;/a&gt; database as it was a proven data store for use with EFCore and across a variety of underlying platforms.&lt;/p&gt;
&lt;p&gt;Finally, when I started LittleLittle I was studying for the &lt;a href="https://www.microsoft.com/en-us/learning/exam-70-357.aspx"&gt;Microsoft Beta Exam "Developing Mobile Apps"&lt;/a&gt;. As such, while I was keen for the app to be cross-platform, the initial platform I wanted to support was UWP. I was - and still am - amazed by how, if you craft your code and views carefully, an application can run on an amazing number for platforms including RaspberryPi, Phone, Tablet, PC, Xbox and Hololens.&lt;/p&gt;
&lt;h2&gt;And here's one I made earlier…&lt;/h2&gt;
&lt;p&gt;After many weeks of work, innumerable iterations and much refactoring, I ended up with this:&lt;/p&gt;
  &lt;div class="horizontal_list"&gt;
    &lt;div class="horizontal_list_item"&gt;
      &lt;img src="https://zuimew-dm2306.files.1drv.com/y3mcsjpC-olqYg0zbsOtSdJ1adHni1Apkeklf-2gzDpiB9ph_25HlwE5jeyMxex_1ryS-zVZxkMw0vtNsDCMrnzser84bs_zq9S75PZqddHWrRfMGfo3YbQhc-3ZwJGzjHMRuX_Ml0UQ_81MQnW4oOqva8Ap2jw2DIbULXOgc9ER7E?width=144&amp;amp;height=256&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:256px; margin-top: 6px; margin-bottom: 6px;" alt="Splashscreen"&gt;
    &lt;/div&gt;
    &lt;div class="horizontal_list_item"&gt;
      &lt;img src="https://zuilew-dm2306.files.1drv.com/y3muwswRbqzTW9QY2Ms8LyW2AAl8vIDTt8DKl-lsB_0uqQvGZJDkqFRF1Jg151-YQzqyUxourRpTXaaHttLPaXkE3hXmavIZKYyI7isdayp_PLbXDVOKCX_u83bEdzFmsfPRAikqWEVteWkTaFnX1SH8YgEd4UABUffd5dVZ4QAkvM?width=144&amp;amp;height=256&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:256px; margin-top: 6px; margin-bottom: 6px;" alt="Available actions"&gt;
    &lt;/div&gt;
    &lt;div class="horizontal_list_item"&gt;
      &lt;img src="https://zuikew-dm2306.files.1drv.com/y3mCHoxbDYsMkbkH-RQlFyxK5Y6zVhP_TU7JYj_MLCQrEfQsClKqlWoVqSsEt-ae7tYBvH89lvstPnIfhrA6MKPXNyjAp7O9EMy28Cof7nnc22DTFYs5FUECbQUEV_P8HxaVwWSFUyEN1MGAuWfY1x-36ZHviTEjqBOZM9m6pYm80Q?width=144&amp;amp;height=256&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:256px; margin-top: 6px; margin-bottom: 6px;" alt="History"&gt;
    &lt;/div&gt;
    &lt;div class="horizontal_list_item"&gt;
      &lt;img src="https://zuiiew-dm2306.files.1drv.com/y3mz7gADh3Y09Fb6QuQ2CY35gjWD2T9KEY_oWWbcijxNl2URePlVW0IjLhEBWeIoPOR1a-gAhRyoYNTdtefVfe8vd6d-Lnq5Cq_rcXEt4HZ5kt-jxOsCPLkJCaJtnfi5P-dTVNtJhMBYNbOtfiHXiPd9HsZODdjUwX-LphBvBAl_98?width=144&amp;amp;height=256&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:256px; margin-top: 6px; margin-bottom: 6px;" alt="Height and weight charts"&gt;
    &lt;/div&gt;
    &lt;div class="horizontal_list_item"&gt;
      &lt;img src="https://zeirew-dm2306.files.1drv.com/y3miUjsB3mUDyGdRCPudsd1I42ad9-MAI5JRV15z821gQAc7H_mqIgEeEDr1YWCvZh5AZOT6BAuAVSdMwz-Qnr6mG53KzP8xbeo2hinEJyplWnHoVs4FG7sbga6HMgLP6qd_x_mxRx2uqEVTfVAgXSOLMmHnQSpMxbV7DzQzPT1LXY?width=144&amp;amp;height=256&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:256px; margin-top: 6px; margin-bottom: 6px;" alt="Sleep and excretion charts"&gt;
    &lt;/div&gt;
    &lt;div class="horizontal_list_item"&gt;
      &lt;img src="https://zeiqew-dm2306.files.1drv.com/y3m2ZYqI7vBDCM_Ptv8Xvgo-UeDhvqtKIh5cxNy40KinoCzXem7V_-gIOsrkYvWyOtI6dod-HgNweHuue9DUB9r2yvgPNNXVvkPkIJKshYS4z-M1Qts9DPdqobqwnfHpIjewlWDj_Z6sFFVgbRlvsySton_n_nQrk4buXjebRss5JQ?width=144&amp;amp;height=256&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:256px; margin-top: 6px; margin-bottom: 6px;" alt="Sleep and excretion charts"&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;p&gt;And I'm extremely happy with the result. CQRS/ES and Rx are a perfect match and the technology stack in general has been extremely productive.&lt;/p&gt;
&lt;p&gt;This morning I drew up a (retrospective) architecture to illustrate how much of the application is portable and how simple yet extensible it is.&lt;/p&gt;
&lt;img src="https://bdliqq-dm2306.files.1drv.com/y3mdSQ-fHhXJWrDI-4wfqFoaso56RU_vCH51ognfdTMYlml6nEgxQHUJWgTgHg5fw4cAEwpaJM1GVookE2ok4HscXXmd-a6WAcU7Xd509Rdmb35JaS2-5Zzx5G_YiNpAoxLekZifHRzDQittyVv6rybVIp33YiqopFatHZVcND-lhY?width=1024&amp;amp;height=626&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:800; margin-top: 6px; margin-bottom: 6px;" alt="Architecture diagram"&gt;
&lt;h2&gt;"The proof is in the dog-fooding"&lt;/h2&gt;
&lt;p&gt;Apologies for the mixed metaphors but, suffice to say, while the technology choices may be deemed to be a success, the app can only be consider to be so if it is fit for purpose. As such, I have been using LittleLittle everyday for the past several weeks - across a number of iterations and versions - and I'm very, very pleased with the result. The UI is fast and efficient to use and the app has yet to crash or lose any data (either at runtime or between versions).&lt;/p&gt;
&lt;p&gt;Indeed, a little while ago my other half took our baby to stay with her grandparents for a several days and agreed to keep LittleLittle up to date while she was away. She came back with a couple of small suggestions but overall very impressed by how fast and easy to use it was.&lt;/p&gt;
&lt;p&gt;While it has yet to see a significant number of Windows Store acquisitions, Store Analytics shows there are a few people actively using the app and, so far, I have yet to see any crashes or failures. I intend to leverage the success of ToddlerBox to promote LittleLittle in the near future so, fingers crossed, it'll start getting some serious use and useful feedback.&lt;/p&gt;
&lt;h2&gt;Moving forward&lt;/h2&gt;
&lt;p&gt;While I intend to put LittleLittle on hold for a little while in order to work on some other projects I've been meaning to look at, I very much intend to return to the project early in the new year. I have a backlog full of features I'd like to implement not to mention the need to write a version which runs on Android/iOS (which will probably be in Xamarin).&lt;/p&gt;
&lt;p&gt;In the mean time, I will be blogging about a few of the components in the architecture diagram above and sharing some of the approaches I have taken and successes (or problems!) I encountered.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;So, while ToddlerBox is riding high, I'd like to share some thoughts about another app I have in the store; &lt;a href="https://www.microsoft.com/en-gb/store/p/littlelittle/9nblggh51b1b"&gt;LittleLittle&lt;/a&gt;. This app has been the subject of most of my efforts over the last few months and is significantly more complex (and, frustratingly, less successful!) than ToddlerBox.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartII" />
		<id>http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartII</id>
		<title>Home Network Monitoring - Part II</title>
		<updated>2016-04-10T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;In part one of this series I set up my home router to send a variety of Syslog messages to LogStash which then forwarded these messages to ElasticSearch for indexing and querying by Kibana in a simplistic dashboard. In this post, I'm going to start parsing out some of the details of the Syslog messages to start giving us a clearer idea about which devices on my local network are opening sessions with remote servers.&lt;/p&gt;
&lt;h1&gt;message types&lt;/h1&gt;
&lt;p&gt;My router sends a number of different messages types; everything from router/dsl bandwidth information to the firewall log as can be seen below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/DrayTek-Syslog.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="DrayTek Syslog Administration"&gt;
&lt;p&gt;For now, I'm really only interested in the 'User Access Log' which tells us when a local device resolves an IP address for a domain name or accesses a remote server. This log constitutes a number of message types such as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;TCP / UDP access
This message is sent by the router when a device on the local network accesses a remote server via TCP or UDP. It looks like this: &lt;code&gt;&amp;lt;150&amp;gt;Apr 10 16:55:38 Vigor: Local User (MAC=00-00-00-00-00-00): 192.168.1.205:64281 -&amp;gt; 5.10.110.36:80 (TCP)Web&lt;/code&gt;. From this type of message I am interested in parsing out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Syslog timestamp&lt;/li&gt;
&lt;li&gt;Syslog username&lt;/li&gt;
&lt;li&gt;Source Mac Address&lt;/li&gt;
&lt;li&gt;Source IP Address&lt;/li&gt;
&lt;li&gt;Destination IP Address&lt;/li&gt;
&lt;li&gt;Protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DNS lookup
This message is sent by the router when a device on the local network resolves an IP address for a remote server DNS nane. It looks like this: &lt;code&gt;&amp;lt;150&amp;gt;Apr 10 18:52:49 Vigor: Local User (MAC=00-00-00-00-00-00): 192.168.1.62 DNS -&amp;gt; 192.168.1.1 inquire a.root-servers.net&lt;/code&gt;. From this type of message I am interested in parsing out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Syslog timestamp&lt;/li&gt;
&lt;li&gt;Syslog username&lt;/li&gt;
&lt;li&gt;Source Mac Address&lt;/li&gt;
&lt;li&gt;Source IP Address&lt;/li&gt;
&lt;li&gt;Domain being resolved&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this post I'll focus on enriching the incoming message with information from the access message but will move on to parsing multiple message types in a future post.&lt;/p&gt;
&lt;h1&gt;parsing access messages&lt;/h1&gt;
&lt;p&gt;Logstash provides a great tool for parsing messages: the 'grok' filter. As explained in &lt;a href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html"&gt;the documentation&lt;/a&gt; 'grok' allows you to 'Parse arbitrary text and structure it. This tool is perfect for syslog logs, apache and other webserver logs, mysql logs, and in general, any log format that is generally written for humans and not computer consumption.'&lt;/p&gt;
&lt;p&gt;This filter applies a regular expression like patterns to a field in the incoming message and, if matched successfully, adds each matched expression to the message being processed as a new field. The fields to capture are defined in the format &lt;code&gt;%{SYNTAX:SEMANTIC}&lt;/code&gt; where the &lt;code&gt;SYNTAX&lt;/code&gt; element is a known pattern (see below) or a regular expression and the &lt;code&gt;SEMANTIC&lt;/code&gt; is a name of the field to capture.&lt;/p&gt;
&lt;p&gt;Logstash ships with over 120 known &lt;code&gt;SYNTAX&lt;/code&gt; patterns and these patterns can be supplemented by adding new pattern files to a specific directory. However, the default patterns supplied cover nearly all common scenarios and allow almost all the pertinent information in the TCP access message above to be parsed.&lt;/p&gt;
&lt;p&gt;So, by just using the default patterns, I can write the expression&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;&amp;lt;%{POSINT:syslog_pri}&amp;gt;%{SYSLOGTIMESTAMP:syslog_timestamp} Vigor\: Local User \(MAC=%{MAC:source_mac}\): %{IP:source_address}(?::%{POSINT:source_port})? -&amp;gt; %{IP:destination_address}(?::%{POSINT:destination_port})?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which gives us the following additional fields in the message:&lt;/p&gt;
&lt;p&gt;|field|value|
|-----|-----|
|source_address|192.168.1.205|
|source_port|64281|
|source_mac|00-00-00-00-00-00|
|syslog_pri|150|
|syslog_timestamp|Apr·10·16:55:38|
|destination_address|5.10.110.36|
|destination_port|80|&lt;/p&gt;
&lt;p&gt;Neat huh! I'd also like to know whether the access message is TCP or UDP so I'm going to add a custom regular expression to the end of the pattern to parse the protocol string out of the message. In full the pattern is now:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;&amp;lt;%{POSINT:syslog_pri}&amp;gt;%{SYSLOGTIMESTAMP:syslog_timestamp} Vigor\: Local User \(MAC=%{MAC:source_mac}\): %{IP:source_address}(?::%{POSINT:source_port})? -&amp;gt; %{IP:destination_address}(?::%{POSINT:destination_port})? \((?&amp;lt;protocol&amp;gt;TCP|UDP)\)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This would result in the following fields available in the message:&lt;/p&gt;
&lt;p&gt;|field|value|
|-----|-----|
|source_address|192.168.1.205|
|source_port|64281|
|source_mac|00-00-00-00-00-00|
|syslog_pri|150|
|syslog_timestamp|Apr·10·16:55:38|
|destination_address|5.10.110.36|
|destination_port|80|
|&lt;strong&gt;protocol&lt;/strong&gt;|&lt;strong&gt;TCP&lt;/strong&gt;|&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: You can use &lt;a href="http://grokconstructor.appspot.com/"&gt;Grok Constructor&lt;/a&gt; to help you perfect your grok expressions prior to trying them in Logstash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;adding the grok filter to logstash&lt;/h1&gt;
&lt;p&gt;So, now I know how to extract all the information I'm interested in from the access message, I need to get Logstash to actually do it. This is done by adding a &lt;code&gt;grok&lt;/code&gt; filter to the &lt;code&gt;filter { }&lt;/code&gt; section of the &lt;code&gt;syslog.config&lt;/code&gt; file authored in the previous post as shown here:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;input {
  tcp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
  udp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
}

filter {
    grok {
      match =&amp;gt; [ "message", "&amp;lt;%{POSINT:syslog_pri}&amp;gt;%{SYSLOGTIMESTAMP:syslog_timestamp} Vigor\: Local User \(MAC=%{MAC:source_mac}\): %{IP:source_address}(?::%{POSINT:source_port})? -&amp;gt; %{IP:destination_address}(?::%{POSINT:destination_port})? \((?&amp;lt;protocol&amp;gt;TCP|UDP)\)" ]
    }
}

output {
  elasticsearch {
    hosts =&amp;gt; ["192.168.1.30:9200"]
    index =&amp;gt; "syslog-%{+YYYY.MM.dd}"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice the grok section in which we specify a 'match' field. This field takes an array of two strings; the first string is the field containing the text to match and the second is the pattern to match the text to.&lt;/p&gt;
&lt;p&gt;Once this is added to the &lt;code&gt;syslog.config&lt;/code&gt; file and Logstash restarted, these new fields should be being written to ElasticSearch. The easiest way to see if this is working is to return to Kibana and, from the 'Settings/Indices' area, click the 'syslog-*' pattern on the left and then click the orange 'Refresh field list' button and the field list appears like this:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-RefreshSyslogIndex.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Refresh Syslog Index"&gt;
&lt;h1&gt;exploring network access information&lt;/h1&gt;
&lt;p&gt;Now the additional fields are available to Kibana, I can start exploring the data to learn about which devices on my network are access which remote servers.&lt;/p&gt;
&lt;p&gt;To do this I first need to add the new fields to the 'Syslog Messages' saved search. This can be done by navigating to the 'Discover' page, loading the 'Syslog Messages' search (using the 'Load Saved Search' button in the top right of the screen), adding the new fields and re-saving it. This is shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-AddingNewFieldsToSyslogMessagesSavedSearch.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Adding New Fields To Syslog Messages Saved Search"&gt;
&lt;p&gt;I'm now able to add some very interesting new visualizations to our dashboard such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Number of access by each local device&lt;/li&gt;
&lt;li&gt;Number of access by port&lt;/li&gt;
&lt;li&gt;Number of access to each remote server&lt;/li&gt;
&lt;li&gt;Number of access by protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll only run through adding the first visualization is they're all very similar.&lt;/p&gt;
&lt;p&gt;First, I navigate to the 'Visualization' area and click the 'New Visualization' button. I want to see the number of accesses being made by each device as a fraction of the whole so will use a donut chart. This is done by selecting 'Pie chart' from the "Create new Visualization" menu and selecting our 'Syslog Messages' saved search in the "Select a search source" menu. Once this is done, I get a pie chart with a single section as shown here:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-NewPieChartVisualization.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana New Pie Chart Visualization"&gt;
&lt;p&gt;I then need to select the 'Split Slices' bucket type, choose 'Terms' as the aggregation type and finally select 'source_address' as the field on which to aggregate (i.e. count) unique terms. Applying this to the pie-chart (using the 'Apply' button) results in the following:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-SplitSlicePieChartUsingSourceAddress.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Split Slice Pie Chart Using Source  ddres s"&gt;
&lt;p&gt;I'll  then  turn  this into a donut chart by ticking the 'Donut' check box from the 'Options' area as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-SplitSliceDonutChartUsingSourceAddress.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Split Slice Donut Chart Using Source Address"&gt;
&lt;p&gt;Now I'll use the same process for adding donut charts for each of the other metrics outlined above and add all the charts to my dashboard giving me the following:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithAccessCharts.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Access Charts"&gt;
&lt;h1&gt;summary&lt;/h1&gt;
&lt;p&gt;In this post, I showed how to extract structured information from unstructured text data in our source message. I then showed how this can be used within Kibana to highlight which devices on the local network are accessing which remote servers, on which ports and using which protocols.&lt;/p&gt;
&lt;p&gt;In the next post, I'll examine how to further enhance the information we've extracted from the access messages to make it easier to relate ip address to actual devices on the network and out in the world.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;In part one of this series I set up my home router to send a variety of Syslog messages to LogStash which then forwarded these messages to ElasticSearch for indexing and querying by Kibana in a simplistic dashboard. In this post, I'm going to start parsing out some of the details of the Syslog messages to start giving us a clearer idea about which devices on my local network are opening sessions with remote servers.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/UsingSVGInUWP" />
		<id>http://ian.bebbs.co.uk/posts/UsingSVGInUWP</id>
		<title>The absolute easiest way to use SVG icons in UWP apps</title>
		<updated>2016-09-01T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;There are &lt;a href="http://stackoverflow.com/a/3528493/628821"&gt;many&lt;/a&gt; (&lt;a href="http://stackoverflow.com/a/22107360/628821"&gt;many&lt;/a&gt;, &lt;a href="http://blogs.u2u.be/diederik/post/2012/07/26/Transforming-SVG-graphics-to-XAML-Metro-Icons.aspx"&gt;many&lt;/a&gt;) ways to use SVG assets as icons in UWP / XAML apps, most requiring some form of DataTemplate or UserControl. While these approaches work &lt;em&gt;ok&lt;/em&gt; they're normally a pain to author and use, often requiring custom converters to be written if the asset is to be used via any form of data binding. Here I present an extremely flexible way of using these assets that requires nothing more than drag-and-drop.&lt;/p&gt;
&lt;p&gt;This approach uses &lt;a href="https://glyphter.com/"&gt;Glyphter&lt;/a&gt; - a free, online tool for converting SVG icons to fonts - to produce a custom font containing your SVG assets; similar to fonts like &lt;a href="http://modernicons.io/segoe-mdl2/cheatsheet/"&gt;Segoe MDL2&lt;/a&gt; and &lt;a href="http://fontawesome.io/"&gt;FontAwesome&lt;/a&gt;. Glypter's free tier allows you to craft a single font, containing just basic alpha-numerics. Should you need more than this, you can upgrade to a premium tier which allows you to work on multiple fonts of a much greater size.&lt;/p&gt;
&lt;p&gt;Once you've built your font, it can be embedded in the app package and icons displayed by simply using a TextBlock element with the Text property set to the alpha-numeric code of the icon to display and the FontFamily set to the custom font. Furthermore, you're easily able to present the required icons in the desired colour - by changing the TextBlock's Foreground brush - and size - by changing FontSize or embedding within the TextBlock within a ViewBox.&lt;/p&gt;
&lt;p&gt;To get started, simply locating the SVG asset you'd like to use. &lt;a href="https://thenounproject.com/"&gt;The Noun Project&lt;/a&gt; is a good resource containing an incredible number of high quality icons that can be used in commercial products for a small fee or via attribution. Once you've found the icon you want to use - lets use &lt;a href="https://thenounproject.com/localdomain/collection/memes/?oq=meme&amp;amp;cidx=0&amp;amp;i=105269"&gt;this one&lt;/a&gt; by &lt;a href="https://thenounproject.com/localdomain/"&gt;Gareth&lt;/a&gt; - simply download the icon as an SVG. Once it's downloaded, locate the file and drag it onto the Glypter grid in the desired location. After a short pause while the file is uploaded to Glypter and processed, it'll appear in the grid slot you selected; here I've added the icon to the 'A':&lt;/p&gt;
&lt;img src="/Content/UsingSVGInUWP/DraggedIntoGlyphter.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Glyphter custom font"&gt;
&lt;p&gt;Repeat this for all the icons you want to use - I'll just stick with the one icon for now - then download the font by clicking the font download button (the 'down arrow' in the 'FONT' button). This will compile all your assets into a zip file containing the font (in &lt;a href="https://en.wikipedia.org/wiki/TrueType"&gt;'.ttf'&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Web_Open_Font_Format"&gt;'.woff'&lt;/a&gt; formats), svg and css assets. We're only interested in the '.ttf' file so extract it from the zip file and copy it to the 'Assets' folder of your UWP app.&lt;/p&gt;
&lt;p&gt;From within VisualStudio - or better yet, Blend - add the '.ttf' file to the project, ensuring it's 'Build Action' is set to 'Content' and 'Copy to Output Directory' set to 'Do not copy' as shown below:&lt;/p&gt;
&lt;img src="/Content/UsingSVGInUWP/BlendWithGlyphterFont.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Custom font added to project in Blend"&gt;
&lt;p&gt;With this in place, when you drop a TextBlock on a page, you should be able to select your embedded font from the Font combobox as shown below:&lt;/p&gt;
&lt;img src="/Content/UsingSVGInUWP/SelectFont.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Custom font selection in Blend"&gt;
&lt;p&gt;The rest, as they say, is history. In a few minutes you too can use the following XAML:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;&amp;lt;Grid&amp;gt;
    &amp;lt;StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"&amp;gt;
        &amp;lt;TextBlock Text="SVG in UWP EZ!" HorizontalAlignment="Center" FontFamily="Impact" Margin="10"/&amp;gt;
        &amp;lt;TextBlock Text="A" FontFamily="ms-appx:/Assets/Glyphter.ttf#Glyphter" FontSize="96" HorizontalAlignment="Center"/&amp;gt;
        &amp;lt;TextBlock Text="Y U NO USE!" HorizontalAlignment="Center" FontFamily="Impact"/&amp;gt;
    &amp;lt;/StackPanel&amp;gt;
&amp;lt;/Grid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: There seems to be an issue/inconsistency with the FontFamily value created when using the XAML designer to select your custom font. Sometimes, but not always, the designer will fail to add the "ms-appx" protocol to the FontFamily property value which, while it has no effect at design time, will prevent the app from locating the custom font at runtime. You should there ensure this value is present before deploying your app.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To create this amazing UI:&lt;/p&gt;
&lt;img src="/Content/UsingSVGInUWP/SVGInUWPEZ.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="SVG in UWP EZ! Y U NO USE!"&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;There are &lt;a href="http://stackoverflow.com/a/3528493/628821"&gt;many&lt;/a&gt; (&lt;a href="http://stackoverflow.com/a/22107360/628821"&gt;many&lt;/a&gt;, &lt;a href="http://blogs.u2u.be/diederik/post/2012/07/26/Transforming-SVG-graphics-to-XAML-Metro-Icons.aspx"&gt;many&lt;/a&gt;) ways to use SVG assets as icons in UWP / XAML apps, most requiring some form of DataTemplate or UserControl. While these approaches work &lt;em&gt;ok&lt;/em&gt; they're normally a pain to author and use, often requiring custom converters to be written if the asset is to be used via any form of data binding. Here I present an extremely flexible way of using these assets that requires nothing more than drag-and-drop.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/IContributedAndAllIGot" />
		<link rel="enclosure" type="image" href="http://ian.bebbs.co.uk/y3mNzf5Sylp6SOZbv6t2Q_atZh0reZJW7RYL9EgdZ4V4aZSaf_8Sqe8UPzCEaq7t3RKQn5GX1DvkSWdsolooyOHZj9Ma389uQChI7uhzICOmFTm8aZaRBYS4jS0K8g07vYNjEJofO_Io8VnpaqgTRsLJwSIEMEzg1P1TOt9dbXzm6s%253Fwidth=2465&amp;height=1039&amp;cropmode=none" />
		<id>http://ian.bebbs.co.uk/posts/IContributedAndAllIGot</id>
		<title>I contributed and all I got...</title>
		<updated>2016-11-12T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;A while back, I contributed my &lt;a href="http://ian.bebbs.co.uk/posts/UsingHyperlinkInMVVM"&gt;HyperlinkExtensions&lt;/a&gt; to the &lt;a href="http://ian.bebbs.co.uk/posts/UWPCommunityToolkitv1_1"&gt;UWP Community Toolkit&lt;/a&gt;. This morning postman brought me a very pleasant surprise:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://orvy1q.dm2302.livefilestore.com/y3mcg6h9OGMl0tKB0ohOeyyBSVI-CwtcQF9XPWLXHBQI1inTRaPd9_k1jeoOpTIga1ZVnezoWRp34VnQuSmMduXhLro6OeJ4Unrgxe3PVOAh2kA3Pae1SN3wmxv3sxPDJlD1uTFxMKkKMk2lRjxKWZE1Ktqvs7k-mr6mCjq0UdKLh8?width=574&amp;amp;height=660&amp;amp;cropmode=none" alt="T-shirt front"&gt;&lt;img src="https://orvx1q.dm2302.livefilestore.com/y3mzcdee8-cKnRVTO-rrLFoC5rQMdorNPkUwiu49xlSHN6OeisdbwOFTzvPTLZzInaP0JBQLgOu9bkX8eZZZa4SuKd2ruJI80mI38NbMcTftpRMmE9zFx6DwWNGSctfhS6F2HRlKQ7Ve60D8Y6G94bbLVuFJ5hp4E9mYWQTG0QhxVk?width=594&amp;amp;height=660&amp;amp;cropmode=none" alt="T-shirt back"&gt;&lt;/p&gt;
&lt;p&gt;How cool is that?! Not too many open source projects provide such swag!&lt;/p&gt;
&lt;p&gt;Thanks to the &lt;a href="https://github.com/Microsoft/UWPCommunityToolkit"&gt;UWP Community Toolkit&lt;/a&gt; maintainers, keep up the good work!&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;A while back, I contributed my &lt;a href="http://ian.bebbs.co.uk/posts/UsingHyperlinkInMVVM"&gt;HyperlinkExtensions&lt;/a&gt; to the &lt;a href="http://ian.bebbs.co.uk/posts/UWPCommunityToolkitv1_1"&gt;UWP Community Toolkit&lt;/a&gt;. This morning postman brought me a very pleasant surprise:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/OnTheImportanceOfDoingSomething" />
		<id>http://ian.bebbs.co.uk/posts/OnTheImportanceOfDoingSomething</id>
		<title>On The Importance of Doing Something</title>
		<updated>2015-11-16T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;I've just become a father. It's amazing and I'm loving every day, from waking up in the morning and being greeted by huge grin from my little girl to putting her to bed in the evening when she can barely keep her eyes open. My baby instantaneously became priority number one and has left little time for other passions like home programming projects.&lt;/p&gt;
&lt;p&gt;Yet, simultaneously, I have found the time since my baby was born to be some of the most productive time of my life. Since she her birth, I've spent every hour possible with her, worked regular hours - and been productive during those hours - at my day job, got an unexpectedly healthy amount of sleep and still managed to complete a significant amount of work on personal projects as well as creating and writing this blog.&lt;/p&gt;
&lt;p&gt;While reflecting on why this might be, I came up with one simple, inescapable conclusion: &lt;a href="https://github.com/ibebbs" title="ibebbs Github Profile"&gt;my Github profile&lt;/a&gt;. More specifically the "Current Streak" of contributions. You see, I am a sucker for gamification and seeing that "Current Streak" increase each day is remarkably rewarding. As such, I am finding time each day - no matter how little - to do &lt;em&gt;something&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Previously, I'd get home in the evening, think about the projects I had to work on, realise that there probably wouldn't be enough time to make significant progress and procrastinate about it until I had more time available to "get things done properly" - which was happening increasingly rarely. Now, instead of focusing on some distant goal, I simply think about finding &lt;em&gt;something&lt;/em&gt; I can do and publish to Github in whatever time I have available. It really doesn't matter what it is, as long as I get the &lt;a href="https://www.microsoft.com/surface/en-gb/devices/surface-pro-4" title="Microsoft Surface Pro 4"&gt;Surface&lt;/a&gt; out and start. Almost always, once I've started something, I get engrossed in it and am able to spend way more time than I thought might be available on it.&lt;/p&gt;
&lt;p&gt;For example, I'm writing this post from the sofa in my front room having spent a wonderful evening with my other half and little girl. Not having had time to make a commit today, I decided not to get an early night and instead tucked them into their respective beds before heading back down stairs to get a start on this post. Initially I had planned simply jot down a few ideas and possibly write a sentence or two before committing to Github and retiring for the evening. Yet here I am still writing after several paragraphs (and &lt;a href="https://music.microsoft.com/album/london-grammar/if-you-wait-deluxe-edition/bz.EE99E107-0100-11DB-89CA-0019B92A3933?action=play" title="London Grammar on Groove Music"&gt;one very enjoyable album&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I probably won't finish tonight, and definitely won't publish this post until I've had time to re-read and edit it. But I've got my commit for the day and made an unexpected amount of progress on a blog post about making an unexpected amount of progress. In short, I got &lt;em&gt;something&lt;/em&gt; done and that feels good.&lt;/p&gt;
&lt;p&gt;Night!&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;I've just become a father. It's amazing and I'm loving every day, from waking up in the morning and being greeted by huge grin from my little girl to putting her to bed in the evening when she can barely keep her eyes open. My baby instantaneously became priority number one and has left little time for other passions like home programming projects.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/RxWeb" />
		<id>http://ian.bebbs.co.uk/posts/RxWeb</id>
		<title>Using Rx on the Web</title>
		<updated>2016-03-04T00:00:00Z</updated>
		<content>
                                        


&lt;h2&gt;Finding a framework&lt;/h2&gt;
&lt;p&gt;So, I have recently found myself with a need to dive into the depths of modern web-development and, as I am currently looking to write a highly interactive single-page web application, the first thing to decide on was a client side framework to use. You won't have to read too many of my blog posts to realise that I'm a big fan of &lt;a href="https://msdn.microsoft.com/en-us/data/gg577609.aspx?f=255&amp;amp;MSPPError=-2147217396"&gt;Rx&lt;/a&gt;. I am also keen on the MVVM approach to separating concerns when writing user interfaces. Therefore, during my research of modern web UI frameworks, I was extremely interested when I came across &lt;a href="http://webrxjs.org/"&gt;WebRx&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Billed as "a browser-based MVVM-Framework that combines functional-reactive programming with declarative Data-Binding, Templating and Client-Side Routing" it struck a chord with my UI development style. In fact, it elevates &lt;a href="http://reactivex.io/documentation/observable.html"&gt;Observables&lt;/a&gt; to a first class concept in a manner eerily similar to the ObservableProperty/ObservableCommand classes I wrote for my &lt;a href="https://github.com/ibebbs/Caliburn.Micro.Reactive.Extensions"&gt;Caliburn.Micro.Reactive.Extensions&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;Unfortunately, as a framework, WebRx seems to be struggling to achieve critical mass and therefore there was very limited information available when I decided to attempt to implement the &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;WebRx "Hello World"&lt;/a&gt; example using Visual Studio. As is almost par for the course when using a new framework, I fell at a frustratingly early hurdle and, given the lack of info (seriously, only one tagged post on &lt;a href="https://stackoverflow.com/questions/tagged/webrx"&gt;stackoverflow&lt;/a&gt;!), I had to work through the problem 'old-skool'... ya'know, by actually finding and solving the problem rather than just googling a solution.&lt;/p&gt;
&lt;p&gt;Anyway, I thought I'd put together a post outlining how to get started with this framework in Visual Studio in an attempt to start addressing the lack of info regarding this promising framework.&lt;/p&gt;
&lt;h2&gt;The name is Bart Simpson&lt;/h2&gt;
&lt;p&gt;Rather than the traditional 'Hello World' app, WebRx's 'Getting Started' guide displays a page stating 'The name is Bart Simpson'. This is done in order to demonstrates the MVVM separation of concerns through the use of a view bound to an underlying view model which provides the name 'Bart Simpson'.&lt;/p&gt;
&lt;p&gt;I don't intend to cover the entirety of the getting started guide here, merely the additional/different steps needed to get the project work from Visual Studio. As such, I suggest &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;opening the guide&lt;/a&gt; in a browser and leaving it open while working through the steps below as I will be referring to it extensively.&lt;/p&gt;
&lt;p&gt;First up, open Visual Studio. Pretty much any modern version is fine, I am using Visual Studio 2015 Professional. Start a new project and select 'ASP.NET Web Application'&lt;/p&gt;
&lt;img src="/Content/RxWeb/NewAspWebApplication.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="New ASP.NET Web Application"&gt;
&lt;p&gt;In the following dialog, select an empty ASP.NET Template and click ok.&lt;/p&gt;
&lt;img src="/Content/RxWeb/EmptyAsp452Project.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Empty ASP.NET Template"&gt;
&lt;p&gt;Now we have a web project, lets add a reference to WebRx. This can be done using either the Package Manager Console using the command &lt;code&gt;Install-Package WebRx&lt;/code&gt; or via the visual Nuget package manager as shown below:&lt;/p&gt;
&lt;img src="/Content/RxWeb/InstallWebRxPackage.png" class="img-responsive" style="margin: auto; width:66%; margin-top: 6px; margin-bottom: 6px;" alt="Install WebRx Package"&gt;
&lt;p&gt;Regardless of how you add the reference to WebRx, you will be asked whether you wish to 'Search for TypeScript Typings' as shown below. Just click 'Yes'.&lt;/p&gt;
&lt;img src="/Content/RxWeb/AddTypeScriptTypings.png" class="img-responsive" style="margin: auto; width:300px; margin-top: 6px; margin-bottom: 6px;" alt="Add TypeScript Typings"&gt;
&lt;p&gt;You will also be prompted to accept the license aggrement for a number of RxJs packages which WebRx depends upon; you should accept these too.&lt;/p&gt;
&lt;p&gt;One the reference is added, you should find that a Scripts directory has been added to your solution and which contains a number of 'ts' and 'js' files for both WebRx and RxJs. With this in place, we can then continue with the getting started guide by adding an 'index.html' file to the project and copy pasting the sample 'index.html' file from the WebRx &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;getting started guide&lt;/a&gt;. It should look something like this:&lt;/p&gt;
&lt;img src="/Content/RxWeb/CopyPasteIndexFromGettingStarted.png" class="img-responsive" style="margin: auto; width:400px; margin-top: 6px; margin-bottom: 6px;" alt="Copy Paste Index From Getting Started"&gt;
&lt;p&gt;At this point the eagle-eyed amongst you will notice three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Our scripts are now in a 'bower_modules' directory&lt;br&gt;
As we used Nuget and not bower to install our WebRx dependencies, the script references should be changed to refer to the Scripts directory&lt;/li&gt;
&lt;li&gt;Our scripts directory does not contain a rx.all.js file.&lt;br&gt;
For some reason, WebRx depends on a version of RxJs that does not include an rx.all.js file. To resolve this, simply upgrade to the latest version of RxJs-All, as shown below:
&lt;img src="/Content/RxWeb/UpgradeRxJsAll.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Upgrade RxJs All"&gt;&lt;/li&gt;
&lt;li&gt;We don't have a 'js' folder containing an 'app.js' file.&lt;br&gt;
Because we've not got to that bit yet.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now add a 'js' folder to the solution and add a 'app.js' to it. In this file copy the full 'app.js' sample from the WebRx  &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;getting started guide&lt;/a&gt; as shown below:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;wx.app.component('hello', {
  viewModel: function() {
    this.firstName = 'Bart';
    this.lastName = 'Simpson';
  },
  template: 'The name is &amp;lt;span data-bind="text: firstName + \' \' + lastName"&amp;gt;&amp;lt;/span&amp;gt;'
});

wx.router.state({
  name: "$",
  views: { 'main': "hello" }
});

wx.router.reload();

wx.applyBindings();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save all, set 'index.html' as the start page and hit F5. If everything went as planned you should now see 'The name is Bart Simpson' displayed in your default browser:&lt;/p&gt;
&lt;img src="/Content/RxWeb/TheNameIsBartSimpson.png" class="img-responsive" style="margin: auto; width:400px; margin-top: 6px; margin-bottom: 6px;" alt="The Name Is Bart Simpson"&gt;
&lt;p&gt;And that's it. While the getting started example doesn't seem very complex, it does show a separation of view and view model. I'm very much looking forward to digging into the details of this very promising framework.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/ibebbs/BlogProjects/tree/master/WebRxWithAsp4"&gt;completed project&lt;/a&gt; for this post can be found in my &lt;a href="https://github.com/ibebbs/BlogProjects"&gt;BlogProjects repository&lt;/a&gt; on &lt;a href="https://github.com/ibebbs"&gt;Github&lt;/a&gt;&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;So, I have recently found myself with a need to dive into the depths of modern web-development and, as I am currently looking to write a highly interactive single-page web application, the first thing to decide on was a client side framework to use. You won't have to read too many of my blog posts to realise that I'm a big fan of &lt;a href="https://msdn.microsoft.com/en-us/data/gg577609.aspx?f=255&amp;amp;MSPPError=-2147217396"&gt;Rx&lt;/a&gt;. I am also keen on the MVVM approach to separating concerns when writing user interfaces. Therefore, during my research of modern web UI frameworks, I was extremely interested when I came across &lt;a href="http://webrxjs.org/"&gt;WebRx&lt;/a&gt; .&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/DockerAndKafka" />
		<id>http://ian.bebbs.co.uk/posts/DockerAndKafka</id>
		<title>Getting started with Docker and Apache Kafka</title>
		<updated>2017-01-04T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;For my first blog post of the new year (Happy New Year everyone!!!), I'd like to share some of my recent adventures with Docker on Windows, or, more specifically, Docker on Windows using Nanoserver as the container OS.&lt;/p&gt;
&lt;p&gt;I've been meaning to get up to speed with Docker for a while and, having &lt;a href="http://ian.bebbs.co.uk/posts/ARipStoringTime"&gt;recently acquired a decent new server for the purpose&lt;/a&gt;, decided that a festive period break from some of my &lt;a href="http://ian.bebbs.co.uk/posts/CqrsEsMvvmRxEfSqlUwpPcl"&gt;longer term projects&lt;/a&gt;, would be an ideal time to finally dive in. In typical Bebbs style, "diving in" invariably involves the "deep end" and, as such, it seemed that a great initiation into the containerization waters would be to take &lt;a href="https://kafka.apache.org/"&gt;Apache Kafka&lt;/a&gt; - a service typically run on Linux - and deploy it within a Windows &lt;a href="https://blogs.technet.microsoft.com/windowsserver/2015/04/08/microsoft-announces-nano-server-for-modern-apps-and-cloud/"&gt;Nanoserver&lt;/a&gt; container - a recent release from Microsoft and still a very-much bleeding-edge OS.&lt;/p&gt;
&lt;p&gt;I've been interested in Apache Kafka for quite a while. Described as a "distributed streaming platform" it very much resonates with my "everything is a stream" philosophy. Furthermore, some of &lt;a href="https://www.confluent.io/product/connectors/"&gt;it's connectors&lt;/a&gt; to various traditional RDBMS's offer an intriguing means of moving between 'state store' and 'event store' methodologies.&lt;/p&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;For the host system, I started with a fresh install of Windows Server 2016 (Desktop Experience for convenience) on a &lt;a href="http://www.dell.com/uk/business/p/poweredge-t20/pd"&gt;Dell T20 Xeon&lt;/a&gt;. Following &lt;a href="https://msdn.microsoft.com/en-gb/virtualization/windowscontainers/quick_start/quick_start_windows_server"&gt;this quick start guide&lt;/a&gt; quickly led to an issue whereby the Docker package couldn't be verified by it's SHA256 hash and therefore refused to install. Fortunately I found a report of the issue and a work around &lt;a href="https://github.com/OneGet/MicrosoftDockerProvider/issues/15"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have since reinstalled docker on Windows Server 2016 and did not experience the issue again so it must have been resolved.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With Docker installed and the &lt;a href="https://hub.docker.com/r/microsoft/dotnet-samples/"&gt;dotnet-samples&lt;/a&gt; example container running, my attention turned to Nanoserver.&lt;/p&gt;
&lt;p&gt;A quick pull and run of the &lt;a href="https://hub.docker.com/r/microsoft/nanoserver/"&gt;Nanoserver image&lt;/a&gt; and I found myself at an interactive command prompt of a deployed container running Nanoserver. This can be done as follows:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;docker pull microsoft/nanoserver:latest
docker run -it --rm microsoft/nanoserver:latest cmd
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Kafka &amp;amp; Zookeeper&lt;/h2&gt;
&lt;p&gt;While looking for a pre-built image of Kafka running on Nanoserver, it quickly became apparent that in order to get an instance of &lt;a href="https://kafka.apache.org/"&gt;Apache Kafka&lt;/a&gt; running, you first need a running instance of &lt;a href="https://zookeeper.apache.org/"&gt;Apache Zookeeper&lt;/a&gt;. While you could technically run both services from within a single container (indeed, Kafka is pre-configured to look for a Zookeeper instance on localhost) I wanted to utilize the core value propositions of containers vs VM instances; namely minimal overhead and composability.&lt;/p&gt;
&lt;p&gt;This meant that I would therefore be building two container images, one for Zookeeper and one for Kafka, both of which would be running on Nanoserver.&lt;/p&gt;
&lt;h2&gt;Building the Zookeeper image&lt;/h2&gt;
&lt;h3&gt;Take 1&lt;/h3&gt;
&lt;img src="https://mbt4mw-dm2306.files.1drv.com/y3m4bDPZgQ871xh0PU_QAcxaL1v9QKVFYFi8Q2uAb82woT97il9OZ_njULBYVK8aNohSJIgAAawJaj-tNunCWe4oXs5LpggjuVv41JGAQ2TFPco7IB1Xx57j6y2X0TUAtNfOQvoJWLxFFHjL5eSgzVeooe_OjURV4VJ8q_QDhN7coA?width=660&amp;amp;height=363&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="I built this container up from nothing. When I started here, all there was was nanoserver. Other developers said it was daft to build Zookeeper on nanoserver, but I did it all the same. Just to show'em."&gt;
&lt;blockquote&gt;
&lt;p&gt;I built this [container] up from nothing. When I started here, all there was was [nanoserver]. Other [developers] said it was daft to build [Zookeeper] on [nanoserver], but I did it all the same. Just to show'em.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, from most of everything I have read about building docker images, it seemed the thing to do was use a &lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;Dockerfile&lt;/a&gt; to start an intermediate container based on the source image (Microsoft/Nanoserver in this instance) then run a script within the intermediate container (as part of the dockerfile) to download, install and configure all the required components. The output of this docker build process would be a new image with the appropriate services running on startup.&lt;/p&gt;
&lt;p&gt;I therefore started by preparing a powershell script that would do just that. Following &lt;a href="http://stackoverflow.com/a/38895811"&gt;this post on StackOverflow&lt;/a&gt; I developed and tested a script on a Windows Server 2016 (Desktop Experience) Virtual Machine. This was done so that I could use &lt;a href="https://technet.microsoft.com/en-us/library/dn818483(v=ws.11).aspx"&gt;snapshotting&lt;/a&gt; in order to roll-back to a clean image anytime a issue with the script was encountered.&lt;/p&gt;
&lt;p&gt;Unfortunately, when it came time to try running Zookeeper I hit the following error at start-up:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;log4j:WARN No appenders could be found for logger (org.apache.zookeeper.server.quorum.QuorumPeerConfig).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
Invalid config, exiting abnormally
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some quick googling turned up &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1181487#c5"&gt;this issue&lt;/a&gt; but every subsequent comment seemed to suggest that the issue had been resolved. I tried a &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1181487#c8"&gt;frustrating&lt;/a&gt; &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1181487#c9"&gt;number&lt;/a&gt; of &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1181487#c4"&gt;unsuccessful&lt;/a&gt; &lt;a href="http://tech.donghao.org/tag/zookeeper/"&gt;workarounds&lt;/a&gt; until I realized that it was a &lt;a href="https://en.wiktionary.org/wiki/PICNIC"&gt;PICNIC error&lt;/a&gt;. Specifically, while following the StackOverflow post above, I had failed to realize that the version of Zookeeper they specified wasn't actually the latest version and that the issue really had been resolved in a later version. This took a frustratingly and embarrassingly long time but hey, &lt;a href="http://www.goodreads.com/quotes/7678-when-people-say-it-s-always-the-last-place-you-look"&gt;it's always the last place you look&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, a morning of trial and error resulted in a thing of beauty; a script that would - completely automatically - download, extract, configure, install (as a service!) and run a Zookeeper instance. This is shown below:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;## Download sources
$zipUri = "http://homeserver/download/7z1604-x64.exe" # http://www.7-zip.org/a/7z1604-x64.exe";
$nssmUri = "http://homeserver/download/nssm-2.24.zip" # "https://nssm.cc/release/nssm-2.24.zip"
$javaUri = "http://homeserver/download/jre-8u111-windows-x64.exe" # "http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jre-8u111-windows-x64.exe"
$zookeeperUri = "http://homeserver/download/zookeeper-3.4.9.tar.gz" # "http://apache.mirrors.nublue.co.uk/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz"
$kafkaUri = "http://homeserver/download/kafka_2.11-0.10.1.0.tgz" # "http://apache.mirror.anlx.net/kafka/0.10.1.0/kafka_2.11-0.10.1.0.tgz"

## Application locations
$appDir = "c:\Apps"
$zipDir = $appDir + "\7zip"
$nssmDir = $appDir + "\nssm"
$zookeeperDir = $appDir + "\Zookeeper"

## Data locations
$zookeeperDataDir = $zookeeperDir + "\Data"

## Application executables
$zip = $zipDir + "\7z.exe"
$nssm = $nssmDir + "\nssm.exe"
$zookeeper = $zookeeperDir + "\bin\zkServer.cmd"

function New-TempPath()
{
    if (!(Test-Path -Path C:\Temp))
    {
        New-Item c:\Temp -ItemType Directory
    }
}

function Expand-File($zipFile, $targetPath)
{
    $args = @("e", $zipFile, "-o$targetPath", '-y')
    &amp;amp;$zip $args
}

function Expand-Directory($zipFile, $targetPath)
{
    $args = @("x", $zipFile, "-o$targetPath", '-aoa')
    &amp;amp;$zip $args
}

function Install-7zip()
{
    New-Item "c:\Temp\7zip" -ItemType Directory -Force
    Invoke-WebRequest -Uri $zipUri -OutFile c:\Temp\7zip\7zip.exe
    &amp;amp;"C:\Temp\7zip\7zip.exe" /S /D=$zipDir | Out-Null
    Remove-Item -Path "c:\Temp\7zip\7zip.exe"
}

function Install-NSSM()
{
    New-Item "c:\Temp\NSSM" -ItemType Directory -Force
    Invoke-WebRequest -Uri $nssmUri -OutFile c:\Temp\NSSM\NSSM.zip

    Expand-Directory c:\Temp\NSSM\NSSM.zip c:\Temp\NSSM

    ## Above will expand to a directory containing version name which we want to remove
    ## so we'll move everything up a directory
    $folder = Get-ChildItem -Path c:\Temp\NSSM -Filter "nssm-*"
    Get-ChildItem -Path $folder.FullName -Recurse | Move-Item -destination c:\Temp\NSSM -Force

    New-Item $nssmDir -ItemType Directory -Force
    Copy-Item -Path "c:\Temp\NSSM\win64\nssm.exe" $nssm -Force
}

function Install-Java()
{
    New-Item c:\Temp\Java -ItemType Directory -Force
    Invoke-WebRequest -Uri $javaUri -OutFile c:\temp\Java\Java.exe

    Start-Process "C:\Temp\Java\Java.exe" -ArgumentList "INSTALL_SILENT=Enable INSTALLDIR=C:\Java\Jre AUTO_UPDATE=Disable WEB_JAVA=Disable WEB_ANALYTICS=Disable EULA=Disable REBOOT=Disable NOSTARTMENU=Enable SPONSORS=Disable REMOVEOUTOFDATEJRES=0" -NoNewWindow -Wait

    [Environment]::SetEnvironmentVariable("JAVA_HOME", "C:\Java\Jre", "Machine")

    Remove-Item -Path "C:\Temp\Java\Java.exe"
}

function Get-Zookeeper()
{
    New-Item c:\Temp\Zookeeper -ItemType Directory -Force
    Invoke-WebRequest -Uri $zookeeperUri -OutFile c:\temp\Zookeeper\Zookeeper.tar.gz
    Expand-File c:\temp\Zookeeper\Zookeeper.tar.gz c:\temp\Zookeeper
    Expand-Directory c:\temp\Zookeeper\Zookeeper.tar $zookeeperDir

    ## Above will expand to a directory containing version name which we want to remove
    ## so we'll move everything up a directory
    $folder = Get-ChildItem -Path $zookeeperDir -Filter "zookeeper-*"
    Get-ChildItem -Path $folder.FullName -Recurse | Move-Item -destination $zookeeperDir -Force

    Remove-Item -Path $folder.FullName
    Remove-Item -Path "c:\temp\Zookeeper" -Recurse
}

function Initialize-Zookeeper()
{
    New-Item -Path $zookeeperDataDir -ItemType Directory -Force
    $zookeeperDataLinuxDir = $zookeeperDataDir.Replace('\', '/')

    Copy-Item -Path ($zookeeperDir + '\conf\zoo_sample.cfg') -Destination ($zookeeperDir + '\conf\zoo.cfg') -Force

    $configFile = $zookeeperDir + '\conf\zoo.cfg'
    $logFile = $zookeeperDir + '\conf\log4j.properties'

    $config = [IO.File]::ReadAllText($configFile) -replace "dataDir=[\/\w]*", ("dataDir=" + $zookeeperDataLinuxDir)
    [IO.File]::WriteAllText($configFile, $config)

    $logProperties = [IO.File]::ReadAllText($logFile) -replace "#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE", "log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE"
    [IO.File]::WriteAllText($logFile, $logProperties)
}

function Install-Zookeeper()
{
    &amp;amp;$nssm install Zookeeper $zookeeper | Out-Null
    &amp;amp;$nssm set Zookeeper AppDirectory $zookeeperDir | Out-Null

    &amp;amp;$nssm set Zookeeper DisplayName "Zookeeper" | Out-Null
    &amp;amp;$nssm set Zookeeper Description "Apache Zookeeper. Running from $zookeeperDir" | Out-Null
    &amp;amp;$nssm set Zookeeper Start SERVICE_AUTO_START | Out-Null
    &amp;amp;$nssm set Zookeeper ObjectName LocalSystem | Out-Null
    &amp;amp;$nssm set Zookeeper Type SERVICE_WIN32_OWN_PROCESS | Out-Null
}

function Start-Zookeeper()
{
    &amp;amp;$nssm start Zookeeper | Out-Null
}

function Stop-Zookeeper()
{
    &amp;amp;$nssm stop Zookeeper | Out-Null
}

New-TempPath

Install-7zip
Install-NSSM
Install-Java

Get-Zookeeper
Initialize-Zookeeper
Install-Zookeeper
Start-Zookeeper
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this mighty script in hand I prepared the following dockerfile:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;FROM microsoft/nanoserver
MAINTAINER Ian Bebbington &amp;lt;docker@bebbs.co.uk&amp;gt;
LABEL Description="Zookeeper running on Microsoft Nanoserver" Version="0.1"
ADD Install-Zookeeper.ps1 /
RUN [ "powershell.exe", "C:/Install-Zookeeper.ps1" ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And watched in dismay as it completely failed to build a container.&lt;/p&gt;
&lt;p&gt;You see, while the script ran perfectly on Windows Server 2016, Nanoserver is a far more constrained environment. It has neither support for 32-bit assemblies nor any graphic stack to speak of so, in short-order, the 7zip utility, Java installer and &lt;a href="https://nssm.cc/"&gt;Non-Sucking Service Manager&lt;/a&gt; executables all failed.&lt;/p&gt;
&lt;p&gt;Well, crap.&lt;/p&gt;
&lt;h3&gt;Take 2&lt;/h3&gt;
&lt;img src="https://mbt5mw-dm2306.files.1drv.com/y3mDYUaDMt02GzcHWl0DE1ASfBA6QbYzEwY-koD_MSkQGr3oRavQLf5jyRBH5TVFEBASZyRxAL00cuoRKuNNJ6lvSfEJD42p0QkZNzUQAFV-TKzdglya78e_ON8lHg7vQBS96aSQL-Hz0AobNgzQ83uHZN1T3nyDQKlumWgM50OZBc?width=660&amp;amp;height=440&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="So! I built a second one!"&gt;
&lt;blockquote&gt;
&lt;p&gt;So! I built a second one!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My next thought was to try salvaging as much of the script as possible by using &lt;a href="https://technet.microsoft.com/en-us/library/ff700227.aspx"&gt;Powershell Remoting&lt;/a&gt; to interactively install the required components and then &lt;a href="https://docs.docker.com/engine/reference/commandline/commit/"&gt;committing&lt;/a&gt; the changes to a new image.&lt;/p&gt;
&lt;p&gt;While, in retrospect, this was undoubtedly the wrong way forward, I was simultaneously fortunate and frustrated by the fact that it simply doesn't seem possible to use powershell remoting with Nanoserver when running within a container. Indeed, after learning more about &lt;a href="https://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx"&gt;WinRM&lt;/a&gt; than I thought possible, posting on &lt;a href="https://social.msdn.microsoft.com/Forums/en-US/e0652324-30e4-4ebb-8689-55205e6d8bc9/enterpssession-to-nanoserver-container-in-docker-access-is-denied?forum=windowscontainers"&gt;Microsoft's Windows Container forums&lt;/a&gt; and even offering my &lt;a href="http://stackoverflow.com/questions/39195068/powershell-remote-access-to-nanoserver-on-docker"&gt;first bounty on StackOverflow&lt;/a&gt; I simply could not find an answer to why it wasn't possible to establish a remote session.&lt;/p&gt;
&lt;p&gt;In the mean time...&lt;/p&gt;
&lt;h3&gt;Take 3&lt;/h3&gt;
&lt;img src="https://mbt3mw-dm2306.files.1drv.com/y3m5x6G99So08jPRwR0n1Msb-8SrSKNaOsB6aLd-CYAk8kSo9xRsa6i9Kd44QzRHin_EKMOpsNMZpacjCkoeGaMsODu6S7zI3NavsVz89vKF4Ot3b9pLEwaHxmg2mxXzvG8rQqCyf7C769ScaTkbPQ5WG2RwwcTHOyRqm0A-4RDNuQ?width=660&amp;amp;height=441&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="So, I built a third one..."&gt;
&lt;blockquote&gt;
&lt;p&gt;I built a third one...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Powershell remoting works beautifully with Nanoserver when running in a Hyper-V virtual machine but Hyper-V networking and Docker networking configurations don't seem to play well together. Indeed, after creating a new virtual-router so that I could access the Nanoserver virtual machine from the host PC, the Docker NAT network became inaccessible. Now, I'm sure it would be possible to dig into the virtual networking configuration and find a way to resolve this but, having spent an incredibly frustrating few hours reconfiguring WinRM, I decided it would be quicker to simply re-install the host OS and start from scratch.&lt;/p&gt;
&lt;h3&gt;Take 4&lt;/h3&gt;
&lt;img src="https://oltxmw-dm2306.files.1drv.com/y3mGaNRc9vDgPZnXfcJZfjYwIEFL32s3nCdk_kA84gB5NGOAoC3SLqP5D7ZffgKPO1VHXQEaRXvVuGCwFjoLKyo7o-gaUXFvGRcZPRPQrifhGNlBmU8RfqR5ZTgKIhxRvzJIMPoXydQ_N5UROZmaUXtKHH3jKtxIobDubPEdWsp-GM?width=660&amp;amp;height=495&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="But the fourth one stayed up!"&gt;
&lt;blockquote&gt;
&lt;p&gt;But the fourth one stayed up!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To accompany the fresh host environment, I decided to employ a fresh approach to building the container image. Namely, use a script to build the container's file system structure on the host PC and then simply copy it wholesale to the container from within the dockerfile. This meant deploying the Java Runtime Environment from a compressed archive rather than silent executable and using the &lt;a href="https://docs.docker.com/engine/reference/builder/#/entrypoint"&gt;dockerfile entrypoint&lt;/a&gt; instruction to run Zookeeper rather than installing it as a service.&lt;/p&gt;
&lt;p&gt;After all the faff and frustration of the previous two attempts (not to mention reinstallation of OS on host PC), this approach was remarkably smooth. Again, in retrospect this was undoubtedly the correct approach but this approach almost certainly benefited from all the knowledge I had accrued from the previous failed attempts. As always, &lt;a href="http://www.goodreads.com/quotes/390439-we-learn-wisdom-from-failure-much-more-than-from-success"&gt;you can learn more from failure than success&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, in relatively short order, I had a script that prepared and configured the container's file system structure on the host PC and a dockerfile that copied this structure to a new image and set the Zookeeper service as the entrypoint for the image. These are shown below:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;## Download sources
$zipUri = "http://homeserver/download/7z1604-x64.exe" # http://www.7-zip.org/a/7z1604-x64.exe";
$javaUri = "http://homeserver/download/jre-8u111-windows-x64.tar.gz" # "http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jre-8u111-windows-x64.tar.gz"
$zookeeperUri = "http://homeserver/download/zookeeper-3.4.9.tar.gz" # "http://apache.mirrors.nublue.co.uk/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz"
$dockerModuleUri = "http://homeserver/download/Docker.0.1.0.zip" # "https://github.com/Microsoft/Docker-PowerShell/releases/download/v0.1.0/Docker.0.1.0.zip"

## Build location
$buildDir = Get-Location
$tmpDir = $buildDir.Path + "\Temp"
$rootDir = $buildDir.Path + "\Root"
$biuldAppDir = $rootDir + "\Apps"
$buildDataDir = $rootDir + "\Data"
$buildDockerZip = $tmpDir + "\Docker.zip"
$buildDockerModule = $tmpDir + "\Docker"
$buildZipDir = $tmpDir + "\7zip"
$buildJreDir = $biuldAppDir + "\Jre"
$buildZookeeperDir = $biuldAppDir + "\Zookeeper"
$buildZookeeperDataDir = $buildDataDir + "\Zookeeper"

## Temp files
$zipInstaller = $tmpDir + "\7zInstaller.exe"
$jreGzip = $tmpDir + "\Jre.tar.gz"
$jreTar = $tmpDir + "\Jre.tar"
$zooKeeperGzip = $tmpDir + "\Zookeeper.tar.gz"
$zooKeeperTar = $tmpDir + "\Zookeeper.tar"

## Target locations
$targetDir = "C:\"
$appDir = $targetDir + "\Apps"
$dataDir = $targetDir + "\Data"
$jreDir = $appDir + "\Jre"
$zookeeperDir = $appDir + "\Zookeeper"
$zookeeperDataDir = $dataDir + "\Zookeeper"

## Executables
$zip = $buildZipDir + "\7z.exe"
$zookeeper = $zookeeperDir + "\bin\zkServer.cmd"
$docker = "docker"

function New-TempPath()
{
    if (!(Test-Path -Path $tmpDir))
    {
        New-Item $tmpDir -ItemType Directory
    }
}

function Remove-TempPath()
{
    Remove-Item $tmpDir -Recurse -Force
}

function New-RootPath()
{
    Remove-Item $rootDir -Recurse -Force
    New-Item $rootDir -ItemType Directory
}

function Remove-RootPath()
{
    Remove-Item $rootDir -Recurse -Force
}

function Expand-File($zipFile, $targetPath)
{
    $args = @("e", $zipFile, "-o$targetPath", '-y')
    &amp;amp;$zip $args | Out-Host
}

function Expand-Directory($zipFile, $targetPath)
{
    $args = @("x", $zipFile, "-o$targetPath", '-aoa')
    &amp;amp;$zip $args | Out-Host
}

function Install-DockerModule()
{
    Invoke-WebRequest -Uri $dockerModuleUri -OutFile $buildDockerZip
    Expand-Archive -Path $buildDockerZip -DestinationPath $buildDockerModule -Force

    Import-Module $buildDockerModule
}

function Remove-DockerModule()
{
    Remove-Module $buildDockerModule
}

function Install-7zip()
{
    $folder = New-Item $buildZipDir -ItemType Directory -Force
    Invoke-WebRequest -Uri $zipUri -OutFile $zipInstaller
    &amp;amp;$zipInstaller /S /D=$folder | Out-Null
    Remove-Item -Path $zipInstaller
}

function Remove-7zip()
{
    Remove-Item $buildZipDir -Recurse -Force
}

function Get-Java()
{
    Invoke-WebRequest -Uri $javaUri -OutFile $jreGzip
    Expand-File $jreGzip $tmpDir
    Expand-Directory $jreTar $buildJreDir

    ## Above will expand to a directory containing version name which we want to remove
    ## so we'll move everything up a directory
    $folder = Get-ChildItem -Path $buildJreDir -Filter "jre*"
    Get-ChildItem -Path $folder.FullName -Recurse | Move-Item -destination $buildJreDir -Force

    Remove-Item -Path $folder.FullName -Force
    Remove-Item -Path $jreGzip -Force
    Remove-Item -Path $jreTar -Force
}

function Get-Zookeeper()
{
    Invoke-WebRequest -Uri $zookeeperUri -OutFile $zooKeeperGzip
    Expand-File $zooKeeperGzip $tmpDir
    Expand-Directory $zooKeeperTar $buildZookeeperDir

    ## Above will expand to a directory containing version name which we want to remove
    ## so we'll move everything up a directory
    $folder = Get-ChildItem -Path $buildZookeeperDir -Filter "zookeeper-*"
    Get-ChildItem -Path $folder.FullName -Recurse | Move-Item -destination $buildZookeeperDir -Force

    Remove-Item -Path $folder.FullName -Force
    Remove-Item -Path $zooKeeperTar -Force
    Remove-Item -Path $zooKeeperGzip -Force
}

function Initialize-Zookeeper()
{
    New-Item -Path $buildDataDir -ItemType Directory -Force
    New-Item -Path $buildZookeeperDataDir -ItemType Directory -Force

    $zookeeperDataLinuxDir = $zookeeperDataDir.Replace('\', '/')

    Copy-Item -Path ($buildZookeeperDir + '\conf\zoo_sample.cfg') -Destination ($buildZookeeperDir + '\conf\zoo.cfg') -Force

    $configFile = $buildZookeeperDir + '\conf\zoo.cfg'
    $logFile = $buildZookeeperDir + '\conf\log4j.properties'

    $config = [IO.File]::ReadAllText($configFile) -replace "dataDir=[\/\w]*", ("dataDir=" + $zookeeperDataLinuxDir)
    [IO.File]::WriteAllText($configFile, $config)

    $logProperties = [IO.File]::ReadAllText($logFile) -replace "#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE", "log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE"
    [IO.File]::WriteAllText($logFile, $logProperties)
}

function New-DockerImage()
{
    Build-ContainerImage -Path $buildDir -Repository "ibebbs/nanozoo:latest"
}


# Setup directory structure
New-TempPath
New-RootPath

# Install required tools
Install-DockerModule
Install-7zip

# Get components
Get-Java
Get-Zookeeper
Initialize-Zookeeper

# Build docker image
New-DockerImage

# Cleanup
Remove-DockerModule
Remove-7zip
Remove-TempPath
Remove-RootPath
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;FROM microsoft/nanoserver
MAINTAINER Ian Bebbington &amp;lt;docker@bebbs.co.uk&amp;gt;
LABEL Description="Zookeeper running on Microsoft Nanoserver" Version="0.1"
ADD Root /
ADD Start-Zookeeper.ps1 /
RUN setx /M JAVA_HOME C:\Apps\Jre
EXPOSE 2181
ENTRYPOINT [ "powershell.exe", "C:/Start-Zookeeper.ps1" ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this one worked. This one started. This one stayed up!&lt;/p&gt;
&lt;h2&gt;Building the Kafka image&lt;/h2&gt;
&lt;p&gt;With the Zookeeper scripts as a pattern, it was ludicrously easy to script up another image for Kafka. Just a few changes to file names and configuration parameters and Kafka started almost first time.&lt;/p&gt;
&lt;p&gt;I won't copy the script or dockerfile here as they're extremely similar to the Zookeeper versions. Instead, all scripts and files used above can be found in my &lt;a href="https://github.com/ibebbs/Docker"&gt;Docker repository on Github&lt;/a&gt; and the resultant images can be found on &lt;a href="https://hub.docker.com/r/ibebbs/"&gt;Docker hub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Moving forward&lt;/h2&gt;
&lt;img src="https://oltymw-dm2306.files.1drv.com/y3mIddKC619ngQYu9mwpyXXi9YgUp-MVwZ9_lR8JRla2AKvMm91LwnW2p0G3GkOZj5X_TXQUap_XULDAaiCWMC5Hx0ZvjKdAjeW7YWqacnwEAgCSZgmgBF1DCH83Zcywki6qKmOXbKkZO_SWmvQHpajyOQRHO1pJNB3ak2YpT6DmX8?width=660&amp;amp;height=371&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="But I don't want any of that!"&gt;
&lt;blockquote&gt;
&lt;p&gt;But I don't want any of that!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Moving forward, I need to address a couple of short-comings in the Kafka script (specifically the hard-coded IP address for the Zookeeper container) and then look to use Docker Compose to automatically bring up Zookeeper and Kafka on demand.&lt;/p&gt;
&lt;p&gt;It's been an interesting journey so far and I've not even begun to actually use the deployed services yet! Still, it is truly magical to run a docker container and see it boot an entire Windows server and service in just 10-20 seconds and a few hundred Mb.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;For my first blog post of the new year (Happy New Year everyone!!!), I'd like to share some of my recent adventures with Docker on Windows, or, more specifically, Docker on Windows using Nanoserver as the container OS.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartI" />
		<id>http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartI</id>
		<title>Home Network Monitoring - Part I</title>
		<updated>2016-04-08T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;Home networks are becoming increasingly complex. It is no longer just geeks and techies who have pervasive WiFi through-out their home to which a myriad of devices connect and communicate. When things go wrong or, worse still, the network is compromised by rouge hardware or software it's extremely difficult to work out what has happened and where to start troubleshooting the issue.&lt;/p&gt;
&lt;p&gt;In the next few posts, I'm going to be showing how I used free and open-source software to build a home network monitoring solution that allows me to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Monitor the devices on my networks&lt;/li&gt;
&lt;li&gt;Monitor my network connectivity and utilisation&lt;/li&gt;
&lt;li&gt;Monitor which devices are connecting to which remote sites.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These posts will use the following components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An internet router capable of sending Syslog messages&lt;/li&gt;
&lt;li&gt;A mid-spec (i.e. dual-core 2Ghz) server with plenty of storage&lt;/li&gt;
&lt;li&gt;Java Runime Environment installed on the server&lt;/li&gt;
&lt;li&gt;The ElasticSearch stack consisting of:
&lt;ul&gt;
&lt;li&gt;Logstash (I will be using v2.4.1)&lt;/li&gt;
&lt;li&gt;ElasticSearch (I will be using v2.4.1)&lt;/li&gt;
&lt;li&gt;Kibana (I will be using v4.5.0)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;the router&lt;/h1&gt;
&lt;p&gt;At the core of my solution is a router that supports writing &lt;a href="https://en.wikipedia.org/wiki/Syslog"&gt;Syslog&lt;/a&gt; messages to a Syslog server. While once a rarity, this functionality is becoming increasingly prevalent in home / SOHO routers. Personally I use a &lt;a href="http://www.draytek.co.uk/products/business/vigor-2830"&gt;DrayTek Vigor 2830&lt;/a&gt;, a versatile and - most importantly - extremely reliable router that can be purchased for just over £100 in the UK.&lt;/p&gt;
&lt;p&gt;From the router administration web interface, you can set the router to write a variety of Syslog messages to a Syslog server by specifying the servers IP address. This can be seen below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/DrayTek-Syslog.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="DrayTek Vigor Syslog Settings"&gt;
&lt;p&gt;I simply tick all the boxes and add the IP address of the PC hosting the Syslog server.&lt;/p&gt;
&lt;h1&gt;the syslog server&lt;/h1&gt;
&lt;p&gt;Now we have a router that is sending connectivity information via Syslog, we need a service running on a server that is capable of receiving these messages. For this I am using Elastic's &lt;a href="https://www.elastic.co/products/logstash"&gt;Logstash&lt;/a&gt; to receive the syslog messages and enrich them before forwarding them to an indexed store.&lt;/p&gt;
&lt;p&gt;Logstash is an extremely versatile tool capable of consuming data from a variety of sources. A configuration file is used to set up a pipeline of inputs, operations (known as filters) and outputs which can do some truly fantastic things. If you're new to Logstash it might be worthwhile giving the ("Getting Started")[https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html] guide a quick read.&lt;/p&gt;
&lt;p&gt;To start with, we'll get Logstash to simply accept Syslog input from a given port and write it to the console. To do this, simply &lt;a href="https://www.elastic.co/downloads/logstash"&gt;download Logstash&lt;/a&gt; and extract it to a directory on the PC. Next, open notepad and copy paste the following:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;input {
  tcp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
  udp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
}

filter {
}

output {
  stdout {
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save this file named 'Syslog.config' and, from a command prompt, start Logstash with the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[LogStashDirectory]\bin\logstash.bat agent -f [ConfigFilePath]\Syslog.config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If all goes well, you should see Logstash start receiving Syslog messages from the router which should appear something like the following:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;io/console not supported; tty will not be manipulated
Settings: Default pipeline workers: 2
Pipeline main started
2016-04-08T13:52:21.903Z 192.168.1.1 &amp;lt;150&amp;gt;Apr  8 14:51:59 Vigor: Local User (MAC=ZZ-ZZ-ZZ-ZZ-ZZ-ZZ): 192.168.1.62 DNS -&amp;gt; 192.168.1.1 inquire a.root-servers.net
2016-04-08T13:52:22.528Z 192.168.1.1 &amp;lt;150&amp;gt;Apr  8 14:51:59 Vigor: Local User (MAC=ZZ-ZZ-ZZ-ZZ-ZZ-ZZ): 192.168.1.51 DNS -&amp;gt; 192.168.1.1 inquire api-global.netflix.com
2016-04-08T13:52:22.528Z 192.168.1.1 &amp;lt;150&amp;gt;Apr  8 14:51:59 Vigor: Local User (MAC=ZZ-ZZ-ZZ-ZZ-ZZ-ZZ): 192.168.1.51 DNS -&amp;gt; 213.120.234.54 inquire api-global.netflix.com
2016-04-08T13:52:22.903Z 192.168.1.1 &amp;lt;150&amp;gt;Apr  8 14:52:00 Vigor: Local User (MAC=ZZ-ZZ-ZZ-ZZ-ZZ-ZZ): 192.168.1.62 DNS -&amp;gt; 192.168.1.1 inquire a.root-servers.net
2016-04-08T13:52:24.356Z 192.168.1.1 &amp;lt;150&amp;gt;Apr  8 14:52:01 Vigor: Local User (MAC=ZZ-ZZ-ZZ-ZZ-ZZ-ZZ): 192.168.1.100 DNS -&amp;gt; 192.168.1.1 inquire sls.update.microsoft.com
2016-04-08T13:52:24.356Z 192.168.1.1 &amp;lt;150&amp;gt;Apr  8 14:52:01 Vigor: Local User (MAC=ZZ-ZZ-ZZ-ZZ-ZZ-ZZ): 192.168.1.100 DNS -&amp;gt; 213.120.234.54 inquire sls.update.microsoft.com
2016-04-08T13:52:24.356Z 192.168.1.1 &amp;lt;158&amp;gt;Apr  8 14:52:01 Vigor: Load_balance 192.168.1.100 --(DNS)--&amp;gt; 213.120.234.54 go WAN1
2016-04-08T13:52:24.731Z 192.168.1.1 &amp;lt;150&amp;gt;Apr  8 14:52:01 Vigor: Local User (MAC=ZZ-ZZ-ZZ-ZZ-ZZ-ZZ): 192.168.1.100:53432 -&amp;gt; 157.56.77.138:443 (TCP)
2016-04-08T13:52:24.731Z 192.168.1.1 &amp;lt;158&amp;gt;Apr  8 14:52:01 Vigor: Load_balance 192.168.1.100 --(BAL)--&amp;gt; 157.56.77.138 go WAN1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you're not receiving Syslog messages try the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ensure to check the firewall settings on the server you're using. You need to allow incomming TCP and UDP connections on port 5000.&lt;/li&gt;
&lt;li&gt;Attempt to telnet to port 5000 on the Syslog server. If Logstash is running correctly, you should be able to connect and see anything you sent from Telnet mirrored in the Logstash console window.&lt;/li&gt;
&lt;li&gt;If you're still unable to see any output, try using a network analysis too like &lt;a href="https://www.wireshark.org/"&gt;Wireshark&lt;/a&gt; to see if your router is actually sending any messages.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;the syslog store&lt;/h1&gt;
&lt;p&gt;Now we're able to receive Syslog messages, we need to store and index them. For this, we will use ElasticSearch. Simply &lt;a href="https://www.elastic.co/downloads/elasticsearch"&gt;download ElasticSearch&lt;/a&gt;, extract it to a directory and start it. If necessary you can change the directory used to store  ElasticSearch data or the interface/port on which ElasticSearch listens for incomming connections by modifying the &lt;code&gt;config\ElasticSearch.yml&lt;/code&gt; file. Modifying this file is pretty straight forward but for help the &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html"&gt;ElasticSearch documentation&lt;/a&gt; is available online and very thorough.&lt;/p&gt;
&lt;p&gt;Additionally, rather than having to manually start ElasticSearch everytime you want to use it, you can easily install it as a Windows service simply - as I have done - by issuing the following commands from a command prompt:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;[PathToElasticSearch]\bin\service.bat install
[PathToElasticSearch]\bin\service.bat start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ElasticSearch should no be running. You can check this calling REST methods on ElasticSearch's web interface; by default on port 9200. In a browser, simple enter &lt;code&gt;http://[server-ip]:9200&lt;/code&gt; and you should see something like the following:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;"name" : "Shellshock",
"cluster_name" : "cluster",
"version" : {
  "number" : "2.3.1",
  "build_hash" : "bd980929010aef404e7cb0843e61d0665269fc39",
  "build_timestamp" : "2016-04-04T12:25:05Z",
  "build_snapshot" : false,
  "lucene_version" : "5.5.0"
},
"tagline" : "You Know, for Search"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: You will be using the REST API extensively in future steps so I suggest finding a toolset that make querying and posting to REST endpoints easier. I use the excellent &lt;a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en"&gt;&lt;code&gt;Postman&lt;/code&gt;&lt;/a&gt; Chrome application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With ElasticSearch running, we now need to modify Logstash to forward Syslog messages to ElasticSearch for indexing. As both tools are part of the Elastic Stack, this is every bit as easy as you might expect it to be. Simply open the &lt;code&gt;syslog.config&lt;/code&gt; file we created earler and change it to the following:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;input {
  tcp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
  udp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
}

filter {
}

output {
  elasticsearch {
    hosts =&amp;gt; ["[ElasticSearchServer-NameOrIPAddress]:9200"]
    index =&amp;gt; "syslog-%{+YYYY.MM.dd}"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this in place, restart the Logstart service and, instead of writing received messages to the console, they will be stored in ElasticSearch.&lt;/p&gt;
&lt;h1&gt;the dashboard&lt;/h1&gt;
&lt;p&gt;Now we have syslog messages in a central store, we will look how to set up a simple (for now) dashboard that lets us see a minimally useful feature: the number of Syslog messages being received over time.&lt;/p&gt;
&lt;p&gt;In order to do this, we will be using ElasticSearch's Kibana tool to query messages from ElasticSearch and display a histogram of messages on a dashboard. To get started, simply download and extract Kibana to a directory on the server. Kibana comes with a default configuration that allows it to run correctly when co-located on the same server as ElasticSearch. If you are not running Kibana on the same server as ElasticSearch, you will need to modify the Kibana configuration file as described in the &lt;a href="https://www.elastic.co/guide/en/kibana/current/index.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To start Kibana, simply open a command prompt and execute the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[PathToKibana]\bin\Kibana.bat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You should see something like the following:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;log   [15:51:32.912] [info][status][plugin:kibana] Status changed from uniniti
alized to green - Ready
log   [15:51:32.975] [info][status][plugin:elasticsearch] Status changed from
uninitialized to yellow - Waiting for Elasticsearch
log   [15:51:33.006] [info][status][plugin:kbn_vislib_vis_types] Status change
d from uninitialized to green - Ready
log   [15:51:33.022] [info][status][plugin:markdown_vis] Status changed from u
ninitialized to green - Ready
log   [15:51:33.037] [info][status][plugin:metric_vis] Status changed from uni
nitialized to green - Ready
log   [15:51:33.053] [info][status][plugin:spyModes] Status changed from unini
tialized to green - Ready
log   [15:51:33.068] [info][status][plugin:statusPage] Status changed from uni
nitialized to green - Ready
log   [15:51:33.068] [info][status][plugin:table_vis] Status changed from unin
itialized to green - Ready
log   [15:51:33.100] [info][listening] Server running at http://0.0.0.0:5601
log   [15:51:38.131] [info][status][plugin:elasticsearch] Status changed from
yellow to yellow - No existing Kibana index found
log   [15:51:41.053] [info][status][plugin:elasticsearch] Status changed from
yellow to green - Kibana index ready
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With Kibana started, use a browser to navigate to the Kibana web interface, typically on port 5601.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: If you are connected to Kibana from another PC, you will need to open firewall port 5602 on the server to allow connections to Kibana.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After a short pause while Kibana is initialised, you should see the following screen:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-InitialIndex.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Initial Index Settings"&gt;
&lt;p&gt;This screen allows you to add an index to Kibana that it can query messages in order to discover, visualise and ultimately produce a dashboard from information stored in the index. It is currently set to examine an index called &lt;code&gt;logstash-*&lt;/code&gt; and shows a disable button at the bottom of the screen containing the text 'Unable to fetch mapping. Do you have indices matching the pattern' as we do not have a logstash index stored in ElasticSearch. We want Kibana to query our Syslog index so we change the 'Index name or pattern' to &lt;code&gt;Syslog-*&lt;/code&gt; and, shortly after changing this value, we should see the button at the bottom change to 'Create' as shown here:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-SyslogIndex.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Syslog Index Settings"&gt;
&lt;p&gt;As Kibana has defaulted to the correct timestamp field (more on this later) you can simply click the 'Create' button to add the index to Kibana.&lt;/p&gt;
&lt;p&gt;After creating the index, you are taken to a screen that allows you modify how Kibana displays the fields within the index as shown below:&lt;/p&gt;
 &lt;img src="/Content/HomeNetworkMonitoring/Kibana-SyslogIndexMapping.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Syslog Index Mapping"&gt;
&lt;p&gt;We do not need to change anything here so can immediately start 'discovering' information in our Syslog index by clicking the 'Discover' tab as shown below:&lt;/p&gt;
 &lt;img src="/Content/HomeNetworkMonitoring/Kibana-DiscoverSyslog.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Discover Syslog"&gt;
&lt;p&gt;Here we're able to see the detail of the Syslog messages stored within the Syslog index on ElasticSearch. However, for now the messages are just strings so there's not a great deal we can do with them other than count them to produce a histogram of messages over time. To do this, we
first want to add the fields of the index we're interested in (just timestamp, host, message and type for now) to the selected fields area as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-SelectSyslogFields.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Select Syslog Fields"&gt;
&lt;p&gt;Once we have the fields we're interested in selected, we save them as a new search by clicking the 'Save Search' button in the top right of the window as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-SaveSyslogSearch.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Save Syslog Search"&gt;
&lt;p&gt;Once the search is saved, we can proceed straight to the 'Visualise' tab to create the histogram as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-VisualiseSyslogAsVerticalBarChart.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Visualise Syslog As Vertical Bar Chart"&gt;
&lt;p&gt;To create a histogram, we use a "Vertical bar chart". Note it's description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The goto chart for oh-so-many needs. Great for time and non-time data. Stacked or grouped, exact numbers or percentages. If you are not sure which chart you need, you could do worse than to start here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So lets start here by clicking this option and selecting 'From a saved search' as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-VisualiseFromSavedSearch.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Visualise From Saved Search"&gt;
&lt;p&gt;Once you select the 'Syslog Messages' save search you will immediately be taken to the Visualization screen with a vertical bar chart showing a single bar with the total count of all messages. Here we want to customise the visualisation to display the count of messages over time so we first need to define the X-axis as a 'Date Histogram' as shown below.&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-VisualiseDateHistogram.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Visualise Date Histogram"&gt;
&lt;p&gt;With these settings in place, click the 'Apply Changes' button and you should immediately see a chart of the count of syslog messages over time. Note that Kibana has automatically selected an appropriate resolution of column grouping (messages 'per 30 seconds' in the example above) but that this can be changed later if required.&lt;/p&gt;
&lt;p&gt;For now, we want to add this chart to a new dashboard so we can have it available to us at a moments notice. To do this, we first save our visualization by clicking the 'Save Visuaization' button as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-VisualiseSaveSyslogMessagesOverTime.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Visualise Save Syslog Messages Over Time"&gt;
&lt;p&gt;Next we navigate to the 'Dashboard' tab and click the '+' button as prompted. Again, we selected the visualization we just saved as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardAddVisualization.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard Add Visualization"&gt;
&lt;p&gt;With the "Syslog Messages Over Time" visualization added, we make it a usable size by dragging the resize control (button right corner of the visualization) to extend the visualization across the width of the window as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardSizeVisualization.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard Size Visualization"&gt;
&lt;p&gt;Finally, to make it easier to see the messages the histogram refers to, we'll add a table of related Syslog messages onto our dashboard below the histogram. To do this, click the '+' button, selected 'Searches' and then our 'Syslog Messages' search. When the table is added to the dashboard, make it a similar size as the histogram as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithSearch.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Search"&gt;
&lt;p&gt;Once done, we need to save the dashboard so we can reload it any time we need it. Simply click the 'Save Dashboard' button as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardSaveSyslogMessages.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard Save Syslog Messages"&gt;
&lt;p&gt;Once saved you can bookmark the page and get back to your dashboard any time you like. Furthermore, once saved, you can monkey with the dashboard (explore the data by highlighting various areas of the chart, change time frames, set autorefresh etc) as much as you like knowing you can return to saved version any time.&lt;/p&gt;
&lt;h1&gt;summary&lt;/h1&gt;
&lt;p&gt;In this post, I have outlined how to use a Syslog capable router to send Syslog messages to Logstash and have Logstash store these messages in ElasticSearch for querying. Furthermore we then created a dashboard in which we can explore the number of Syslog messages we received over various timeframes.&lt;/p&gt;
&lt;p&gt;In the next post we'll increase the granularity of the messages we store so that we can start creating more interesting dashboard.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Home networks are becoming increasingly complex. It is no longer just geeks and techies who have pervasive WiFi through-out their home to which a myriad of devices connect and communicate. When things go wrong or, worse still, the network is compromised by rouge hardware or software it's extremely difficult to work out what has happened and where to start troubleshooting the issue.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/WotNoBlogPosts" />
		<link rel="enclosure" type="image" href="http://ian.bebbs.co.uk/y3mKlqOBjK9u-QOTjr8e6t2pOev7BN2vWZHyEDf2l27_HhaNgR_aVCXi2-GJh_KZMQV-naegShjBydS0blOk2kSndI2eTXnRhuqA5Ry0VYn8a0HdOEj_RvSUJ8uVdzsiDmcn4XRkyaAn7kScarmtvlf5nua4L9lkP_bWrKG5Ai7JdQ%253Fwidth=660&amp;height=371&amp;cropmode=none" />
		<id>http://ian.bebbs.co.uk/posts/WotNoBlogPosts</id>
		<title>Wot No Blog Posts?</title>
		<updated>2016-07-26T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;Yes, it's been over three months since my last blog post. "What have you been doing?" I hear you (the hypothetical reader) ask. Well... well I'll tell you.&lt;/p&gt;
&lt;p&gt;Having left my previous permanent position in January, I decided the time was right for a &lt;strong&gt;career break&lt;/strong&gt;. Having been &lt;a href="https://www.ted.com/talks/stefan_sagmeister_the_power_of_time_off?language=en"&gt;inspired to take a career break&lt;/a&gt; some six years ago, I knew how rejuvenating time off work can be and how reinvigorating it is when you finally have some time to pick and choose what it is you want to do and, more importantly, how. Indeed, last time I took a career break I ended up founding a company which - while not successful enough to prevent me having to return to employment - was massively educational, incredibly liberating and a whole lot of fun.&lt;/p&gt;
&lt;p&gt;However, my motivations for this career break are vastly different to those of six years ago. At that time I had just emerged from a somewhat turbulent relationship and was looking to - &lt;em&gt;sorry for the cliché&lt;/em&gt; - "re-find" myself; this time I am in a stable and happy relationship with my partner who last year gave birth to our little baby girl. And while, six years ago, I could - and was happy to - survive on very meagre savings, I am now lucky enough to be in a position where financial pressures are not an issue, at least in the short-term. Finally, while I had very little idea of what I was going to do during my last career break (which itself was extremely liberating in that you are suddenly open to being able to say "yes" to pretty much anything) this time I have a much more developed concept of how I want to use this opportunity.&lt;/p&gt;
&lt;p&gt;While my motivations and desires for the coming months will be the subject of future blog posts, I have started putting together a &lt;a href="https://trello.com/b/KoTWuFUi/public-board"&gt;public Trello board&lt;/a&gt; of ideas/projects I want to undertake. It's just a start and by no means comprehensive but I thought some transparency around my ideas and goals (not to mention progress!) would be good for me.&lt;/p&gt;
&lt;p&gt;For now though I want to share what I've been doing - and why there have been no blog posts - for the last three months. You see, a primary motivation for taking time out of my career now was to spend time with my young family and maximise the use of my partner's remaining maternity leave. To this end, shortly after leaving my previous job, my partner and I decided to &lt;strong&gt;take our baby on a road trip around Europe&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The timing really couldn't have been better; my partner still had a few months of maternity leave remaining, the baby was still happy to have long naps in the back of the car whenever we drove anywhere and I was still keen on buying a day-van (it's been a &lt;em&gt;thing&lt;/em&gt; with me for a while now). So in February we started planning and looking for a motor that could comfortably cart the three of us around Europe and by mid March we'd bought an imported Nissan Elgrand E51 Ryder Autech.&lt;/p&gt;
&lt;img src="https://zdfcta.dm2302.livefilestore.com/y3mRDVqstf6XsjN73biGoYnN5s-SzVcHx9pEdYl2S_wM803HpiosWK5Skxm-kskeHTMkahk_PIdejAp70x14KCaOwmZb6OvAvAig8uqI4bdBs2Pb_lAUsm-O_2lO8krW_18ReDVMLXqVkJWUGUSJ-d80bOIi8ciWIgyxDzL5fw4qF4?width=1796&amp;amp;height=1347&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="My other baby"&gt;
&lt;p&gt;Now the Elgrand is an MPV and not a campervan (a mostly pragmatic decision based on the fact we could use it on a daily basis after the trip and only a little bit due to "love at first drive") so there was a lot of work to do in order to prepare it for such a long journey. Therefore, between March and May, I researched, built and installed a bunch of modifications for the Elgrand to support us on our adventure. This included a custom built leisure battery / charging system enclosure, custom built frame to mount the electrical systems and luggage, routing of cabling around the Elgrand and several internal modifications for enhancing the navigation / ICE systems.&lt;/p&gt;
&lt;p&gt;I documented these modifications on the &lt;a href="http://elgrandoc.uk/"&gt;Elgrand Owners Club website&lt;/a&gt;. This site proved invaluable in terms of information about working on the Elgrand and I wanted to give something back to the active and very helpful community there. Due to limitations in the website's forum, the details had to be split across five posts which - if you're interested - can be found here: &lt;a href="http://elgrandoc.uk/forum/index.php?threads/touring-europe-in-an-elgrand-part-i.3311/"&gt;Part I&lt;/a&gt;, &lt;a href="http://elgrandoc.uk/forum/index.php?threads/touring-europe-in-an-elgrand-part-ii.3312/"&gt;Part II&lt;/a&gt;, &lt;a href="http://elgrandoc.uk/forum/index.php?threads/touring-europe-in-an-elgrand-part-iii.3313/"&gt;Part III&lt;/a&gt;, &lt;a href="http://elgrandoc.uk/forum/index.php?threads/touring-europe-in-an-elgrand-part-iv.3314/"&gt;Part IV&lt;/a&gt;, &lt;a href="http://elgrandoc.uk/forum/index.php?threads/touring-europe-in-an-elgrand-part-v.3315/"&gt;Part V&lt;/a&gt;. After just a couple of days these posts have already garnered significant praise and numerous follow on questions so I feel pretty good about having spent the time writing these posts.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As an aside, it occurred to me that this work could almost have been a case-study in Agile development. Not being a carpenter or mechanic and my work on cars to date having been pretty much limited to topping up the oil, I started this project from an absolute level of maximum ignorance. Fortunately as both a stake holder and engineer, it was easy to outline use-cases for the work which, while I didn't actually document them at the time, would have included some choice ones such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"As a driver I need a non-Japanese navigation system so I know where the smeg I'm supposed to be going!",&lt;/li&gt;
&lt;li&gt;"As a parent I need a fridge in the van so that we can keep food for the baby food fresh and - hopefully - the baby healthy" and,&lt;/li&gt;
&lt;li&gt;"As a caffeine junkie I need a means of making coffee in the van so that I don't murder everyone the morning after we spend a night in it!"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These could then be naturally prioritized and, where possible, undertaken concurrently by my partner and I. If something went well, we could close it off and move onto the next thing; if it didn't we could reevaluate it's value / priority in light of what we had. This way we managed to hit our deadline (the ferry departure - which we put off "committing" to until as late as possible) with as much high value work done as possible. More importantly, at departure (aka deployment) time, we had a significantly lower level of ignorance such that, should anything go wrong while we were "live", we'd actually stand a chance of fixing it without having to - possibly literally - "roll back" to England.&lt;/p&gt;
&lt;p&gt;Yes, yes, some of this terminology is undoubtedly tenuous but, having had hours and hours to reflect on this work while driving around Europe, it was rewarding to see how much more effective an iterative approach to problem solving can be. Who knows if we'd ever have got away if we'd tried to plan &lt;em&gt;everything&lt;/em&gt; up front.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Anyway, we departed England in mid-May and returned mid-July and had a truly fantastic adventure. In &lt;strong&gt;58 days&lt;/strong&gt; we travelled &lt;strong&gt;7912 miles&lt;/strong&gt; and visited &lt;strong&gt;20 countries&lt;/strong&gt;. Along the way we met a number of old friends, made a lot of new friends and saw some amazing sites and scenery. We learned a lot, not only about the various cultures / histories around Europe but also about ourselves and our daughter. And we laughed a lot, mostly about the quirks of the various cultures we were experiencing but also - in retrospect at least - about some of the challenges we faced along the way; like having to park up in a field at a border crossing in order to buy the vignette that would allow us to drive the car in the country we were about to cross in to, and getting visited by both a swarm of monstrously huge locust type insects and a heavily armed and somewhat suspicious (the Elgrand has very dark privacy glass) border guard.&lt;/p&gt;
&lt;p&gt;We really did experience so much that I frequently find myself remembering something from the trip that a) I had somehow already forgotten and b) seems like both a lifetime &lt;em&gt;and&lt;/em&gt; just a few days ago. Fortunately my partner kept a very detailed (and anonymised) blog of our journey in which she does an terrific job of capturing the fun and freedom we enjoyed while away. Should you be interested, you can read it &lt;a href="https://bigspune.wordpress.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And now we're home. The baby has started nursery and my partner is returning to work. While I'm still having to consciously work out where I am when I wake up in the night (seriously, after two months of staying somewhere different every night, this seems to be a thing at the moment) and we're still trying to get the house back into some semblance of order, life is returning to our own special approximation of normality.&lt;/p&gt;
&lt;p&gt;For four days a week and for the foreseeable future, I will have pretty much all day to do... well, pretty much anything I want. It's an exciting time in the world of .NET given the recent release of .NET Core and Microsoft's assimilation of Xamarin. Graph and document data stores (aka NoSQL) continue to make inroads on the traditional strong holds of legacy relational databases. And there are some profound changes in the broader world of software development such as the continuing move towards containerized deployment and cloud infrastructures. I'm very much looking forward to investigating / leveraging all these in the months to come.&lt;/p&gt;
&lt;p&gt;Who knows where it will lead. I will certainly be keeping my ear to the ground should an exciting job/contract come around. Ideally I'd want something remote / freelance which I could do on my terms and, should the right opportunity drop in my lap, I'd certainly be open to it. That said, what I'd really like to do is resurrect my company and see where I can take it. I have a couple of ideas with potential but will hold off on developing them until I've refamiliarised myself with the current trends in software development because, even though it's only been a few months, it feels like I've been out of the game for years.&lt;/p&gt;
&lt;p&gt;Well, game on.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Yes, it's been over three months since my last blog post. "What have you been doing?" I hear you (the hypothetical reader) ask. Well... well I'll tell you.&lt;/p&gt;</summary>
	</entry>
</feed>S extension which runs a &lt;code&gt;pub get&lt;/code&gt; command whenever you save the &lt;code&gt;pubspec.yaml&lt;/code&gt; file. As you can probably guess from the output (shown below) the purpose of this command is to retrieve/update any dependencies you've declared in the &lt;code&gt;dependencies&lt;/code&gt; section. Also, once the &lt;code&gt;pub get&lt;/code&gt; command has run, you should see a new &lt;code&gt;pubspec.lock&lt;/code&gt; file appear in the root directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;img src="https://plt5eg-dm2306.files.1drv.com/y3mCavvhl_SorCHUuY_oZ01TMQ9jkjpMy_I48Eotp3TlC5s-TRU0JaznDIYoihtHpfFj6A3Aqwu9eEKDhOQaK7jnEO7g6UscYBqeBp5yLg_PnzxGgWQpVTwgrxkJeOw8EUet6KhgGEn2Lkm3IYfP4-K-SEXXvKT4G64DcweiAsnQ-k?width=660&amp;amp;height=497&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:800; margin-top: 6px; margin-bottom: 6px;" alt="Get Dependencies"&gt;
&lt;ol start="11"&gt;
&lt;li&gt;As we're focusing on using Dart for web development, we'll also add an HTML document we'll manipulate using Dart. To do this, simply add new file named &lt;code&gt;index.html&lt;/code&gt; to the &lt;code&gt;web&lt;/code&gt; directory and populate it with the following:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Getting Started With Dart&amp;lt;/title&amp;gt;
    &amp;lt;script type="application/dart" src="main.dart"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1 id="header"&amp;gt;Hmm... what should I say?&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="12"&gt;
&lt;li&gt;At this point you should have the following layout in your project and we're ready start start writing some Dart.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;    [Source Directory]
    |-&amp;gt; [Project Name] (i.e. "GettingStartedWithDart")
    | | -&amp;gt; lib
    | | -&amp;gt; web
    | | | -&amp;gt; index.html
    | | | -&amp;gt; main.dart
    | | -&amp;gt; pubspec.lock
    | | -&amp;gt; pubspec.yaml
&lt;/pre&gt;
&lt;ol start="13"&gt;
&lt;li&gt;In the &lt;code&gt;main.dart&lt;/code&gt; file, add the following code. (Note, if you type this code rather than copy-pasting it, you'll notice the excellent intellisense features provided by VSC and implemented beautifully by Dart VS.)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;import 'dart:html';

void main() {
  querySelector('#header').text = 'Ah yes... Hello World!!!';
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="14"&gt;
&lt;li&gt;Right, now we have an HTML file and some Dart code and we're ready to run. While you could run this code manually from the command line, if you're intending on doing more than just this getting started guide, I'd very much recommend setting up some task runners in VSC. This is done by opening the command palette (&lt;code&gt;Ctrl-Shift-P&lt;/code&gt;) and typing &lt;code&gt;Configure Task Runner&lt;/code&gt;, which should show you the command &lt;code&gt;Tasks: Configure Task Runner&lt;/code&gt;. Select this and you will see a list of build systems VSC can automatically create a task runner for (shown below). As Dart isn't one of the predefined templates, select "Others" to create an empty Tasks file.&lt;/li&gt;
&lt;/ol&gt;
&lt;img src="https://plt4eg-dm2306.files.1drv.com/y3mjQOmP0yb0-3KfLb34MamSLnq13qKN0jSNcEHLMIOn7u2kbunZuaN74mec-0mquSOr05it5RZC6Uov1rnpiweb1sL6a96iKFJYLWC_6hSlldbQjHriAKAa71-k_8Dop-6iLRxL38BNzOMqii4VNZVfIlFgV_Ow2hG1GtMwXjB7A4?width=660&amp;amp;height=497&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:800; margin-top: 6px; margin-bottom: 6px;" alt="Configure Task Runner"&gt;
&lt;ol start="15"&gt;
&lt;li&gt;This command should create a new file called &lt;code&gt;tasks.json&lt;/code&gt; in a new &lt;code&gt;.vscode&lt;/code&gt; directory and will contain the following json.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "0.1.0",
    "command": "echo",
    "isShellCommand": true,
    "args": ["Hello World"],
    "showOutput": "always"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="16"&gt;
&lt;li&gt;If you're not familiar with configuring VSC task runners, I'd very much recommend clicking the link in this file to see what the task runner is able to do and how to configure it. However, for your convenience, I have provided my configuration below:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "0.1.0",
    "command": "C:\\Apps\\dart-sdk\\bin\\pub.bat",
    "isShellCommand": true,
    "args": [],
    "showOutput": "always",
    "echoCommand": true,
    "tasks": [
        {
            "taskName": "build",
            "args": [],
            "isWatching": false
         },
        {
            "taskName": "serve",
            "args": [],
            "isWatching": true
         }
    ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="17"&gt;
&lt;li&gt;&lt;p&gt;As you will probably be able to determine, this file contains two tasks; one named &lt;code&gt;build&lt;/code&gt; and the other named &lt;code&gt;serve&lt;/code&gt;. The &lt;code&gt;build&lt;/code&gt; command compiles your code and checks for errors while the &lt;code&gt;serve&lt;/code&gt; command sets up a local web-server (by default bound to port 8080) capable of serving the content of the &lt;code&gt;web&lt;/code&gt; directory. Lets try both.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open the command palette (&lt;code&gt;Ctrl-Shift-P&lt;/code&gt;), delete the '&amp;gt;' prompt and then type &lt;code&gt;task&lt;/code&gt; followed by a space. You should see the two tasks defined above appear. Continue to &lt;code&gt;build&lt;/code&gt; and then hit return. At this point, the output pane should appear displaying the &lt;code&gt;Tasks&lt;/code&gt; output and your code should be compiled (and, transpiled into JS!). This is shown below:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img src="https://plt3eg-dm2306.files.1drv.com/y3ma_gmHNRQHH3HaNTz8ytRLamtMwlzmi0dRSYl1aqncp0Zy-RaUW_qLGOebg_PpgRdCoYLQYFcuRWZ3FC_Y6jJ0Qw6n5rWbGxvUMzi5_yqitbOf3DrJUVAkQi9Th0JvQmzLysrJGrnhrVe7Z2eYY6uUse_0o88veVTn8eYaIZsHnw?width=660&amp;amp;height=497&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:800; margin-top: 6px; margin-bottom: 6px;" alt="Tasks and Build output"&gt;
&lt;ol start="19"&gt;
&lt;li&gt;&lt;p&gt;If everything is successful, you should see the message '&lt;code&gt;Built 2 files to "build"&lt;/code&gt;'. Now we can test our Dart code by serving it through &lt;code&gt;pub server&lt;/code&gt;. To do this, start the &lt;code&gt;task serve&lt;/code&gt; task in a similar manner to the &lt;code&gt;task build&lt;/code&gt; above. As this task is an &lt;code&gt;isWatching&lt;/code&gt; command, the task won't complete when run but will emit messages to the output pane when changes occur. This is shown below:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With a local web-server serving out HTML file and Dart code, we can finally start to use Dartium to run the code. Note that, we're using Dartium because we'll be executing the Dart code directly (rather than the transpiled JavaScript) and Dartium has a built-in Dart runtime which allows for advanced debugging of our Dart code. Start Dartium but executing it from either command line or GUI (exists at &lt;code&gt;C:\Apps\chromium\chrome.exe&lt;/code&gt; for me) and, once started, navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt; and you should see the following:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img src="https://nbtqeg-dm2306.files.1drv.com/y3m2wj9PACazah5vdBUyW8AOGu__v3AbjHyzU66QtsvCuHVA4Ya710e4bjVJv4GdNiXlige7q8waQcphwiH8FtLZG8eu-z7cOiBPi-vqx8KfgkYPvwVrtPIpJoCmdIDR8LmO8DIqkHSvNe6Kz5q65IoWi1DRivqqpX5YUET_9zEmS4?width=660&amp;amp;height=542&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:800; margin-top: 6px; margin-bottom: 6px;" alt="Success!!"&gt;
&lt;p&gt;Congratulations, you've just run your first Dart code.&lt;/p&gt;
&lt;p&gt;If something went wrong and you don't see the header text change from 'Hmm... what should I say?' to 'Ah yes... Hello World!!!' then you can use Dartium's Developer Tools (&lt;code&gt;Ctrl-Shift-I&lt;/code&gt;) to view errors and add breakpoints so you can work out what has gone wrong. The developer tools are shown here:&lt;/p&gt;
&lt;img src="https://nbtpeg-dm2306.files.1drv.com/y3my4JbT3bsQcqBOB3NANuaB-FMf_vBHNlAc1qm5QaXuFVEWxIV1YuoIj7gu-QJZtFOgS_gHJBknLl8J_LY9shZ_YtYf8Jf0BL9T0r4NMf3dv5XXvZt0x_J0IqZ7lurmX5MJP7oyA9FMO8oMkm29BAxoQI2jV-s6dyO2APv8dvXRTM?width=660&amp;amp;height=542&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:800; margin-top: 6px; margin-bottom: 6px;" alt="Dartium Developer Tools"&gt;
&lt;p&gt;You can find loads more information online about the &lt;a href="https://www.dartlang.org/"&gt;Dart Language&lt;/a&gt; and &lt;a href="https://webdev.dartlang.org/"&gt;Dart Web Development&lt;/a&gt;. Versions of Dart are changing rapidly (there was a minor update while writing this post!) and a thriving &lt;a href="https://www.dartlang.org/community"&gt;support community&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a (mainly) C# developer I found Dart super easy to get up to speed with and the Visual Studio Code/Dartium combo to be extremely productive. Hopefully you will too.&lt;/p&gt;
&lt;p&gt;Have fun.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Visual Studio Code is rapidly becoming my go-to editor for anything not project-oriented C#/F#. I've switched from &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; to &lt;a href="(https://code.visualstudio.com/)"&gt;VSC&lt;/a&gt; for editing my (&lt;a href="http://ian.bebbs.co.uk/posts/NewBlogUsingWyam"&gt;statically-generated, Markdown driven&lt;/a&gt;) blog and have used it for authoring powershell scripts, dockerfiles and much, much more. So, when I decided I wanted to write some &lt;a href="https://www.dartlang.org/"&gt;Dart&lt;/a&gt; code, it was the obvious choice.&lt;/p&gt;</summary>
	</entry>
</feed>iler to output the transpiled JavaScript files to the &lt;code&gt;js&lt;/code&gt; folder where they can be used by the client browser.&lt;/li&gt;
&lt;li&gt;You should now have a &lt;code&gt;tsconfig.json&lt;/code&gt; file that looks like this:
&lt;pre class="prettyprint"&gt;&lt;code&gt;{
  "compilerOptions": {
    "noImplicitAny": false,
    "noEmitOnError": true,
    "removeComments": false,
    "sourceMap": true,
    "target": "es5",
    "outDir": "js"
  },
  "exclude": [
    "Scripts",
    "wwwroot"
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Add a &lt;code&gt;ts&lt;/code&gt; folder to the solution.&lt;/li&gt;
&lt;li&gt;Add an &lt;code&gt;app.ts&lt;/code&gt; typescript file to the &lt;code&gt;ts&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Add references to Rx and WebRx to the &lt;code&gt;app.ts&lt;/code&gt; file.&lt;br&gt;
WebRx requires that you add an explicit reference to &lt;code&gt;rx.all.d.ts&lt;/code&gt; prior to the reference to &lt;code&gt;web.rx.d.ts&lt;/code&gt; in order for the Rx module to be brought into scope. The references should therefore be added like this:
&lt;pre class="prettyprint"&gt;&lt;code&gt;/// &amp;lt;reference path="../Scripts/rx.all.d.ts"/&amp;gt;
/// &amp;lt;reference path="../Scripts/typings/web.rx.d.ts" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Implement view / view model code&lt;br&gt;
You can now re-implement the code from &lt;code&gt;app.js&lt;/code&gt; as TypeScript virtually verbatim but do note how you get Intellisense for all the methods and properties of &lt;code&gt;wx&lt;/code&gt; module.&lt;/li&gt;
&lt;li&gt;Fix compilation error with call to &lt;code&gt;wx.applyBindings&lt;/code&gt;&lt;br&gt;
The &lt;code&gt;wx.applyBindings&lt;/code&gt; method &lt;em&gt;requires&lt;/em&gt; a &lt;code&gt;model&lt;/code&gt; parameter which, in JavaScript, is defaulted but in TypeScript causes a compilation error. To resolve this, simply pass an empty object to the method.&lt;/li&gt;
&lt;li&gt;Your &lt;code&gt;app.ts&lt;/code&gt; file should now look like this:
&lt;pre class="prettyprint"&gt;&lt;code&gt;/// &amp;lt;reference path="../Scripts/rx.all.d.ts"/&amp;gt;
/// &amp;lt;reference path="../Scripts/typings/web.rx.d.ts" /&amp;gt;

wx.app.component('hello', {
    viewModel: function () {
        this.firstName = 'Bart';
        this.lastName = 'Simpson';
    },
    template: 'The name is &amp;lt;span data-bind="text: firstName + \' \' + lastName"&amp;gt;&amp;lt;/span&amp;gt;'
});

wx.router.state({
    name: "$",
    views: { 'main': "hello" }
});

wx.router.reload();

wx.applyBindings({});
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Compile the project and include the generated &lt;code&gt;js/app.js&lt;/code&gt; and &lt;code&gt;js/app.js.map&lt;/code&gt; files into the project.&lt;/li&gt;
&lt;li&gt;Hit F5 and you should again see the message 'The name is Bart Simpson' displayed in your default browser.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Congratulations, you're now ready to develop your application using full Intellisense and in the comfort of the knowledge that the compiler (well, transpiler) will pick up any syntactic bugs you may inadvertently create.&lt;/p&gt;
&lt;p&gt;As always, the completed &lt;a href="https://github.com/ibebbs/BlogProjects/tree/master/WebRxWithTypeScript"&gt;source code for this post&lt;/a&gt; can be found in the &lt;a href="https://github.com/ibebbs/BlogProjects"&gt;BlogProjects repository&lt;/a&gt; on &lt;a href="https://github.com/ibebbs"&gt;Github&lt;/a&gt;&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;In &lt;a href="./posts/RxWeb"&gt;part 1&lt;/a&gt; of this series I showed how to set up a project structure that allows you to start using WebRx from within Visual Studio. While fairly simple, the example provides a great illustration of you how WebRx allows you to separate your view and view model.&lt;/p&gt;</summary>
	</entry>
</feed> StackOverflow Reputation accumulation across the year (light blue line) with gains shown day-by-day (dark blue boxes). While I predominantly consider it a distraction, I really enjoy answering questions on StackOverflow, probably due to the awesome &lt;a href="https://en.wikipedia.org/wiki/Gamification"&gt;gamification&lt;/a&gt; employed on the &lt;a href="http://stackexchange.com/"&gt;StackExchange&lt;/a&gt; sites.&lt;/p&gt;
&lt;p&gt;While there is a low level of fairly constant reputation gain, most of the gains came in short bursts. As discussed above, I attribute this losing focus on my main projects due to inactivity. Still, there are far worse forms of procrastination than helping people and I consider this a relatively good use of time.&lt;/p&gt;
&lt;p&gt;I am currently endeavoring to get the 'Fanatic' badge (visit StackOverflow for 100 days consecutively) but trying not to let it get in the way of other work. This usually means only answering questions when I can quickly point the asker in the right direction but I will occasionally field a more challenging question when it's &lt;a href="http://stackoverflow.com/questions/tagged/system.reactive"&gt;something I'm particularly interested in&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Blog posts&lt;/h2&gt;
&lt;p&gt;Over the course of the year I have written and published 22 blog posts - totaling nearly 24,000 words - across a range of subjects including:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3D PRINTING (1) APACHE KAFKA (1) APACHE ZOOKEEPER (1) ATTACHED PROPERTY (1) BDD (1) BEHAVIORAL (1) BLOG (3) CAREER BREAK (1) CLIENT-SIDE FRAMEWORK (2) CQRS (1) DART (1) DATAFLOW (1) DOCKER (1) DVD RIPPING (1) EF (1) ELASTIC STACK (4) ELASTICSEARCH (4) EVENT SOURCING (1) EVENTS (1) EVENTSOURCING (1) FUTURE (1) GITHUB (2) GROWTH (1) HYPERLINK (1) IOT (1) JAVASCRIPT (2) JS (1) KIBANA (4) LITTLELITTLE (1) LOGSTASH (4) MAPLIN (1) MONITORING (4) MVVM (1) NANOSERVER (1) NETWORKING (4) PARENTHOOD (1) PATTERNS (1) PRODUCTIVITY (1) RASPBERRYPI (1) REACTIVE (7) REST (1) ROBOX (1) RX (7) SQL (1) STATE MACHINES (1) SVG (1) SYSLOG (4) TESTING (1) TODDLERBOX (3) TOOLKIT (2) TPL (2) TRAVEL (1) TYPESCRIPT (1) UWP (7) VISUAL STUDIO (2) VISUAL STUDIO CODE (1) WEBRX (2) WINDOWS SERVER 2016 (1) WYAM (1) XAML (2) XBOX (3)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This content garners an average of around 110 unique visitors and 400 page views every month.&lt;/p&gt;
&lt;p&gt;One of these posts - &lt;a href="https://blogs.msdn.microsoft.com/dotnet/2016/09/07/the-week-in-net-972016/"&gt;"The absolute easiest way to use SVG icons in UWP apps"&lt;/a&gt; was featured in &lt;a href="https://blogs.msdn.microsoft.com/dotnet/2016/09/07/the-week-in-net-972016/"&gt;"The week in .NET – 9/7/2016"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All in, I think I've added some valuable content to my blog this last year but feel like I should have tried harder to increase it's reach. While writing these blog posts inevitably takes a considerably amount of time, I intend to continue making as many new posts as possible, hopefully across an increased range of subjects and - by submitting to various aggregation blogs - with increased readership.&lt;/p&gt;
&lt;h2&gt;Commitments&lt;/h2&gt;
&lt;p&gt;This timeline displays any days I had expected to work yet was unable to for a variety of reasons. Over the course of the year this accounted for 42 days, mostly the Thursdays that have become my "daddy-day-care" day and during which I take my daughter swimming. While these "commitments" would have been worked around had I been in full-time employment, the flexibility of working when I can as opposed to when I have to has undoubtedly led to a greater degree of motiviation and concentration when I am in front of the computer.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Saturday morning, having realized that we had no commitments or prior engagements until the following Tuesday, my partner and I decided to go on a trip. We rapidly packed bags for ourselves and our little girl, threw them in the van and set off with no set destination other than "the south-west". We ended up staying in a small farm on Exmoor and having a terrific time walking on the moor and visiting nearby sites.&lt;/p&gt;</summary>
	</entry>
</feed>oing for it. The possibilities of what you can create are mind-boggling and the sensation of watching them come into existence exhilarating. Being able to fabricate components I previously had to hack together from off the shelf bits is tremendously empowering and I can unashamedly say that I am completely hooked on 3D printing.&lt;/p&gt;
&lt;p&gt;Furthermore, while I have no direct experience of other 3D printers, I wouldn't hesitate to recommend CEL's Robox printer as - despite still failing the nozzle calibration - it has yet to fail a print and the software is remarkably straight forward and easy to use.&lt;/p&gt;
&lt;p&gt;Watch this space for more adventures in 3D printing as I integrate my new found fabrication abilities into my innumerable ongoing projects. First up: MonsterPi.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;So, I've wanted a 3D printer for a while and recently a perfect storm of events meant I finally took the plunge.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/RxWeb" />
		<id>http://ian.bebbs.co.uk/posts/RxWeb</id>
		<title>Using Rx on the Web</title>
		<updated>2016-03-04T00:00:00Z</updated>
		<content>
                                        


&lt;h2&gt;Finding a framework&lt;/h2&gt;
&lt;p&gt;So, I have recently found myself with a need to dive into the depths of modern web-development and, as I am currently looking to write a highly interactive single-page web application, the first thing to decide on was a client side framework to use. You won't have to read too many of my blog posts to realise that I'm a big fan of &lt;a href="https://msdn.microsoft.com/en-us/data/gg577609.aspx?f=255&amp;amp;MSPPError=-2147217396"&gt;Rx&lt;/a&gt;. I am also keen on the MVVM approach to separating concerns when writing user interfaces. Therefore, during my research of modern web UI frameworks, I was extremely interested when I came across &lt;a href="http://webrxjs.org/"&gt;WebRx&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Billed as "a browser-based MVVM-Framework that combines functional-reactive programming with declarative Data-Binding, Templating and Client-Side Routing" it struck a chord with my UI development style. In fact, it elevates &lt;a href="http://reactivex.io/documentation/observable.html"&gt;Observables&lt;/a&gt; to a first class concept in a manner eerily similar to the ObservableProperty/ObservableCommand classes I wrote for my &lt;a href="https://github.com/ibebbs/Caliburn.Micro.Reactive.Extensions"&gt;Caliburn.Micro.Reactive.Extensions&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;Unfortunately, as a framework, WebRx seems to be struggling to achieve critical mass and therefore there was very limited information available when I decided to attempt to implement the &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;WebRx "Hello World"&lt;/a&gt; example using Visual Studio. As is almost par for the course when using a new framework, I fell at a frustratingly early hurdle and, given the lack of info (seriously, only one tagged post on &lt;a href="https://stackoverflow.com/questions/tagged/webrx"&gt;stackoverflow&lt;/a&gt;!), I had to work through the problem 'old-skool'... ya'know, by actually finding and solving the problem rather than just googling a solution.&lt;/p&gt;
&lt;p&gt;Anyway, I thought I'd put together a post outlining how to get started with this framework in Visual Studio in an attempt to start addressing the lack of info regarding this promising framework.&lt;/p&gt;
&lt;h2&gt;The name is Bart Simpson&lt;/h2&gt;
&lt;p&gt;Rather than the traditional 'Hello World' app, WebRx's 'Getting Started' guide displays a page stating 'The name is Bart Simpson'. This is done in order to demonstrates the MVVM separation of concerns through the use of a view bound to an underlying view model which provides the name 'Bart Simpson'.&lt;/p&gt;
&lt;p&gt;I don't intend to cover the entirety of the getting started guide here, merely the additional/different steps needed to get the project work from Visual Studio. As such, I suggest &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;opening the guide&lt;/a&gt; in a browser and leaving it open while working through the steps below as I will be referring to it extensively.&lt;/p&gt;
&lt;p&gt;First up, open Visual Studio. Pretty much any modern version is fine, I am using Visual Studio 2015 Professional. Start a new project and select 'ASP.NET Web Application'&lt;/p&gt;
&lt;img src="/Content/RxWeb/NewAspWebApplication.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="New ASP.NET Web Application"&gt;
&lt;p&gt;In the following dialog, select an empty ASP.NET Template and click ok.&lt;/p&gt;
&lt;img src="/Content/RxWeb/EmptyAsp452Project.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Empty ASP.NET Template"&gt;
&lt;p&gt;Now we have a web project, lets add a reference to WebRx. This can be done using either the Package Manager Console using the command &lt;code&gt;Install-Package WebRx&lt;/code&gt; or via the visual Nuget package manager as shown below:&lt;/p&gt;
&lt;img src="/Content/RxWeb/InstallWebRxPackage.png" class="img-responsive" style="margin: auto; width:66%; margin-top: 6px; margin-bottom: 6px;" alt="Install WebRx Package"&gt;
&lt;p&gt;Regardless of how you add the reference to WebRx, you will be asked whether you wish to 'Search for TypeScript Typings' as shown below. Just click 'Yes'.&lt;/p&gt;
&lt;img src="/Content/RxWeb/AddTypeScriptTypings.png" class="img-responsive" style="margin: auto; width:300px; margin-top: 6px; margin-bottom: 6px;" alt="Add TypeScript Typings"&gt;
&lt;p&gt;You will also be prompted to accept the license aggrement for a number of RxJs packages which WebRx depends upon; you should accept these too.&lt;/p&gt;
&lt;p&gt;One the reference is added, you should find that a Scripts directory has been added to your solution and which contains a number of 'ts' and 'js' files for both WebRx and RxJs. With this in place, we can then continue with the getting started guide by adding an 'index.html' file to the project and copy pasting the sample 'index.html' file from the WebRx &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;getting started guide&lt;/a&gt;. It should look something like this:&lt;/p&gt;
&lt;img src="/Content/RxWeb/CopyPasteIndexFromGettingStarted.png" class="img-responsive" style="margin: auto; width:400px; margin-top: 6px; margin-bottom: 6px;" alt="Copy Paste Index From Getting Started"&gt;
&lt;p&gt;At this point the eagle-eyed amongst you will notice three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Our scripts are now in a 'bower_modules' directory&lt;br&gt;
As we used Nuget and not bower to install our WebRx dependencies, the script references should be changed to refer to the Scripts directory&lt;/li&gt;
&lt;li&gt;Our scripts directory does not contain a rx.all.js file.&lt;br&gt;
For some reason, WebRx depends on a version of RxJs that does not include an rx.all.js file. To resolve this, simply upgrade to the latest version of RxJs-All, as shown below:
&lt;img src="/Content/RxWeb/UpgradeRxJsAll.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Upgrade RxJs All"&gt;&lt;/li&gt;
&lt;li&gt;We don't have a 'js' folder containing an 'app.js' file.&lt;br&gt;
Because we've not got to that bit yet.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now add a 'js' folder to the solution and add a 'app.js' to it. In this file copy the full 'app.js' sample from the WebRx  &lt;a href="http://webrxjs.org/docs/getting-started.html"&gt;getting started guide&lt;/a&gt; as shown below:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;wx.app.component('hello', {
  viewModel: function() {
    this.firstName = 'Bart';
    this.lastName = 'Simpson';
  },
  template: 'The name is &amp;lt;span data-bind="text: firstName + \' \' + lastName"&amp;gt;&amp;lt;/span&amp;gt;'
});

wx.router.state({
  name: "$",
  views: { 'main': "hello" }
});

wx.router.reload();

wx.applyBindings();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save all, set 'index.html' as the start page and hit F5. If everything went as planned you should now see 'The name is Bart Simpson' displayed in your default browser:&lt;/p&gt;
&lt;img src="/Content/RxWeb/TheNameIsBartSimpson.png" class="img-responsive" style="margin: auto; width:400px; margin-top: 6px; margin-bottom: 6px;" alt="The Name Is Bart Simpson"&gt;
&lt;p&gt;And that's it. While the getting started example doesn't seem very complex, it does show a separation of view and view model. I'm very much looking forward to digging into the details of this very promising framework.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/ibebbs/BlogProjects/tree/master/WebRxWithAsp4"&gt;completed project&lt;/a&gt; for this post can be found in my &lt;a href="https://github.com/ibebbs/BlogProjects"&gt;BlogProjects repository&lt;/a&gt; on &lt;a href="https://github.com/ibebbs"&gt;Github&lt;/a&gt;&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;So, I have recently found myself with a need to dive into the depths of modern web-development and, as I am currently looking to write a highly interactive single-page web application, the first thing to decide on was a client side framework to use. You won't have to read too many of my blog posts to realise that I'm a big fan of &lt;a href="https://msdn.microsoft.com/en-us/data/gg577609.aspx?f=255&amp;amp;MSPPError=-2147217396"&gt;Rx&lt;/a&gt;. I am also keen on the MVVM approach to separating concerns when writing user interfaces. Therefore, during my research of modern web UI frameworks, I was extremely interested when I came across &lt;a href="http://webrxjs.org/"&gt;WebRx&lt;/a&gt; .&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartIV" />
		<id>http://ian.bebbs.co.uk/posts/HomeNetworkMonitoring-PartIV</id>
		<title>Home Network Monitoring - Part IV</title>
		<updated>2016-04-16T00:00:00Z</updated>
		<content>
                                        


&lt;p&gt;In the last post, I used the Logstash &lt;code&gt;dns&lt;/code&gt; filter to translate remote server IP addresses into recognisable domain names. In this post, I will look to perform a similar operation for local IP addresses in order to translate them into recognisable device names.&lt;/p&gt;
&lt;h1&gt;translating local ip addresses to device names&lt;/h1&gt;
&lt;p&gt;While in the last post we could use the &lt;code&gt;dns&lt;/code&gt; filter to perform a reverse dns lookup to resolve a remote domain name for an IP address, this is not possible with local IP addresses. Fortunately, I have two key tools that I can use to perform a similar operation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;While my router behaves as a DHCP server, it has a feature that allows it to always allocate the same IP address to a given MAC address. Therefore I know a given device will always have a specific IP address.&lt;/li&gt;
&lt;li&gt;Logstash provides the &lt;code&gt;translate&lt;/code&gt; filter which allows you to map from one value to another via a dictionary lookup.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With my routers "Bind IP to MAC" function set up, I will author a new &lt;code&gt;yaml&lt;/code&gt; file that meets the specifications outlined in the &lt;code&gt;translate&lt;/code&gt; filter &lt;a href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-translate.html#plugins-filters-translate-destination"&gt;documentation&lt;/a&gt;. It looks like this:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;192.168.1.3: TPLink Range Extender
192.168.1.9: Ricoh Printer
192.168.1.10: Server A
192.168.1.21: PC A
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'll name this file &lt;code&gt;IPLookup.yaml&lt;/code&gt; and save it besides the &lt;code&gt;syslog.config&lt;/code&gt; file. Next I need to add additional filters to &lt;code&gt;syslog.config&lt;/code&gt; which now looks as follows:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&lt;code&gt;input {
  tcp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
  udp {
    port =&amp;gt; 5000
    type =&amp;gt; syslog
  }
}

filter {
    grok {
        match =&amp;gt; [ "message", "&amp;lt;%{POSINT:syslog_pri}&amp;gt;%{SYSLOGTIMESTAMP:syslog_timestamp} Vigor\: Local User \(MAC=%{MAC:source_mac}\): %{IP:source_address}(?::%{POSINT:source_port})? -&amp;gt; %{IP:destination_address}(?::%{POSINT:destination_port})? \((?&amp;lt;protocol&amp;gt;TCP|UDP)\)" ]
        add_tag =&amp;gt; "access"
    }
    if "access" in [tags] {
        mutate {
            add_field =&amp;gt; {
              "source_host" =&amp;gt; "%{[source_address]}"
              "destination_host" =&amp;gt; "%{[destination_address]}"
            }
        }
        dns {
            reverse =&amp;gt; [ "destination_host" ]
            action =&amp;gt; "replace"
            nameserver =&amp;gt; "192.168.1.1"
        }
        translate {
            destination =&amp;gt; "source_host"
            dictionary_path =&amp;gt; "config\IPLookup.yaml"
            fallback =&amp;gt; "%{source_address}"
            field =&amp;gt; "source_address"      
            override =&amp;gt; true   
        }
    }
}

output {
  elasticsearch {
    hosts =&amp;gt; ["192.168.1.30:9200"]
    index =&amp;gt; "syslog-%{+YYYY.MM.dd}"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the &lt;code&gt;translate&lt;/code&gt; filter where I lookup the &lt;code&gt;source_address&lt;/code&gt; field in the &lt;code&gt;IPLookup.yaml&lt;/code&gt; file and put the result in the &lt;code&gt;source_host&lt;/code&gt; field. If not found, the &lt;code&gt;fallback&lt;/code&gt; value instructs the filter to output the &lt;code&gt;source_address&lt;/code&gt; into the &lt;code&gt;source_host&lt;/code&gt; field. The &lt;code&gt;override&lt;/code&gt; value is set to true as the &lt;code&gt;source_host&lt;/code&gt; field is added in the &lt;code&gt;mutate&lt;/code&gt; filter above as a fail-safe.&lt;/p&gt;
&lt;p&gt;With the changes to configuration in place, I once again restart Logstash. Once a syslog message has been received, I get the mapping from ElasticSearch and update it to mark the &lt;code&gt;local_host&lt;/code&gt; field as &lt;code&gt;not_analyzed&lt;/code&gt;. Then, in Kibana, I refresh the field list for the 'syslog-*' index, add 'local_host' to the 'Syslog Messages' saved search, load 'Access By Local Address' visualization and modify it to use 'local_host' rather than the 'local_address' field and save it as 'Access By Local Host'. Finally, I replace this visualization on my dashboard and get the following:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithAccessByLocalHost.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Access By Local Host"&gt;
&lt;h1&gt;further mappings&lt;/h1&gt;
&lt;p&gt;Now I've got the translation of local IP addresses to names working, I'm going to add a few more translations for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP Address to Operating System&lt;/li&gt;
&lt;li&gt;IP Address to Wired/WiFi connection&lt;/li&gt;
&lt;li&gt;TCP and UDP Port to Protocol (using a &lt;a href="http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml"&gt;CSV from IANA&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these in place, the dashboard is starting to come together:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithLocalPortAndOsLookups.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Local Port And Os Lookups"&gt;
&lt;h1&gt;summary&lt;/h1&gt;
&lt;p&gt;In this post, I showed how to display local device names rather than IP addresses by using LogStash's &lt;code&gt;translate&lt;/code&gt; filter. I then used this filter to provide further information about local device and protocols.&lt;/p&gt;
&lt;p&gt;In the next post, I'll show how to add some variation to the dashboard by mapping destination locations.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;In the last post, I used the Logstash &lt;code&gt;dns&lt;/code&gt; filter to translate remote server IP addresses into recognisable domain names. In this post, I will look to perform a similar operation for local IP addresses in order to translate them into recognisable device names.&lt;/p&gt;</summary>
	</entry>
</feed>ram' as shown below.&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-VisualiseDateHistogram.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Visualise Date Histogram"&gt;
&lt;p&gt;With these settings in place, click the 'Apply Changes' button and you should immediately see a chart of the count of syslog messages over time. Note that Kibana has automatically selected an appropriate resolution of column grouping (messages 'per 30 seconds' in the example above) but that this can be changed later if required.&lt;/p&gt;
&lt;p&gt;For now, we want to add this chart to a new dashboard so we can have it available to us at a moments notice. To do this, we first save our visualization by clicking the 'Save Visuaization' button as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-VisualiseSaveSyslogMessagesOverTime.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Visualise Save Syslog Messages Over Time"&gt;
&lt;p&gt;Next we navigate to the 'Dashboard' tab and click the '+' button as prompted. Again, we selected the visualization we just saved as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardAddVisualization.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard Add Visualization"&gt;
&lt;p&gt;With the "Syslog Messages Over Time" visualization added, we make it a usable size by dragging the resize control (button right corner of the visualization) to extend the visualization across the width of the window as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardSizeVisualization.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard Size Visualization"&gt;
&lt;p&gt;Finally, to make it easier to see the messages the histogram refers to, we'll add a table of related Syslog messages onto our dashboard below the histogram. To do this, click the '+' button, selected 'Searches' and then our 'Syslog Messages' search. When the table is added to the dashboard, make it a similar size as the histogram as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithSearch.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Search"&gt;
&lt;p&gt;Once done, we need to save the dashboard so we can reload it any time we need it. Simply click the 'Save Dashboard' button as shown below:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardSaveSyslogMessages.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard Save Syslog Messages"&gt;
&lt;p&gt;Once saved you can bookmark the page and get back to your dashboard any time you like. Furthermore, once saved, you can monkey with the dashboard (explore the data by highlighting various areas of the chart, change time frames, set autorefresh etc) as much as you like knowing you can return to saved version any time.&lt;/p&gt;
&lt;h1&gt;summary&lt;/h1&gt;
&lt;p&gt;In this post, I have outlined how to use a Syslog capable router to send Syslog messages to Logstash and have Logstash store these messages in ElasticSearch for querying. Furthermore we then created a dashboard in which we can explore the number of Syslog messages we received over various timeframes.&lt;/p&gt;
&lt;p&gt;In the next post we'll increase the granularity of the messages we store so that we can start creating more interesting dashboard.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;Home networks are becoming increasingly complex. It is no longer just geeks and techies who have pervasive WiFi through-out their home to which a myriad of devices connect and communicate. When things go wrong or, worse still, the network is compromised by rouge hardware or software it's extremely difficult to work out what has happened and where to start troubleshooting the issue.&lt;/p&gt;</summary>
	</entry>
</feed>;
&lt;pre class="prettyprint"&gt;&lt;code&gt;FROM microsoft/nanoserver
MAINTAINER Ian Bebbington &amp;lt;docker@bebbs.co.uk&amp;gt;
LABEL Description="Zookeeper running on Microsoft Nanoserver" Version="0.1"
ADD Root /
ADD Start-Zookeeper.ps1 /
RUN setx /M JAVA_HOME C:\Apps\Jre
EXPOSE 2181
ENTRYPOINT [ "powershell.exe", "C:/Start-Zookeeper.ps1" ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this one worked. This one started. This one stayed up!&lt;/p&gt;
&lt;h2&gt;Building the Kafka image&lt;/h2&gt;
&lt;p&gt;With the Zookeeper scripts as a pattern, it was ludicrously easy to script up another image for Kafka. Just a few changes to file names and configuration parameters and Kafka started almost first time.&lt;/p&gt;
&lt;p&gt;I won't copy the script or dockerfile here as they're extremely similar to the Zookeeper versions. Instead, all scripts and files used above can be found in my &lt;a href="https://github.com/ibebbs/Docker"&gt;Docker repository on Github&lt;/a&gt; and the resultant images can be found on &lt;a href="https://hub.docker.com/r/ibebbs/"&gt;Docker hub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Moving forward&lt;/h2&gt;
&lt;img src="https://oltymw-dm2306.files.1drv.com/y3mIddKC619ngQYu9mwpyXXi9YgUp-MVwZ9_lR8JRla2AKvMm91LwnW2p0G3GkOZj5X_TXQUap_XULDAaiCWMC5Hx0ZvjKdAjeW7YWqacnwEAgCSZgmgBF1DCH83Zcywki6qKmOXbKkZO_SWmvQHpajyOQRHO1pJNB3ak2YpT6DmX8?width=660&amp;amp;height=371&amp;amp;cropmode=none" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="But I don't want any of that!"&gt;
&lt;blockquote&gt;
&lt;p&gt;But I don't want any of that!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Moving forward, I need to address a couple of short-comings in the Kafka script (specifically the hard-coded IP address for the Zookeeper container) and then look to use Docker Compose to automatically bring up Zookeeper and Kafka on demand.&lt;/p&gt;
&lt;p&gt;It's been an interesting journey so far and I've not even begun to actually use the deployed services yet! Still, it is truly magical to run a docker container and see it boot an entire Windows server and service in just 10-20 seconds and a few hundred Mb.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;For my first blog post of the new year (Happy New Year everyone!!!), I'd like to share some of my recent adventures with Docker on Windows, or, more specifically, Docker on Windows using Nanoserver as the container OS.&lt;/p&gt;</summary>
	</entry>
</feed>  }
}

filter {
    grok {
        match =&amp;gt; [ "message", "&amp;lt;%{POSINT:syslog_pri}&amp;gt;%{SYSLOGTIMESTAMP:syslog_timestamp} Vigor\: Local User \(MAC=%{MAC:source_mac}\): %{IP:source_address}(?::%{POSINT:source_port})? -&amp;gt; %{IP:destination_address}(?::%{POSINT:destination_port})? \((?&amp;lt;protocol&amp;gt;TCP|UDP)\)" ]
        add_tag =&amp;gt; "access"
    }
    if "access" in [tags] {
        mutate {
            add_field =&amp;gt; {
              "source_host" =&amp;gt; "%{[source_address]}"
              "destination_host" =&amp;gt; "%{[destination_address]}"
            }
        }
        dns {
            reverse =&amp;gt; [ "destination_host" ]
            action =&amp;gt; "replace"
            nameserver =&amp;gt; "192.168.1.1"
        }
        translate {
            destination =&amp;gt; "source_host"
            dictionary_path =&amp;gt; "config\IPLookup.yaml"
            fallback =&amp;gt; "%{source_address}"
            field =&amp;gt; "source_address"      
            override =&amp;gt; true   
        }
    }
}

output {
  elasticsearch {
    hosts =&amp;gt; ["192.168.1.30:9200"]
    index =&amp;gt; "syslog-%{+YYYY.MM.dd}"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the &lt;code&gt;translate&lt;/code&gt; filter where I lookup the &lt;code&gt;source_address&lt;/code&gt; field in the &lt;code&gt;IPLookup.yaml&lt;/code&gt; file and put the result in the &lt;code&gt;source_host&lt;/code&gt; field. If not found, the &lt;code&gt;fallback&lt;/code&gt; value instructs the filter to output the &lt;code&gt;source_address&lt;/code&gt; into the &lt;code&gt;source_host&lt;/code&gt; field. The &lt;code&gt;override&lt;/code&gt; value is set to true as the &lt;code&gt;source_host&lt;/code&gt; field is added in the &lt;code&gt;mutate&lt;/code&gt; filter above as a fail-safe.&lt;/p&gt;
&lt;p&gt;With the changes to configuration in place, I once again restart Logstash. Once a syslog message has been received, I get the mapping from ElasticSearch and update it to mark the &lt;code&gt;local_host&lt;/code&gt; field as &lt;code&gt;not_analyzed&lt;/code&gt;. Then, in Kibana, I refresh the field list for the 'syslog-*' index, add 'local_host' to the 'Syslog Messages' saved search, load 'Access By Local Address' visualization and modify it to use 'local_host' rather than the 'local_address' field and save it as 'Access By Local Host'. Finally, I replace this visualization on my dashboard and get the following:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithAccessByLocalHost.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Access By Local Host"&gt;
&lt;h1&gt;further mappings&lt;/h1&gt;
&lt;p&gt;Now I've got the translation of local IP addresses to names working, I'm going to add a few more translations for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP Address to Operating System&lt;/li&gt;
&lt;li&gt;IP Address to Wired/WiFi connection&lt;/li&gt;
&lt;li&gt;TCP and UDP Port to Protocol (using a &lt;a href="http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml"&gt;CSV from IANA&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these in place, the dashboard is starting to come together:&lt;/p&gt;
&lt;img src="/Content/HomeNetworkMonitoring/Kibana-DashboardWithLocalPortAndOsLookups.png" class="img-responsive" style="margin: auto; width:600px; margin-top: 6px; margin-bottom: 6px;" alt="Kibana Dashboard With Local Port And Os Lookups"&gt;
&lt;h1&gt;summary&lt;/h1&gt;
&lt;p&gt;In this post, I showed how to display local device names rather than IP addresses by using LogStash's &lt;code&gt;translate&lt;/code&gt; filter. I then used this filter to provide further information about local device and protocols.&lt;/p&gt;
&lt;p&gt;In the next post, I'll show how to add some variation to the dashboard by mapping destination locations.&lt;/p&gt;



                                </content>
		<summary>&lt;p&gt;In the last post, I used the Logstash &lt;code&gt;dns&lt;/code&gt; filter to translate remote server IP addresses into recognisable domain names. In this post, I will look to perform a similar operation for local IP addresses in order to translate them into recognisable device names.&lt;/p&gt;</summary>
	</entry>
</feed>